{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0; // The random number is a js implementation of the Xorshift PRNG\n\nvar randseed = new Array(4); // Xorshift: [x, y, z, w] 32 bit values\n\nfunction seedrand(seed) {\n  for (var i = 0; i < randseed.length; i++) {\n    randseed[i] = 0;\n  }\n\n  for (var _i = 0; _i < seed.length; _i++) {\n    randseed[_i % 4] = (randseed[_i % 4] << 5) - randseed[_i % 4] + seed.charCodeAt(_i);\n  }\n}\n\nfunction rand() {\n  // based on Java's String.hashCode(), expanded to 4 32bit values\n  var t = randseed[0] ^ randseed[0] << 11;\n  randseed[0] = randseed[1];\n  randseed[1] = randseed[2];\n  randseed[2] = randseed[3];\n  randseed[3] = randseed[3] ^ randseed[3] >> 19 ^ t ^ t >> 8;\n  return (randseed[3] >>> 0) / (1 << 31 >>> 0);\n}\n\nfunction createColor() {\n  //saturation is the whole color spectrum\n  var h = Math.floor(rand() * 360); //saturation goes from 40 to 100, it avoids greyish colors\n\n  var s = rand() * 60 + 40 + '%'; //lightness can be anything from 0 to 100, but probabilities are a bell curve around 50%\n\n  var l = (rand() + rand() + rand() + rand()) * 25 + '%';\n  var color = 'hsl(' + h + ',' + s + ',' + l + ')';\n  return color;\n}\n\nfunction createImageData(size) {\n  var width = size; // Only support square icons for now\n\n  var height = size;\n  var dataWidth = Math.ceil(width / 2);\n  var mirrorWidth = width - dataWidth;\n  var data = [];\n\n  for (var y = 0; y < height; y++) {\n    var row = [];\n\n    for (var x = 0; x < dataWidth; x++) {\n      // this makes foreground and background color to have a 43% (1/2.3) probability\n      // spot color has 13% chance\n      row[x] = Math.floor(rand() * 2.3);\n    }\n\n    var r = row.slice(0, mirrorWidth);\n    r.reverse();\n    row = row.concat(r);\n\n    for (var i = 0; i < row.length; i++) {\n      data.push(row[i]);\n    }\n  }\n\n  return data;\n}\n\nfunction createCanvas(imageData, color, scale, bgcolor, spotcolor) {\n  var c = document.createElement('canvas');\n  var width = Math.sqrt(imageData.length);\n  c.width = c.height = width * scale;\n  var cc = c.getContext('2d');\n  cc.fillStyle = bgcolor;\n  cc.fillRect(0, 0, c.width, c.height);\n  cc.fillStyle = color;\n\n  for (var i = 0; i < imageData.length; i++) {\n    var row = Math.floor(i / width);\n    var col = i % width; // if data is 2, choose spot color, if 1 choose foreground\n\n    cc.fillStyle = imageData[i] === 1 ? color : spotcolor; // if data is 0, leave the background\n\n    if (imageData[i]) {\n      cc.fillRect(col * scale, row * scale, scale, scale);\n    }\n  }\n\n  return c;\n}\n\nfunction createIcon(opts) {\n  opts = opts || {};\n  var size = opts.size || 8;\n  var scale = opts.scale || 4;\n  var seed = opts.seed || Math.floor(Math.random() * Math.pow(10, 16)).toString(16);\n  seedrand(seed);\n  var color = opts.color || createColor();\n  var bgcolor = opts.bgcolor || createColor();\n  var spotcolor = opts.spotcolor || createColor();\n  var imageData = createImageData(size);\n  var canvas = createCanvas(imageData, color, scale, bgcolor, spotcolor);\n  return canvas;\n}\n\nvar _default = createIcon;\nexports[\"default\"] = _default;","map":{"version":3,"sources":["/Users/karel/Documents/eth/my-eth-app/node_modules/@ensdomains/react-ens-address/dist/utils/blockies.js"],"names":["Object","defineProperty","exports","value","randseed","Array","seedrand","seed","i","length","_i","charCodeAt","rand","t","createColor","h","Math","floor","s","l","color","createImageData","size","width","height","dataWidth","ceil","mirrorWidth","data","y","row","x","r","slice","reverse","concat","push","createCanvas","imageData","scale","bgcolor","spotcolor","c","document","createElement","sqrt","cc","getContext","fillStyle","fillRect","col","createIcon","opts","random","pow","toString","canvas","_default"],"mappings":"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","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n// The random number is a js implementation of the Xorshift PRNG\nvar randseed = new Array(4); // Xorshift: [x, y, z, w] 32 bit values\n\nfunction seedrand(seed) {\n  for (var i = 0; i < randseed.length; i++) {\n    randseed[i] = 0;\n  }\n\n  for (var _i = 0; _i < seed.length; _i++) {\n    randseed[_i % 4] = (randseed[_i % 4] << 5) - randseed[_i % 4] + seed.charCodeAt(_i);\n  }\n}\n\nfunction rand() {\n  // based on Java's String.hashCode(), expanded to 4 32bit values\n  var t = randseed[0] ^ randseed[0] << 11;\n  randseed[0] = randseed[1];\n  randseed[1] = randseed[2];\n  randseed[2] = randseed[3];\n  randseed[3] = randseed[3] ^ randseed[3] >> 19 ^ t ^ t >> 8;\n  return (randseed[3] >>> 0) / (1 << 31 >>> 0);\n}\n\nfunction createColor() {\n  //saturation is the whole color spectrum\n  var h = Math.floor(rand() * 360); //saturation goes from 40 to 100, it avoids greyish colors\n\n  var s = rand() * 60 + 40 + '%'; //lightness can be anything from 0 to 100, but probabilities are a bell curve around 50%\n\n  var l = (rand() + rand() + rand() + rand()) * 25 + '%';\n  var color = 'hsl(' + h + ',' + s + ',' + l + ')';\n  return color;\n}\n\nfunction createImageData(size) {\n  var width = size; // Only support square icons for now\n\n  var height = size;\n  var dataWidth = Math.ceil(width / 2);\n  var mirrorWidth = width - dataWidth;\n  var data = [];\n\n  for (var y = 0; y < height; y++) {\n    var row = [];\n\n    for (var x = 0; x < dataWidth; x++) {\n      // this makes foreground and background color to have a 43% (1/2.3) probability\n      // spot color has 13% chance\n      row[x] = Math.floor(rand() * 2.3);\n    }\n\n    var r = row.slice(0, mirrorWidth);\n    r.reverse();\n    row = row.concat(r);\n\n    for (var i = 0; i < row.length; i++) {\n      data.push(row[i]);\n    }\n  }\n\n  return data;\n}\n\nfunction createCanvas(imageData, color, scale, bgcolor, spotcolor) {\n  var c = document.createElement('canvas');\n  var width = Math.sqrt(imageData.length);\n  c.width = c.height = width * scale;\n  var cc = c.getContext('2d');\n  cc.fillStyle = bgcolor;\n  cc.fillRect(0, 0, c.width, c.height);\n  cc.fillStyle = color;\n\n  for (var i = 0; i < imageData.length; i++) {\n    var row = Math.floor(i / width);\n    var col = i % width; // if data is 2, choose spot color, if 1 choose foreground\n\n    cc.fillStyle = imageData[i] === 1 ? color : spotcolor; // if data is 0, leave the background\n\n    if (imageData[i]) {\n      cc.fillRect(col * scale, row * scale, scale, scale);\n    }\n  }\n\n  return c;\n}\n\nfunction createIcon(opts) {\n  opts = opts || {};\n  var size = opts.size || 8;\n  var scale = opts.scale || 4;\n  var seed = opts.seed || Math.floor(Math.random() * Math.pow(10, 16)).toString(16);\n  seedrand(seed);\n  var color = opts.color || createColor();\n  var bgcolor = opts.bgcolor || createColor();\n  var spotcolor = opts.spotcolor || createColor();\n  var imageData = createImageData(size);\n  var canvas = createCanvas(imageData, color, scale, bgcolor, spotcolor);\n  return canvas;\n}\n\nvar _default = createIcon;\nexports[\"default\"] = _default;"]},"metadata":{},"sourceType":"script"}