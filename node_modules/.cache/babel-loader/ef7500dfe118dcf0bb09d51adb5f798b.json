{"ast":null,"code":"\"use strict\";\n/* Autogenerated file. Do not edit manually. */\n\n/* tslint:disable */\n\n/* eslint-disable */\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.DNSSEC__factory = void 0;\n\nconst ethers_1 = require(\"ethers\");\n\nclass DNSSEC__factory {\n  static connect(address, signerOrProvider) {\n    return new ethers_1.Contract(address, _abi, signerOrProvider);\n  }\n\n}\n\nexports.DNSSEC__factory = DNSSEC__factory;\nconst _abi = [{\n  anonymous: false,\n  inputs: [{\n    indexed: false,\n    internalType: \"uint8\",\n    name: \"id\",\n    type: \"uint8\"\n  }, {\n    indexed: false,\n    internalType: \"address\",\n    name: \"addr\",\n    type: \"address\"\n  }],\n  name: \"AlgorithmUpdated\",\n  type: \"event\"\n}, {\n  anonymous: false,\n  inputs: [{\n    indexed: false,\n    internalType: \"uint8\",\n    name: \"id\",\n    type: \"uint8\"\n  }, {\n    indexed: false,\n    internalType: \"address\",\n    name: \"addr\",\n    type: \"address\"\n  }],\n  name: \"DigestUpdated\",\n  type: \"event\"\n}, {\n  anonymous: false,\n  inputs: [{\n    indexed: false,\n    internalType: \"uint8\",\n    name: \"id\",\n    type: \"uint8\"\n  }, {\n    indexed: false,\n    internalType: \"address\",\n    name: \"addr\",\n    type: \"address\"\n  }],\n  name: \"NSEC3DigestUpdated\",\n  type: \"event\"\n}, {\n  anonymous: false,\n  inputs: [{\n    indexed: false,\n    internalType: \"bytes\",\n    name: \"name\",\n    type: \"bytes\"\n  }, {\n    indexed: false,\n    internalType: \"bytes\",\n    name: \"rrset\",\n    type: \"bytes\"\n  }],\n  name: \"RRSetUpdated\",\n  type: \"event\"\n}, {\n  inputs: [],\n  name: \"anchors\",\n  outputs: [{\n    internalType: \"bytes\",\n    name: \"\",\n    type: \"bytes\"\n  }],\n  stateMutability: \"view\",\n  type: \"function\"\n}, {\n  inputs: [{\n    internalType: \"uint16\",\n    name: \"deleteType\",\n    type: \"uint16\"\n  }, {\n    internalType: \"bytes\",\n    name: \"deleteName\",\n    type: \"bytes\"\n  }, {\n    components: [{\n      internalType: \"bytes\",\n      name: \"rrset\",\n      type: \"bytes\"\n    }, {\n      internalType: \"bytes\",\n      name: \"sig\",\n      type: \"bytes\"\n    }],\n    internalType: \"struct DNSSEC.RRSetWithSignature\",\n    name: \"nsec\",\n    type: \"tuple\"\n  }, {\n    internalType: \"bytes\",\n    name: \"proof\",\n    type: \"bytes\"\n  }],\n  name: \"deleteRRSet\",\n  outputs: [],\n  stateMutability: \"nonpayable\",\n  type: \"function\"\n}, {\n  inputs: [{\n    internalType: \"uint16\",\n    name: \"deleteType\",\n    type: \"uint16\"\n  }, {\n    internalType: \"bytes\",\n    name: \"deleteName\",\n    type: \"bytes\"\n  }, {\n    components: [{\n      internalType: \"bytes\",\n      name: \"rrset\",\n      type: \"bytes\"\n    }, {\n      internalType: \"bytes\",\n      name: \"sig\",\n      type: \"bytes\"\n    }],\n    internalType: \"struct DNSSEC.RRSetWithSignature\",\n    name: \"closestEncloser\",\n    type: \"tuple\"\n  }, {\n    components: [{\n      internalType: \"bytes\",\n      name: \"rrset\",\n      type: \"bytes\"\n    }, {\n      internalType: \"bytes\",\n      name: \"sig\",\n      type: \"bytes\"\n    }],\n    internalType: \"struct DNSSEC.RRSetWithSignature\",\n    name: \"nextClosest\",\n    type: \"tuple\"\n  }, {\n    internalType: \"bytes\",\n    name: \"dnskey\",\n    type: \"bytes\"\n  }],\n  name: \"deleteRRSetNSEC3\",\n  outputs: [],\n  stateMutability: \"nonpayable\",\n  type: \"function\"\n}, {\n  inputs: [{\n    internalType: \"uint16\",\n    name: \"dnstype\",\n    type: \"uint16\"\n  }, {\n    internalType: \"bytes\",\n    name: \"name\",\n    type: \"bytes\"\n  }],\n  name: \"rrdata\",\n  outputs: [{\n    internalType: \"uint32\",\n    name: \"\",\n    type: \"uint32\"\n  }, {\n    internalType: \"uint32\",\n    name: \"\",\n    type: \"uint32\"\n  }, {\n    internalType: \"bytes20\",\n    name: \"\",\n    type: \"bytes20\"\n  }],\n  stateMutability: \"view\",\n  type: \"function\"\n}, {\n  inputs: [{\n    components: [{\n      internalType: \"bytes\",\n      name: \"rrset\",\n      type: \"bytes\"\n    }, {\n      internalType: \"bytes\",\n      name: \"sig\",\n      type: \"bytes\"\n    }],\n    internalType: \"struct DNSSEC.RRSetWithSignature\",\n    name: \"input\",\n    type: \"tuple\"\n  }, {\n    internalType: \"bytes\",\n    name: \"proof\",\n    type: \"bytes\"\n  }],\n  name: \"submitRRSet\",\n  outputs: [{\n    internalType: \"bytes\",\n    name: \"\",\n    type: \"bytes\"\n  }],\n  stateMutability: \"nonpayable\",\n  type: \"function\"\n}, {\n  inputs: [{\n    components: [{\n      internalType: \"bytes\",\n      name: \"rrset\",\n      type: \"bytes\"\n    }, {\n      internalType: \"bytes\",\n      name: \"sig\",\n      type: \"bytes\"\n    }],\n    internalType: \"struct DNSSEC.RRSetWithSignature[]\",\n    name: \"input\",\n    type: \"tuple[]\"\n  }, {\n    internalType: \"bytes\",\n    name: \"proof\",\n    type: \"bytes\"\n  }],\n  name: \"submitRRSets\",\n  outputs: [{\n    internalType: \"bytes\",\n    name: \"\",\n    type: \"bytes\"\n  }],\n  stateMutability: \"nonpayable\",\n  type: \"function\"\n}];","map":{"version":3,"sources":["/Users/karel/Documents/eth/my-eth-app/node_modules/@ensdomains/dnssecoraclejs/dist/typechain/factories/DNSSEC__factory.js"],"names":["Object","defineProperty","exports","value","DNSSEC__factory","ethers_1","require","connect","address","signerOrProvider","Contract","_abi","anonymous","inputs","indexed","internalType","name","type","outputs","stateMutability","components"],"mappings":"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","sourcesContent":["\"use strict\";\n/* Autogenerated file. Do not edit manually. */\n/* tslint:disable */\n/* eslint-disable */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.DNSSEC__factory = void 0;\nconst ethers_1 = require(\"ethers\");\nclass DNSSEC__factory {\n    static connect(address, signerOrProvider) {\n        return new ethers_1.Contract(address, _abi, signerOrProvider);\n    }\n}\nexports.DNSSEC__factory = DNSSEC__factory;\nconst _abi = [\n    {\n        anonymous: false,\n        inputs: [\n            {\n                indexed: false,\n                internalType: \"uint8\",\n                name: \"id\",\n                type: \"uint8\",\n            },\n            {\n                indexed: false,\n                internalType: \"address\",\n                name: \"addr\",\n                type: \"address\",\n            },\n        ],\n        name: \"AlgorithmUpdated\",\n        type: \"event\",\n    },\n    {\n        anonymous: false,\n        inputs: [\n            {\n                indexed: false,\n                internalType: \"uint8\",\n                name: \"id\",\n                type: \"uint8\",\n            },\n            {\n                indexed: false,\n                internalType: \"address\",\n                name: \"addr\",\n                type: \"address\",\n            },\n        ],\n        name: \"DigestUpdated\",\n        type: \"event\",\n    },\n    {\n        anonymous: false,\n        inputs: [\n            {\n                indexed: false,\n                internalType: \"uint8\",\n                name: \"id\",\n                type: \"uint8\",\n            },\n            {\n                indexed: false,\n                internalType: \"address\",\n                name: \"addr\",\n                type: \"address\",\n            },\n        ],\n        name: \"NSEC3DigestUpdated\",\n        type: \"event\",\n    },\n    {\n        anonymous: false,\n        inputs: [\n            {\n                indexed: false,\n                internalType: \"bytes\",\n                name: \"name\",\n                type: \"bytes\",\n            },\n            {\n                indexed: false,\n                internalType: \"bytes\",\n                name: \"rrset\",\n                type: \"bytes\",\n            },\n        ],\n        name: \"RRSetUpdated\",\n        type: \"event\",\n    },\n    {\n        inputs: [],\n        name: \"anchors\",\n        outputs: [\n            {\n                internalType: \"bytes\",\n                name: \"\",\n                type: \"bytes\",\n            },\n        ],\n        stateMutability: \"view\",\n        type: \"function\",\n    },\n    {\n        inputs: [\n            {\n                internalType: \"uint16\",\n                name: \"deleteType\",\n                type: \"uint16\",\n            },\n            {\n                internalType: \"bytes\",\n                name: \"deleteName\",\n                type: \"bytes\",\n            },\n            {\n                components: [\n                    {\n                        internalType: \"bytes\",\n                        name: \"rrset\",\n                        type: \"bytes\",\n                    },\n                    {\n                        internalType: \"bytes\",\n                        name: \"sig\",\n                        type: \"bytes\",\n                    },\n                ],\n                internalType: \"struct DNSSEC.RRSetWithSignature\",\n                name: \"nsec\",\n                type: \"tuple\",\n            },\n            {\n                internalType: \"bytes\",\n                name: \"proof\",\n                type: \"bytes\",\n            },\n        ],\n        name: \"deleteRRSet\",\n        outputs: [],\n        stateMutability: \"nonpayable\",\n        type: \"function\",\n    },\n    {\n        inputs: [\n            {\n                internalType: \"uint16\",\n                name: \"deleteType\",\n                type: \"uint16\",\n            },\n            {\n                internalType: \"bytes\",\n                name: \"deleteName\",\n                type: \"bytes\",\n            },\n            {\n                components: [\n                    {\n                        internalType: \"bytes\",\n                        name: \"rrset\",\n                        type: \"bytes\",\n                    },\n                    {\n                        internalType: \"bytes\",\n                        name: \"sig\",\n                        type: \"bytes\",\n                    },\n                ],\n                internalType: \"struct DNSSEC.RRSetWithSignature\",\n                name: \"closestEncloser\",\n                type: \"tuple\",\n            },\n            {\n                components: [\n                    {\n                        internalType: \"bytes\",\n                        name: \"rrset\",\n                        type: \"bytes\",\n                    },\n                    {\n                        internalType: \"bytes\",\n                        name: \"sig\",\n                        type: \"bytes\",\n                    },\n                ],\n                internalType: \"struct DNSSEC.RRSetWithSignature\",\n                name: \"nextClosest\",\n                type: \"tuple\",\n            },\n            {\n                internalType: \"bytes\",\n                name: \"dnskey\",\n                type: \"bytes\",\n            },\n        ],\n        name: \"deleteRRSetNSEC3\",\n        outputs: [],\n        stateMutability: \"nonpayable\",\n        type: \"function\",\n    },\n    {\n        inputs: [\n            {\n                internalType: \"uint16\",\n                name: \"dnstype\",\n                type: \"uint16\",\n            },\n            {\n                internalType: \"bytes\",\n                name: \"name\",\n                type: \"bytes\",\n            },\n        ],\n        name: \"rrdata\",\n        outputs: [\n            {\n                internalType: \"uint32\",\n                name: \"\",\n                type: \"uint32\",\n            },\n            {\n                internalType: \"uint32\",\n                name: \"\",\n                type: \"uint32\",\n            },\n            {\n                internalType: \"bytes20\",\n                name: \"\",\n                type: \"bytes20\",\n            },\n        ],\n        stateMutability: \"view\",\n        type: \"function\",\n    },\n    {\n        inputs: [\n            {\n                components: [\n                    {\n                        internalType: \"bytes\",\n                        name: \"rrset\",\n                        type: \"bytes\",\n                    },\n                    {\n                        internalType: \"bytes\",\n                        name: \"sig\",\n                        type: \"bytes\",\n                    },\n                ],\n                internalType: \"struct DNSSEC.RRSetWithSignature\",\n                name: \"input\",\n                type: \"tuple\",\n            },\n            {\n                internalType: \"bytes\",\n                name: \"proof\",\n                type: \"bytes\",\n            },\n        ],\n        name: \"submitRRSet\",\n        outputs: [\n            {\n                internalType: \"bytes\",\n                name: \"\",\n                type: \"bytes\",\n            },\n        ],\n        stateMutability: \"nonpayable\",\n        type: \"function\",\n    },\n    {\n        inputs: [\n            {\n                components: [\n                    {\n                        internalType: \"bytes\",\n                        name: \"rrset\",\n                        type: \"bytes\",\n                    },\n                    {\n                        internalType: \"bytes\",\n                        name: \"sig\",\n                        type: \"bytes\",\n                    },\n                ],\n                internalType: \"struct DNSSEC.RRSetWithSignature[]\",\n                name: \"input\",\n                type: \"tuple[]\",\n            },\n            {\n                internalType: \"bytes\",\n                name: \"proof\",\n                type: \"bytes\",\n            },\n        ],\n        name: \"submitRRSets\",\n        outputs: [\n            {\n                internalType: \"bytes\",\n                name: \"\",\n                type: \"bytes\",\n            },\n        ],\n        stateMutability: \"nonpayable\",\n        type: \"function\",\n    },\n];\n"]},"metadata":{},"sourceType":"script"}