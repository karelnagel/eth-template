{"ast":null,"code":"'use strict';\n\nexports.toString = function (type) {\n  switch (type) {\n    // list at\n    // https://www.iana.org/assignments/dns-parameters/dns-parameters.xhtml#dns-parameters-11\n    case 1:\n      return 'LLQ';\n\n    case 2:\n      return 'UL';\n\n    case 3:\n      return 'NSID';\n\n    case 5:\n      return 'DAU';\n\n    case 6:\n      return 'DHU';\n\n    case 7:\n      return 'N3U';\n\n    case 8:\n      return 'CLIENT_SUBNET';\n\n    case 9:\n      return 'EXPIRE';\n\n    case 10:\n      return 'COOKIE';\n\n    case 11:\n      return 'TCP_KEEPALIVE';\n\n    case 12:\n      return 'PADDING';\n\n    case 13:\n      return 'CHAIN';\n\n    case 14:\n      return 'KEY_TAG';\n\n    case 26946:\n      return 'DEVICEID';\n  }\n\n  if (type < 0) {\n    return null;\n  }\n\n  return `OPTION_${type}`;\n};\n\nexports.toCode = function (name) {\n  if (typeof name === 'number') {\n    return name;\n  }\n\n  if (!name) {\n    return -1;\n  }\n\n  switch (name.toUpperCase()) {\n    case 'OPTION_0':\n      return 0;\n\n    case 'LLQ':\n      return 1;\n\n    case 'UL':\n      return 2;\n\n    case 'NSID':\n      return 3;\n\n    case 'OPTION_4':\n      return 4;\n\n    case 'DAU':\n      return 5;\n\n    case 'DHU':\n      return 6;\n\n    case 'N3U':\n      return 7;\n\n    case 'CLIENT_SUBNET':\n      return 8;\n\n    case 'EXPIRE':\n      return 9;\n\n    case 'COOKIE':\n      return 10;\n\n    case 'TCP_KEEPALIVE':\n      return 11;\n\n    case 'PADDING':\n      return 12;\n\n    case 'CHAIN':\n      return 13;\n\n    case 'KEY_TAG':\n      return 14;\n\n    case 'DEVICEID':\n      return 26946;\n\n    case 'OPTION_65535':\n      return 65535;\n  }\n\n  const m = name.match(/_(\\d+)$/);\n\n  if (m) {\n    return parseInt(m[1], 10);\n  }\n\n  return -1;\n};","map":{"version":3,"sources":["/Users/karel/Documents/eth/my-eth-app/node_modules/dns-packet/optioncodes.js"],"names":["exports","toString","type","toCode","name","toUpperCase","m","match","parseInt"],"mappings":"AAAA;;AAEAA,OAAO,CAACC,QAAR,GAAmB,UAAUC,IAAV,EAAgB;AACjC,UAAQA,IAAR;AACE;AACA;AACA,SAAK,CAAL;AAAQ,aAAO,KAAP;;AACR,SAAK,CAAL;AAAQ,aAAO,IAAP;;AACR,SAAK,CAAL;AAAQ,aAAO,MAAP;;AACR,SAAK,CAAL;AAAQ,aAAO,KAAP;;AACR,SAAK,CAAL;AAAQ,aAAO,KAAP;;AACR,SAAK,CAAL;AAAQ,aAAO,KAAP;;AACR,SAAK,CAAL;AAAQ,aAAO,eAAP;;AACR,SAAK,CAAL;AAAQ,aAAO,QAAP;;AACR,SAAK,EAAL;AAAS,aAAO,QAAP;;AACT,SAAK,EAAL;AAAS,aAAO,eAAP;;AACT,SAAK,EAAL;AAAS,aAAO,SAAP;;AACT,SAAK,EAAL;AAAS,aAAO,OAAP;;AACT,SAAK,EAAL;AAAS,aAAO,SAAP;;AACT,SAAK,KAAL;AAAY,aAAO,UAAP;AAhBd;;AAkBA,MAAIA,IAAI,GAAG,CAAX,EAAc;AACZ,WAAO,IAAP;AACD;;AACD,SAAQ,UAASA,IAAK,EAAtB;AACD,CAvBD;;AAyBAF,OAAO,CAACG,MAAR,GAAiB,UAAUC,IAAV,EAAgB;AAC/B,MAAI,OAAOA,IAAP,KAAgB,QAApB,EAA8B;AAC5B,WAAOA,IAAP;AACD;;AACD,MAAI,CAACA,IAAL,EAAW;AACT,WAAO,CAAC,CAAR;AACD;;AACD,UAAQA,IAAI,CAACC,WAAL,EAAR;AACE,SAAK,UAAL;AAAiB,aAAO,CAAP;;AACjB,SAAK,KAAL;AAAY,aAAO,CAAP;;AACZ,SAAK,IAAL;AAAW,aAAO,CAAP;;AACX,SAAK,MAAL;AAAa,aAAO,CAAP;;AACb,SAAK,UAAL;AAAiB,aAAO,CAAP;;AACjB,SAAK,KAAL;AAAY,aAAO,CAAP;;AACZ,SAAK,KAAL;AAAY,aAAO,CAAP;;AACZ,SAAK,KAAL;AAAY,aAAO,CAAP;;AACZ,SAAK,eAAL;AAAsB,aAAO,CAAP;;AACtB,SAAK,QAAL;AAAe,aAAO,CAAP;;AACf,SAAK,QAAL;AAAe,aAAO,EAAP;;AACf,SAAK,eAAL;AAAsB,aAAO,EAAP;;AACtB,SAAK,SAAL;AAAgB,aAAO,EAAP;;AAChB,SAAK,OAAL;AAAc,aAAO,EAAP;;AACd,SAAK,SAAL;AAAgB,aAAO,EAAP;;AAChB,SAAK,UAAL;AAAiB,aAAO,KAAP;;AACjB,SAAK,cAAL;AAAqB,aAAO,KAAP;AAjBvB;;AAmBA,QAAMC,CAAC,GAAGF,IAAI,CAACG,KAAL,CAAW,SAAX,CAAV;;AACA,MAAID,CAAJ,EAAO;AACL,WAAOE,QAAQ,CAACF,CAAC,CAAC,CAAD,CAAF,EAAO,EAAP,CAAf;AACD;;AACD,SAAO,CAAC,CAAR;AACD,CA/BD","sourcesContent":["'use strict'\n\nexports.toString = function (type) {\n  switch (type) {\n    // list at\n    // https://www.iana.org/assignments/dns-parameters/dns-parameters.xhtml#dns-parameters-11\n    case 1: return 'LLQ'\n    case 2: return 'UL'\n    case 3: return 'NSID'\n    case 5: return 'DAU'\n    case 6: return 'DHU'\n    case 7: return 'N3U'\n    case 8: return 'CLIENT_SUBNET'\n    case 9: return 'EXPIRE'\n    case 10: return 'COOKIE'\n    case 11: return 'TCP_KEEPALIVE'\n    case 12: return 'PADDING'\n    case 13: return 'CHAIN'\n    case 14: return 'KEY_TAG'\n    case 26946: return 'DEVICEID'\n  }\n  if (type < 0) {\n    return null\n  }\n  return `OPTION_${type}`\n}\n\nexports.toCode = function (name) {\n  if (typeof name === 'number') {\n    return name\n  }\n  if (!name) {\n    return -1\n  }\n  switch (name.toUpperCase()) {\n    case 'OPTION_0': return 0\n    case 'LLQ': return 1\n    case 'UL': return 2\n    case 'NSID': return 3\n    case 'OPTION_4': return 4\n    case 'DAU': return 5\n    case 'DHU': return 6\n    case 'N3U': return 7\n    case 'CLIENT_SUBNET': return 8\n    case 'EXPIRE': return 9\n    case 'COOKIE': return 10\n    case 'TCP_KEEPALIVE': return 11\n    case 'PADDING': return 12\n    case 'CHAIN': return 13\n    case 'KEY_TAG': return 14\n    case 'DEVICEID': return 26946\n    case 'OPTION_65535': return 65535\n  }\n  const m = name.match(/_(\\d+)$/)\n  if (m) {\n    return parseInt(m[1], 10)\n  }\n  return -1\n}\n"]},"metadata":{},"sourceType":"script"}