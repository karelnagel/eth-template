{"ast":null,"code":"\"use strict\";\n\nvar __extends = this && this.__extends || function () {\n  var extendStatics = Object.setPrototypeOf || {\n    __proto__: []\n  } instanceof Array && function (d, b) {\n    d.__proto__ = b;\n  } || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n  };\n\n  return function (d, b) {\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n/**\n * Module containing bunch of JSON related stuff.\n */\n\nvar LoggerOptions_1 = require(\"../log/LoggerOptions\");\n\nvar DataStructures_1 = require(\"./DataStructures\");\n\nvar JSONTypeImpl = function () {\n  function JSONTypeImpl(value) {\n    this._value = value;\n  }\n\n  JSONTypeImpl.prototype.getValue = function () {\n    return this._value;\n  };\n\n  JSONTypeImpl.prototype.toString = function () {\n    var value = this.getValue();\n\n    if (value != null) {\n      return value.toString();\n    }\n\n    return \"null\";\n  };\n\n  return JSONTypeImpl;\n}();\n\nvar JSONBooleanType = function (_super) {\n  __extends(JSONBooleanType, _super);\n\n  function JSONBooleanType(value) {\n    return _super.call(this, value) || this;\n  }\n\n  return JSONBooleanType;\n}(JSONTypeImpl);\n\nvar JSONNumberType = function (_super) {\n  __extends(JSONNumberType, _super);\n\n  function JSONNumberType(value) {\n    return _super.call(this, value) || this;\n  }\n\n  return JSONNumberType;\n}(JSONTypeImpl);\n\nvar JSONStringType = function (_super) {\n  __extends(JSONStringType, _super);\n\n  function JSONStringType(value) {\n    return _super.call(this, value) || this;\n  }\n\n  JSONStringType.prototype.toString = function () {\n    var value = this.getValue();\n\n    if (value != null) {\n      return JSON.stringify(value.toString());\n    }\n\n    return \"null\";\n  };\n\n  return JSONStringType;\n}(JSONTypeImpl);\n\nvar JSONObjectType = function (_super) {\n  __extends(JSONObjectType, _super);\n\n  function JSONObjectType(value) {\n    return _super.call(this, value) || this;\n  }\n\n  return JSONObjectType;\n}(JSONTypeImpl);\n\nvar JSONArrayType = function (_super) {\n  __extends(JSONArrayType, _super);\n\n  function JSONArrayType(value) {\n    return _super.call(this, value) || this;\n  }\n\n  JSONArrayType.prototype.toString = function () {\n    var value = this.getValue();\n\n    if (value != null) {\n      return value.toString();\n    }\n\n    return \"null\";\n  };\n\n  return JSONArrayType;\n}(JSONTypeImpl);\n\nvar JSONNullType = function (_super) {\n  __extends(JSONNullType, _super);\n\n  function JSONNullType() {\n    return _super.call(this, null) || this;\n  }\n\n  JSONNullType.prototype.toString = function () {\n    return \"null\";\n  };\n\n  return JSONNullType;\n}(JSONTypeImpl);\n\nvar JSONTypeConverter = function () {\n  function JSONTypeConverter() {}\n\n  JSONTypeConverter.toJSONType = function (value) {\n    if (value === null) {\n      return new JSONNullType();\n    }\n\n    if (typeof value === \"string\") {\n      return new JSONStringType(value);\n    }\n\n    if (typeof value === \"number\") {\n      return new JSONNumberType(value);\n    }\n\n    if (typeof value === \"boolean\") {\n      return new JSONBooleanType(value);\n    }\n\n    if (value instanceof JSONObject) {\n      return new JSONObjectType(value);\n    }\n\n    throw new Error(\"Type not supported for value: \" + value);\n  };\n\n  return JSONTypeConverter;\n}();\n\nvar JSONObject = function () {\n  function JSONObject() {\n    this.values = new DataStructures_1.SimpleMap();\n  }\n\n  JSONObject.prototype.addBoolean = function (name, value) {\n    this.checkName(name);\n    JSONObject.checkValue(value);\n    this.values.put(name, new JSONBooleanType(value));\n    return this;\n  };\n\n  JSONObject.prototype.addNumber = function (name, value) {\n    this.checkName(name);\n    JSONObject.checkValue(value);\n    this.values.put(name, new JSONNumberType(value));\n    return this;\n  };\n\n  JSONObject.prototype.addString = function (name, value) {\n    this.checkName(name);\n    JSONObject.checkValue(value);\n    this.values.put(name, new JSONStringType(value));\n    return this;\n  };\n\n  JSONObject.prototype.addNull = function (name) {\n    this.checkName(name);\n    this.values.put(name, new JSONNullType());\n    return this;\n  };\n\n  JSONObject.prototype.addArray = function (name, array) {\n    this.checkName(name);\n    JSONObject.checkValue(array);\n\n    if (array == null) {\n      throw new Error(\"Cannot add array as null\");\n    }\n\n    this.values.put(name, new JSONArrayType(array));\n    return this;\n  };\n\n  JSONObject.prototype.addObject = function (name, object) {\n    this.checkName(name);\n    JSONObject.checkValue(object);\n\n    if (object == null) {\n      throw new Error(\"Cannot add object as null\");\n    }\n\n    this.values.put(name, new JSONObjectType(object));\n    return this;\n  };\n\n  JSONObject.prototype.toString = function (pretty) {\n    var _this = this;\n\n    if (pretty === void 0) {\n      pretty = false;\n    }\n\n    var comma = false;\n    var buffer = new DataStructures_1.StringBuilder();\n    buffer.append(\"{\");\n    this.values.keys().forEach(function (key) {\n      var value = _this.values.get(key);\n\n      if (value != null) {\n        if (comma) {\n          buffer.append(\",\");\n        }\n\n        buffer.append('\"').append(key).append('\":').append(value.toString());\n        comma = true;\n      }\n    });\n    buffer.append(\"}\");\n    return buffer.toString();\n  };\n\n  JSONObject.prototype.checkName = function (name) {\n    if (name == null || name === undefined) {\n      throw new Error(\"Name is null or undefined\");\n    }\n\n    if (this.values.exists(name)) {\n      throw new Error(\"Name \" + name + \" is already present for this object\");\n    }\n  };\n\n  JSONObject.checkValue = function (value) {\n    if (value === undefined) {\n      throw new Error(\"Value is undefined\");\n    }\n  };\n\n  return JSONObject;\n}();\n\nexports.JSONObject = JSONObject;\n\nvar JSONArray = function () {\n  function JSONArray() {\n    this.objects = [];\n  }\n\n  JSONArray.prototype.add = function (object) {\n    if (object === undefined) {\n      throw new Error(\"Object is not allowed to be undefined\");\n    }\n\n    this.objects.push(JSONTypeConverter.toJSONType(object));\n    return this;\n  };\n\n  JSONArray.prototype.toString = function (pretty) {\n    if (pretty === void 0) {\n      pretty = false;\n    }\n\n    var buffer = new DataStructures_1.StringBuilder();\n    buffer.append(\"[\");\n    this.objects.forEach(function (value, index) {\n      if (index > 0) {\n        buffer.append(\",\");\n      }\n\n      buffer.append(value.toString());\n    });\n    buffer.append(\"]\");\n    return buffer.toString();\n  };\n\n  return JSONArray;\n}();\n\nexports.JSONArray = JSONArray;\n/**\n * Utility class that helps us convert things to and from json (not for normal usage).\n */\n\nvar JSONHelper = function () {\n  function JSONHelper() {}\n\n  JSONHelper.categoryToJSON = function (cat, recursive) {\n    /*\n     {\n     \"categories\":\n     [\n     { id=1,\n     name: \"x\",\n     parent: null,\n     logLevel: \"Error\"\n     },\n     { id=2,\n     name: \"y\",\n     parent: 1,\n     logLevel: \"Error\"\n     }\n     ]\n     }\n     */\n    var arr = new JSONArray();\n\n    JSONHelper._categoryToJSON(cat, arr, recursive);\n\n    var object = new JSONObject();\n    object.addArray(\"categories\", arr);\n    return object;\n  };\n\n  JSONHelper._categoryToJSON = function (cat, arr, recursive) {\n    var object = new JSONObject();\n    object.addNumber(\"id\", cat.id);\n    object.addString(\"name\", cat.name);\n    object.addString(\"logLevel\", LoggerOptions_1.LogLevel[cat.logLevel].toString());\n\n    if (cat.parent != null) {\n      object.addNumber(\"parent\", cat.parent.id);\n    } else {\n      object.addNull(\"parent\");\n    }\n\n    arr.add(object);\n\n    if (recursive) {\n      cat.children.forEach(function (child) {\n        JSONHelper._categoryToJSON(child, arr, recursive);\n      });\n    }\n  };\n\n  return JSONHelper;\n}();\n\nexports.JSONHelper = JSONHelper;","map":{"version":3,"sources":["../../../src/logging/utils/JSONHelper.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * Module containing bunch of JSON related stuff.\n */\nvar LoggerOptions_1 = require(\"../log/LoggerOptions\");\nvar DataStructures_1 = require(\"./DataStructures\");\nvar JSONTypeImpl = (function () {\n    function JSONTypeImpl(value) {\n        this._value = value;\n    }\n    JSONTypeImpl.prototype.getValue = function () {\n        return this._value;\n    };\n    JSONTypeImpl.prototype.toString = function () {\n        var value = this.getValue();\n        if (value != null) {\n            return value.toString();\n        }\n        return \"null\";\n    };\n    return JSONTypeImpl;\n}());\nvar JSONBooleanType = (function (_super) {\n    __extends(JSONBooleanType, _super);\n    function JSONBooleanType(value) {\n        return _super.call(this, value) || this;\n    }\n    return JSONBooleanType;\n}(JSONTypeImpl));\nvar JSONNumberType = (function (_super) {\n    __extends(JSONNumberType, _super);\n    function JSONNumberType(value) {\n        return _super.call(this, value) || this;\n    }\n    return JSONNumberType;\n}(JSONTypeImpl));\nvar JSONStringType = (function (_super) {\n    __extends(JSONStringType, _super);\n    function JSONStringType(value) {\n        return _super.call(this, value) || this;\n    }\n    JSONStringType.prototype.toString = function () {\n        var value = this.getValue();\n        if (value != null) {\n            return JSON.stringify(value.toString());\n        }\n        return \"null\";\n    };\n    return JSONStringType;\n}(JSONTypeImpl));\nvar JSONObjectType = (function (_super) {\n    __extends(JSONObjectType, _super);\n    function JSONObjectType(value) {\n        return _super.call(this, value) || this;\n    }\n    return JSONObjectType;\n}(JSONTypeImpl));\nvar JSONArrayType = (function (_super) {\n    __extends(JSONArrayType, _super);\n    function JSONArrayType(value) {\n        return _super.call(this, value) || this;\n    }\n    JSONArrayType.prototype.toString = function () {\n        var value = this.getValue();\n        if (value != null) {\n            return value.toString();\n        }\n        return \"null\";\n    };\n    return JSONArrayType;\n}(JSONTypeImpl));\nvar JSONNullType = (function (_super) {\n    __extends(JSONNullType, _super);\n    function JSONNullType() {\n        return _super.call(this, null) || this;\n    }\n    JSONNullType.prototype.toString = function () {\n        return \"null\";\n    };\n    return JSONNullType;\n}(JSONTypeImpl));\nvar JSONTypeConverter = (function () {\n    function JSONTypeConverter() {\n    }\n    JSONTypeConverter.toJSONType = function (value) {\n        if (value === null) {\n            return new JSONNullType();\n        }\n        if (typeof value === \"string\") {\n            return new JSONStringType(value);\n        }\n        if (typeof value === \"number\") {\n            return new JSONNumberType(value);\n        }\n        if (typeof value === \"boolean\") {\n            return new JSONBooleanType(value);\n        }\n        if (value instanceof JSONObject) {\n            return new JSONObjectType(value);\n        }\n        throw new Error(\"Type not supported for value: \" + value);\n    };\n    return JSONTypeConverter;\n}());\nvar JSONObject = (function () {\n    function JSONObject() {\n        this.values = new DataStructures_1.SimpleMap();\n    }\n    JSONObject.prototype.addBoolean = function (name, value) {\n        this.checkName(name);\n        JSONObject.checkValue(value);\n        this.values.put(name, new JSONBooleanType(value));\n        return this;\n    };\n    JSONObject.prototype.addNumber = function (name, value) {\n        this.checkName(name);\n        JSONObject.checkValue(value);\n        this.values.put(name, new JSONNumberType(value));\n        return this;\n    };\n    JSONObject.prototype.addString = function (name, value) {\n        this.checkName(name);\n        JSONObject.checkValue(value);\n        this.values.put(name, new JSONStringType(value));\n        return this;\n    };\n    JSONObject.prototype.addNull = function (name) {\n        this.checkName(name);\n        this.values.put(name, new JSONNullType());\n        return this;\n    };\n    JSONObject.prototype.addArray = function (name, array) {\n        this.checkName(name);\n        JSONObject.checkValue(array);\n        if (array == null) {\n            throw new Error(\"Cannot add array as null\");\n        }\n        this.values.put(name, new JSONArrayType(array));\n        return this;\n    };\n    JSONObject.prototype.addObject = function (name, object) {\n        this.checkName(name);\n        JSONObject.checkValue(object);\n        if (object == null) {\n            throw new Error(\"Cannot add object as null\");\n        }\n        this.values.put(name, new JSONObjectType(object));\n        return this;\n    };\n    JSONObject.prototype.toString = function (pretty) {\n        var _this = this;\n        if (pretty === void 0) { pretty = false; }\n        var comma = false;\n        var buffer = new DataStructures_1.StringBuilder();\n        buffer.append(\"{\");\n        this.values.keys().forEach(function (key) {\n            var value = _this.values.get(key);\n            if (value != null) {\n                if (comma) {\n                    buffer.append(\",\");\n                }\n                buffer.append('\"').append(key).append('\":').append(value.toString());\n                comma = true;\n            }\n        });\n        buffer.append(\"}\");\n        return buffer.toString();\n    };\n    JSONObject.prototype.checkName = function (name) {\n        if (name == null || name === undefined) {\n            throw new Error(\"Name is null or undefined\");\n        }\n        if (this.values.exists(name)) {\n            throw new Error(\"Name \" + name + \" is already present for this object\");\n        }\n    };\n    JSONObject.checkValue = function (value) {\n        if (value === undefined) {\n            throw new Error(\"Value is undefined\");\n        }\n    };\n    return JSONObject;\n}());\nexports.JSONObject = JSONObject;\nvar JSONArray = (function () {\n    function JSONArray() {\n        this.objects = [];\n    }\n    JSONArray.prototype.add = function (object) {\n        if (object === undefined) {\n            throw new Error(\"Object is not allowed to be undefined\");\n        }\n        this.objects.push(JSONTypeConverter.toJSONType(object));\n        return this;\n    };\n    JSONArray.prototype.toString = function (pretty) {\n        if (pretty === void 0) { pretty = false; }\n        var buffer = new DataStructures_1.StringBuilder();\n        buffer.append(\"[\");\n        this.objects.forEach(function (value, index) {\n            if (index > 0) {\n                buffer.append(\",\");\n            }\n            buffer.append(value.toString());\n        });\n        buffer.append(\"]\");\n        return buffer.toString();\n    };\n    return JSONArray;\n}());\nexports.JSONArray = JSONArray;\n/**\n * Utility class that helps us convert things to and from json (not for normal usage).\n */\nvar JSONHelper = (function () {\n    function JSONHelper() {\n    }\n    JSONHelper.categoryToJSON = function (cat, recursive) {\n        /*\n         {\n         \"categories\":\n         [\n         { id=1,\n         name: \"x\",\n         parent: null,\n         logLevel: \"Error\"\n         },\n         { id=2,\n         name: \"y\",\n         parent: 1,\n         logLevel: \"Error\"\n         }\n         ]\n         }\n         */\n        var arr = new JSONArray();\n        JSONHelper._categoryToJSON(cat, arr, recursive);\n        var object = new JSONObject();\n        object.addArray(\"categories\", arr);\n        return object;\n    };\n    JSONHelper._categoryToJSON = function (cat, arr, recursive) {\n        var object = new JSONObject();\n        object.addNumber(\"id\", cat.id);\n        object.addString(\"name\", cat.name);\n        object.addString(\"logLevel\", LoggerOptions_1.LogLevel[cat.logLevel].toString());\n        if (cat.parent != null) {\n            object.addNumber(\"parent\", cat.parent.id);\n        }\n        else {\n            object.addNull(\"parent\");\n        }\n        arr.add(object);\n        if (recursive) {\n            cat.children.forEach(function (child) {\n                JSONHelper._categoryToJSON(child, arr, recursive);\n            });\n        }\n    };\n    return JSONHelper;\n}());\nexports.JSONHelper = JSONHelper;\n//# sourceMappingURL=JSONHelper.js.map"]},"metadata":{},"sourceType":"script"}