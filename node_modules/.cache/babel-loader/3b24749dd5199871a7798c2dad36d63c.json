{"ast":null,"code":"var _jsxFileName = \"/Users/karel/Documents/eth/my-eth-app/src/components/WalletButton.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { Button } from \"./../components\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function WalletButton(_ref) {\n  _s();\n\n  let {\n    provider,\n    loadWeb3Modal,\n    logoutOfWeb3Modal\n  } = _ref;\n  const [account, setAccount] = useState(\"\");\n  const [rendered, setRendered] = useState(\"\");\n  useEffect(() => {\n    async function fetchAccount() {\n      try {\n        if (!provider) {\n          return;\n        } // Load the user's accounts.\n\n\n        const accounts = await provider.listAccounts();\n        setAccount(accounts[0]); // Resolve the ENS name for the first account.\n\n        const name = await provider.lookupAddress(accounts[0]); // Render either the ENS name or the shortened account address.\n\n        if (name) {\n          setRendered(name);\n        } else {\n          setRendered(account.substring(0, 6) + \"...\" + account.substring(36));\n        }\n      } catch (err) {\n        setAccount(\"\");\n        setRendered(\"\");\n        console.error(err);\n      }\n    }\n\n    fetchAccount();\n  }, [account, provider, setAccount, setRendered]);\n  return /*#__PURE__*/_jsxDEV(Button, {\n    onClick: () => {\n      if (!provider) {\n        loadWeb3Modal();\n      } else {\n        logoutOfWeb3Modal();\n      }\n    },\n    children: [rendered === \"\" && \"Connect Wallet\", rendered !== \"\" && rendered]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n}\n\n_s(WalletButton, \"DkenSv2S1UeLGvdxckk/4UwgSRc=\");\n\n_c = WalletButton;\n\nvar _c;\n\n$RefreshReg$(_c, \"WalletButton\");","map":{"version":3,"sources":["/Users/karel/Documents/eth/my-eth-app/src/components/WalletButton.tsx"],"names":["React","useEffect","useState","Button","WalletButton","provider","loadWeb3Modal","logoutOfWeb3Modal","account","setAccount","rendered","setRendered","fetchAccount","accounts","listAccounts","name","lookupAddress","substring","err","console","error"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,MAAT,QAAuB,iBAAvB;;AAGA,OAAO,SAASC,YAAT,OAOJ;AAAA;;AAAA,MAP0B;AAACC,IAAAA,QAAD;AAC3BC,IAAAA,aAD2B;AAE3BC,IAAAA;AAF2B,GAO1B;AACD,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBP,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAM,CAACQ,QAAD,EAAWC,WAAX,IAA0BT,QAAQ,CAAC,EAAD,CAAxC;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACd,mBAAeW,YAAf,GAA8B;AAC5B,UAAI;AACF,YAAI,CAACP,QAAL,EAAe;AACb;AACD,SAHC,CAKF;;;AACA,cAAMQ,QAAQ,GAAG,MAAMR,QAAQ,CAACS,YAAT,EAAvB;AACAL,QAAAA,UAAU,CAACI,QAAQ,CAAC,CAAD,CAAT,CAAV,CAPE,CASF;;AACA,cAAME,IAAI,GAAG,MAAMV,QAAQ,CAACW,aAAT,CAAuBH,QAAQ,CAAC,CAAD,CAA/B,CAAnB,CAVE,CAYF;;AACA,YAAIE,IAAJ,EAAU;AACRJ,UAAAA,WAAW,CAACI,IAAD,CAAX;AACD,SAFD,MAEO;AACLJ,UAAAA,WAAW,CAACH,OAAO,CAACS,SAAR,CAAkB,CAAlB,EAAqB,CAArB,IAA0B,KAA1B,GAAkCT,OAAO,CAACS,SAAR,CAAkB,EAAlB,CAAnC,CAAX;AACD;AACF,OAlBD,CAkBE,OAAOC,GAAP,EAAY;AACZT,QAAAA,UAAU,CAAC,EAAD,CAAV;AACAE,QAAAA,WAAW,CAAC,EAAD,CAAX;AACAQ,QAAAA,OAAO,CAACC,KAAR,CAAcF,GAAd;AACD;AACF;;AACDN,IAAAA,YAAY;AACb,GA3BQ,EA2BN,CAACJ,OAAD,EAAUH,QAAV,EAAoBI,UAApB,EAAgCE,WAAhC,CA3BM,CAAT;AA6BA,sBACE,QAAC,MAAD;AACE,IAAA,OAAO,EAAE,MAAM;AACb,UAAI,CAACN,QAAL,EAAe;AACbC,QAAAA,aAAa;AACd,OAFD,MAEO;AACLC,QAAAA,iBAAiB;AAClB;AACF,KAPH;AAAA,eASGG,QAAQ,KAAK,EAAb,IAAmB,gBATtB,EAUGA,QAAQ,KAAK,EAAb,IAAmBA,QAVtB;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAcD;;GAtDeN,Y;;KAAAA,Y","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { Button } from \"./../components\";\nimport { Web3Provider } from \"@ethersproject/providers\";\n\nexport function WalletButton({provider,\n  loadWeb3Modal,\n  logoutOfWeb3Modal,\n}: {\n  provider: Web3Provider | undefined;\n  loadWeb3Modal: () => Promise<void>;\n  logoutOfWeb3Modal: () => Promise<void>;\n}) {\n  const [account, setAccount] = useState(\"\");\n  const [rendered, setRendered] = useState(\"\");\n\n  useEffect(() => {\n    async function fetchAccount() {\n      try {\n        if (!provider) {\n          return;\n        }\n\n        // Load the user's accounts.\n        const accounts = await provider.listAccounts();\n        setAccount(accounts[0]);\n\n        // Resolve the ENS name for the first account.\n        const name = await provider.lookupAddress(accounts[0]);\n\n        // Render either the ENS name or the shortened account address.\n        if (name) {\n          setRendered(name);\n        } else {\n          setRendered(account.substring(0, 6) + \"...\" + account.substring(36));\n        }\n      } catch (err) {\n        setAccount(\"\");\n        setRendered(\"\");\n        console.error(err);\n      }\n    }\n    fetchAccount();\n  }, [account, provider, setAccount, setRendered]);\n\n  return (\n    <Button\n      onClick={() => {\n        if (!provider) {\n          loadWeb3Modal();\n        } else {\n          logoutOfWeb3Modal();\n        }\n      }}\n    >\n      {rendered === \"\" && \"Connect Wallet\"}\n      {rendered !== \"\" && rendered}\n    </Button>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}