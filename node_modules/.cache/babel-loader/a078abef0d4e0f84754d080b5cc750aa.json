{"ast":null,"code":"/**\r\n * [js-crc]{@link https://github.com/emn178/js-crc}\r\n *\r\n * @namespace crc\r\n * @version 0.2.0\r\n * @author Chen, Yi-Cyuan [emn178@gmail.com]\r\n * @copyright Chen, Yi-Cyuan 2015-2017\r\n * @license MIT\r\n */\n\n/*jslint bitwise: true */\n(function () {\n  'use strict';\n\n  var root = typeof window === 'object' ? window : {};\n  var NODE_JS = !root.JS_CRC_NO_NODE_JS && typeof process === 'object' && process.versions && process.versions.node;\n\n  if (NODE_JS) {\n    root = global;\n  }\n\n  var COMMON_JS = !root.JS_CRC_NO_COMMON_JS && typeof module === 'object' && module.exports;\n  var AMD = typeof define === 'function' && define.amd;\n  var ARRAY_BUFFER = !root.JS_CRC_NO_ARRAY_BUFFER && typeof ArrayBuffer !== 'undefined';\n  var HEX_CHARS = '0123456789abcdef'.split('');\n  var Modules = [{\n    name: 'crc32',\n    polynom: 0xEDB88320,\n    initValue: -1,\n    bytes: 4\n  }, {\n    name: 'crc16',\n    polynom: 0xA001,\n    initValue: 0,\n    bytes: 2\n  }];\n  var i, j, k, b;\n\n  for (i = 0; i < Modules.length; ++i) {\n    var m = Modules[i];\n\n    m.method = function (m) {\n      return function (message) {\n        return crc(message, m);\n      };\n    }(m);\n\n    m.table = [];\n\n    for (j = 0; j < 256; ++j) {\n      b = j;\n\n      for (k = 0; k < 8; ++k) {\n        b = b & 1 ? m.polynom ^ b >>> 1 : b >>> 1;\n      }\n\n      m.table[j] = b >>> 0;\n    }\n  }\n\n  var crc = function (message, module) {\n    var notString = typeof message !== 'string';\n\n    if (notString && ARRAY_BUFFER && message instanceof ArrayBuffer) {\n      message = new Uint8Array(message);\n    }\n\n    var crc = module.initValue,\n        code,\n        i,\n        length = message.length,\n        table = module.table;\n\n    if (notString) {\n      for (i = 0; i < length; ++i) {\n        crc = table[(crc ^ message[i]) & 0xFF] ^ crc >>> 8;\n      }\n    } else {\n      for (i = 0; i < length; ++i) {\n        code = message.charCodeAt(i);\n\n        if (code < 0x80) {\n          crc = table[(crc ^ code) & 0xFF] ^ crc >>> 8;\n        } else if (code < 0x800) {\n          crc = table[(crc ^ (0xc0 | code >> 6)) & 0xFF] ^ crc >>> 8;\n          crc = table[(crc ^ (0x80 | code & 0x3f)) & 0xFF] ^ crc >>> 8;\n        } else if (code < 0xd800 || code >= 0xe000) {\n          crc = table[(crc ^ (0xe0 | code >> 12)) & 0xFF] ^ crc >>> 8;\n          crc = table[(crc ^ (0x80 | code >> 6 & 0x3f)) & 0xFF] ^ crc >>> 8;\n          crc = table[(crc ^ (0x80 | code & 0x3f)) & 0xFF] ^ crc >>> 8;\n        } else {\n          code = 0x10000 + ((code & 0x3ff) << 10 | message.charCodeAt(++i) & 0x3ff);\n          crc = table[(crc ^ (0xf0 | code >> 18)) & 0xFF] ^ crc >>> 8;\n          crc = table[(crc ^ (0x80 | code >> 12 & 0x3f)) & 0xFF] ^ crc >>> 8;\n          crc = table[(crc ^ (0x80 | code >> 6 & 0x3f)) & 0xFF] ^ crc >>> 8;\n          crc = table[(crc ^ (0x80 | code & 0x3f)) & 0xFF] ^ crc >>> 8;\n        }\n      }\n    }\n\n    crc ^= module.initValue;\n    var hex = '';\n\n    if (module.bytes > 2) {\n      hex += HEX_CHARS[crc >> 28 & 0x0F] + HEX_CHARS[crc >> 24 & 0x0F] + HEX_CHARS[crc >> 20 & 0x0F] + HEX_CHARS[crc >> 16 & 0x0F];\n    }\n\n    hex += HEX_CHARS[crc >> 12 & 0x0F] + HEX_CHARS[crc >> 8 & 0x0F] + HEX_CHARS[crc >> 4 & 0x0F] + HEX_CHARS[crc & 0x0F];\n    return hex;\n  };\n\n  var exports = {};\n\n  for (i = 0; i < Modules.length; ++i) {\n    var m = Modules[i];\n    exports[m.name] = m.method;\n  }\n\n  if (COMMON_JS) {\n    module.exports = exports;\n  } else {\n    for (i = 0; i < Modules.length; ++i) {\n      var m = Modules[i];\n      root[m.name] = m.method;\n    }\n\n    if (AMD) {\n      define(function () {\n        return exports;\n      });\n    }\n  }\n})();","map":{"version":3,"sources":["/Users/karel/Documents/eth/my-eth-app/node_modules/js-crc/src/crc.js"],"names":["root","window","NODE_JS","JS_CRC_NO_NODE_JS","process","versions","node","global","COMMON_JS","JS_CRC_NO_COMMON_JS","module","exports","AMD","define","amd","ARRAY_BUFFER","JS_CRC_NO_ARRAY_BUFFER","ArrayBuffer","HEX_CHARS","split","Modules","name","polynom","initValue","bytes","i","j","k","b","length","m","method","message","crc","table","notString","Uint8Array","code","charCodeAt","hex"],"mappings":"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","sourcesContent":["/**\r\n * [js-crc]{@link https://github.com/emn178/js-crc}\r\n *\r\n * @namespace crc\r\n * @version 0.2.0\r\n * @author Chen, Yi-Cyuan [emn178@gmail.com]\r\n * @copyright Chen, Yi-Cyuan 2015-2017\r\n * @license MIT\r\n */\r\n/*jslint bitwise: true */\r\n(function () {\r\n  'use strict';\r\n\r\n  var root = typeof window === 'object' ? window : {};\r\n  var NODE_JS = !root.JS_CRC_NO_NODE_JS && typeof process === 'object' && process.versions && process.versions.node;\r\n  if (NODE_JS) {\r\n    root = global;\r\n  }\r\n  var COMMON_JS = !root.JS_CRC_NO_COMMON_JS && typeof module === 'object' && module.exports;\r\n  var AMD = typeof define === 'function' && define.amd;\r\n  var ARRAY_BUFFER = !root.JS_CRC_NO_ARRAY_BUFFER && typeof ArrayBuffer !== 'undefined';\r\n  var HEX_CHARS = '0123456789abcdef'.split('');\r\n\r\n  var Modules = [\r\n    {\r\n      name: 'crc32',\r\n      polynom: 0xEDB88320,\r\n      initValue: -1,\r\n      bytes: 4\r\n    }, \r\n    {\r\n      name: 'crc16',\r\n      polynom: 0xA001,\r\n      initValue: 0,\r\n      bytes: 2\r\n    }\r\n  ];\r\n\r\n  var i, j, k, b;\r\n  for (i = 0; i < Modules.length; ++i) {\r\n    var m = Modules[i];\r\n    m.method = (function (m) {\r\n      return function (message) {\r\n        return crc(message, m);\r\n      };\r\n    })(m);\r\n    m.table = [];\r\n    for (j = 0; j < 256; ++j) {\r\n      b = j;\r\n      for (k = 0; k < 8; ++k) {\r\n        b = b & 1 ? m.polynom ^ (b >>> 1) : b >>> 1;\r\n      }\r\n      m.table[j] = b >>> 0;\r\n    }\r\n  }\r\n\r\n  var crc = function (message, module) {\r\n    var notString = typeof message !== 'string';\r\n    if (notString && ARRAY_BUFFER && message instanceof ArrayBuffer) {\r\n      message = new Uint8Array(message);\r\n    }\r\n\r\n    var crc = module.initValue, code, i, length = message.length, table = module.table;\r\n    if (notString) {\r\n      for (i = 0; i < length; ++i) {\r\n        crc = table[(crc ^ message[i]) & 0xFF] ^ (crc >>> 8);\r\n      }\r\n    } else {\r\n      for (i = 0; i < length; ++i) {\r\n        code = message.charCodeAt(i);\r\n        if (code < 0x80) {\r\n          crc = table[(crc ^ code) & 0xFF] ^ (crc >>> 8);\r\n        } else if (code < 0x800) {\r\n          crc = table[(crc ^ (0xc0 | (code >> 6))) & 0xFF] ^ (crc >>> 8);\r\n          crc = table[(crc ^ (0x80 | (code & 0x3f))) & 0xFF] ^ (crc >>> 8);\r\n        } else if (code < 0xd800 || code >= 0xe000) {\r\n          crc = table[(crc ^ (0xe0 | (code >> 12))) & 0xFF] ^ (crc >>> 8);\r\n          crc = table[(crc ^ (0x80 | ((code >> 6) & 0x3f))) & 0xFF] ^ (crc >>> 8);\r\n          crc = table[(crc ^ (0x80 | (code & 0x3f))) & 0xFF] ^ (crc >>> 8);\r\n        } else {\r\n          code = 0x10000 + (((code & 0x3ff) << 10) | (message.charCodeAt(++i) & 0x3ff));\r\n          crc = table[(crc ^ (0xf0 | (code >> 18))) & 0xFF] ^ (crc >>> 8);\r\n          crc = table[(crc ^ (0x80 | ((code >> 12) & 0x3f))) & 0xFF] ^ (crc >>> 8);\r\n          crc = table[(crc ^ (0x80 | ((code >> 6) & 0x3f))) & 0xFF] ^ (crc >>> 8);\r\n          crc = table[(crc ^ (0x80 | (code & 0x3f))) & 0xFF] ^ (crc >>> 8);\r\n        }\r\n      }\r\n    }\r\n    crc ^= module.initValue;\r\n\r\n    var hex = '';\r\n    if (module.bytes > 2) {\r\n      hex += HEX_CHARS[(crc >> 28) & 0x0F] + HEX_CHARS[(crc >> 24) & 0x0F] +\r\n             HEX_CHARS[(crc >> 20) & 0x0F] + HEX_CHARS[(crc >> 16) & 0x0F];\r\n    }\r\n    hex += HEX_CHARS[(crc >> 12) & 0x0F] + HEX_CHARS[(crc >> 8) & 0x0F] +\r\n           HEX_CHARS[(crc >> 4) & 0x0F] + HEX_CHARS[crc & 0x0F];\r\n    return hex;\r\n  };\r\n\r\n  var exports = {};\r\n  for (i = 0;i < Modules.length;++i) {\r\n    var m = Modules[i];\r\n    exports[m.name] = m.method;\r\n  }\r\n  if (COMMON_JS) {\r\n    module.exports = exports;\r\n  } else {\r\n    for (i = 0;i < Modules.length;++i) {\r\n      var m = Modules[i];\r\n      root[m.name] = m.method;\r\n    }\r\n    if (AMD) {\r\n      define(function() {\r\n        return exports;\r\n      });\r\n    }\r\n  }\r\n})();\r\n"]},"metadata":{},"sourceType":"script"}