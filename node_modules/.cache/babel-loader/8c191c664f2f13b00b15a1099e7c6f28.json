{"ast":null,"code":"import { Contract } from 'ethers';\nimport { BaseRegistrarImplementation as permanentRegistrarContract, BulkRenewal as bulkRenewalContract, ENS as ensContract, ETHRegistrarController as permanentRegistrarControllerContract, DNSRegistrar as dnsRegistrarContract, Resolver as resolverContract, ReverseRegistrar as reverseRegistrarContract, TestRegistrar as testRegistrarContract } from '@ensdomains/ens-contracts';\nimport { abi as oldResolverContract } from '@ensdomains/contracts/abis/ens-022/PublicResolver.json';\nimport { abi as dnsRegistrarContractOld } from '@ensdomains/contracts/abis/dnsregistrar/DNSRegistrar.json';\nimport { abi as legacyAuctionRegistrarContract } from '@ensdomains/contracts/abis/ens/HashRegistrar';\nimport { abi as deedContract } from '@ensdomains/contracts/abis/ens/Deed';\n\nfunction getReverseRegistrarContract(_ref) {\n  let {\n    address,\n    provider\n  } = _ref;\n  return new Contract(address, reverseRegistrarContract, provider);\n}\n\nfunction getResolverContract(_ref2) {\n  let {\n    address,\n    provider\n  } = _ref2;\n  return new Contract(address, resolverContract, provider);\n}\n\nfunction getOldResolverContract(_ref3) {\n  let {\n    address,\n    provider\n  } = _ref3;\n  return new Contract(address, oldResolverContract, provider);\n}\n\nfunction getENSContract(_ref4) {\n  let {\n    address,\n    provider\n  } = _ref4;\n  return new Contract(address, ensContract, provider);\n}\n\nfunction getTestRegistrarContract(_ref5) {\n  let {\n    address,\n    provider\n  } = _ref5;\n  return new Contract(address, testRegistrarContract, provider);\n}\n\nfunction getOldDnsRegistrarContract(_ref6) {\n  let {\n    parentOwner,\n    provider\n  } = _ref6;\n  return new Contract(parentOwner, dnsRegistrarContractOld, provider);\n}\n\nfunction getDnsRegistrarContract(_ref7) {\n  let {\n    parentOwner,\n    provider\n  } = _ref7;\n  return new Contract(parentOwner, dnsRegistrarContract, provider);\n}\n\nfunction getPermanentRegistrarContract(_ref8) {\n  let {\n    address,\n    provider\n  } = _ref8;\n  return new Contract(address, permanentRegistrarContract, provider);\n}\n\nfunction getPermanentRegistrarControllerContract(_ref9) {\n  let {\n    address,\n    provider\n  } = _ref9;\n  return new Contract(address, permanentRegistrarControllerContract, provider);\n}\n\nfunction getDeedContract(_ref10) {\n  let {\n    address,\n    provider\n  } = _ref10;\n  return new Contract(address, deedContract, provider);\n}\n\nfunction getLegacyAuctionContract(_ref11) {\n  let {\n    address,\n    provider\n  } = _ref11;\n  return new Contract(address, legacyAuctionRegistrarContract, provider);\n}\n\nfunction getBulkRenewalContract(_ref12) {\n  let {\n    address,\n    provider\n  } = _ref12;\n  return new Contract(address, bulkRenewalContract, provider);\n}\n\nexport { getTestRegistrarContract, getReverseRegistrarContract, getENSContract, getResolverContract, getOldResolverContract, getDnsRegistrarContract, getOldDnsRegistrarContract, getPermanentRegistrarContract, getPermanentRegistrarControllerContract, getLegacyAuctionContract, getDeedContract, getBulkRenewalContract };","map":{"version":3,"sources":["/Users/karel/Documents/eth/my-eth-app/node_modules/@ensdomains/ui/src/contracts.js"],"names":["Contract","BaseRegistrarImplementation","permanentRegistrarContract","BulkRenewal","bulkRenewalContract","ENS","ensContract","ETHRegistrarController","permanentRegistrarControllerContract","DNSRegistrar","dnsRegistrarContract","Resolver","resolverContract","ReverseRegistrar","reverseRegistrarContract","TestRegistrar","testRegistrarContract","abi","oldResolverContract","dnsRegistrarContractOld","legacyAuctionRegistrarContract","deedContract","getReverseRegistrarContract","address","provider","getResolverContract","getOldResolverContract","getENSContract","getTestRegistrarContract","getOldDnsRegistrarContract","parentOwner","getDnsRegistrarContract","getPermanentRegistrarContract","getPermanentRegistrarControllerContract","getDeedContract","getLegacyAuctionContract","getBulkRenewalContract"],"mappings":"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","sourcesContent":["import { Contract } from 'ethers'\nimport {\n  BaseRegistrarImplementation as permanentRegistrarContract,\n  BulkRenewal as bulkRenewalContract,\n  ENS as ensContract,\n  ETHRegistrarController as permanentRegistrarControllerContract,\n  DNSRegistrar as dnsRegistrarContract,\n  Resolver as resolverContract,\n  ReverseRegistrar as reverseRegistrarContract,\n  TestRegistrar as testRegistrarContract\n} from '@ensdomains/ens-contracts'\n\nimport { abi as oldResolverContract } from '@ensdomains/contracts/abis/ens-022/PublicResolver.json'\nimport { abi as dnsRegistrarContractOld } from '@ensdomains/contracts/abis/dnsregistrar/DNSRegistrar.json'\nimport { abi as legacyAuctionRegistrarContract } from '@ensdomains/contracts/abis/ens/HashRegistrar'\nimport { abi as deedContract } from '@ensdomains/contracts/abis/ens/Deed'\n\nfunction getReverseRegistrarContract({ address, provider }) {\n  return new Contract(address, reverseRegistrarContract, provider)\n}\n\nfunction getResolverContract({ address, provider }) {\n  return new Contract(address, resolverContract, provider)\n}\n\nfunction getOldResolverContract({ address, provider }) {\n  return new Contract(address, oldResolverContract, provider)\n}\n\nfunction getENSContract({ address, provider }) {\n  return new Contract(address, ensContract, provider)\n}\n\nfunction getTestRegistrarContract({ address, provider }) {\n  return new Contract(address, testRegistrarContract, provider)\n}\n\nfunction getOldDnsRegistrarContract({ parentOwner, provider }) {\n  return new Contract(parentOwner, dnsRegistrarContractOld, provider)\n}\n\nfunction getDnsRegistrarContract({ parentOwner, provider }) {\n  return new Contract(parentOwner, dnsRegistrarContract, provider)\n}\n\nfunction getPermanentRegistrarContract({ address, provider }) {\n  return new Contract(address, permanentRegistrarContract, provider)\n}\n\nfunction getPermanentRegistrarControllerContract({ address, provider }) {\n  return new Contract(address, permanentRegistrarControllerContract, provider)\n}\n\nfunction getDeedContract({ address, provider }) {\n  return new Contract(address, deedContract, provider)\n}\n\nfunction getLegacyAuctionContract({ address, provider }) {\n  return new Contract(address, legacyAuctionRegistrarContract, provider)\n}\n\nfunction getBulkRenewalContract({ address, provider }) {\n  return new Contract(address, bulkRenewalContract, provider)\n}\n\nexport {\n  getTestRegistrarContract,\n  getReverseRegistrarContract,\n  getENSContract,\n  getResolverContract,\n  getOldResolverContract,\n  getDnsRegistrarContract,\n  getOldDnsRegistrarContract,\n  getPermanentRegistrarContract,\n  getPermanentRegistrarControllerContract,\n  getLegacyAuctionContract,\n  getDeedContract,\n  getBulkRenewalContract\n}\n"]},"metadata":{},"sourceType":"module"}