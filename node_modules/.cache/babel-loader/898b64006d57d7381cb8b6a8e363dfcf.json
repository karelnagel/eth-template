{"ast":null,"code":"import { bech32m as r, bech32 as t } from \"bech32\";\nimport { blake2b as e, blake2bHex as n } from \"blakejs\";\nimport { decode as o, encode as i } from \"bs58\";\nimport { b32decode as a, hex2a as u, b32encode as f, bs58Decode as s, bs58Encode as c, stripHexPrefix as h, isValidChecksumAddress as l, toChecksumAddress as d, eosPublicKey as p, codec as g, cashaddrEncode as v, isValid as w, ss58Encode as m, ss58Decode as y, decodeCheck as B, encodeCheck as b, cashaddrDecode as E } from \"crypto-addr-codec\";\nimport { crc32 as I } from \"js-crc\";\nimport { sha512_256 as U } from \"js-sha512\";\nimport { encode as A, decode as S } from \"nano-base32\";\nimport { SHA3 as x, Keccak as q } from \"sha3\";\nimport { sha256 as C } from \"js-sha256\";\n\nfunction N(r, t) {\n  (null == t || t > r.length) && (t = r.length);\n\n  for (var e = 0, n = new Array(t); e < t; e++) n[e] = r[e];\n\n  return n;\n}\n\nvar O,\n    R = (function (r) {\n  var t = function (r) {\n    var e = 1e7,\n        n = 9007199254740992,\n        o = c(n),\n        i = Math.log(n);\n\n    function a(r, t) {\n      return void 0 === r ? a[0] : void 0 !== t ? 10 == +t ? P(r) : X(r, t) : P(r);\n    }\n\n    function u(r, t) {\n      this.value = r, this.sign = t, this.isSmall = !1;\n    }\n\n    function f(r) {\n      this.value = r, this.sign = r < 0, this.isSmall = !0;\n    }\n\n    function s(r) {\n      return -n < r && r < n;\n    }\n\n    function c(r) {\n      return r < 1e7 ? [r] : r < 1e14 ? [r % 1e7, Math.floor(r / 1e7)] : [r % 1e7, Math.floor(r / 1e7) % 1e7, Math.floor(r / 1e14)];\n    }\n\n    function h(r) {\n      l(r);\n      var t = r.length;\n      if (t < 4 && x(r, o) < 0) switch (t) {\n        case 0:\n          return 0;\n\n        case 1:\n          return r[0];\n\n        case 2:\n          return r[0] + r[1] * e;\n\n        default:\n          return r[0] + (r[1] + r[2] * e) * e;\n      }\n      return r;\n    }\n\n    function l(r) {\n      for (var t = r.length; 0 === r[--t];);\n\n      r.length = t + 1;\n    }\n\n    function d(r) {\n      for (var t = new Array(r), e = -1; ++e < r;) t[e] = 0;\n\n      return t;\n    }\n\n    function p(r) {\n      return r > 0 ? Math.floor(r) : Math.ceil(r);\n    }\n\n    function g(r, t) {\n      var n,\n          o,\n          i = r.length,\n          a = t.length,\n          u = new Array(i),\n          f = 0,\n          s = e;\n\n      for (o = 0; o < a; o++) u[o] = (n = r[o] + t[o] + f) - (f = n >= s ? 1 : 0) * s;\n\n      for (; o < i;) n = r[o] + f, u[o++] = n - (f = n === s ? 1 : 0) * s;\n\n      return f > 0 && u.push(f), u;\n    }\n\n    function v(r, t) {\n      return r.length >= t.length ? g(r, t) : g(t, r);\n    }\n\n    function w(r, t) {\n      var n,\n          o,\n          i = r.length,\n          a = new Array(i),\n          u = e;\n\n      for (o = 0; o < i; o++) n = r[o] - u + t, t = Math.floor(n / u), a[o] = n - t * u, t += 1;\n\n      for (; t > 0;) a[o++] = t % u, t = Math.floor(t / u);\n\n      return a;\n    }\n\n    function m(r, t) {\n      var e,\n          n,\n          o = r.length,\n          i = t.length,\n          a = new Array(o),\n          u = 0;\n\n      for (e = 0; e < i; e++) (n = r[e] - u - t[e]) < 0 ? (n += 1e7, u = 1) : u = 0, a[e] = n;\n\n      for (e = i; e < o; e++) {\n        if (!((n = r[e] - u) < 0)) {\n          a[e++] = n;\n          break;\n        }\n\n        a[e] = n += 1e7;\n      }\n\n      for (; e < o; e++) a[e] = r[e];\n\n      return l(a), a;\n    }\n\n    function y(r, t, e) {\n      var n,\n          o,\n          i = r.length,\n          a = new Array(i),\n          s = -t;\n\n      for (n = 0; n < i; n++) o = r[n] + s, s = Math.floor(o / 1e7), a[n] = (o %= 1e7) < 0 ? o + 1e7 : o;\n\n      return \"number\" == typeof (a = h(a)) ? (e && (a = -a), new f(a)) : new u(a, e);\n    }\n\n    function B(r, t) {\n      var e,\n          n,\n          o,\n          i,\n          a = r.length,\n          u = t.length,\n          f = d(a + u);\n\n      for (o = 0; o < a; ++o) {\n        i = r[o];\n\n        for (var s = 0; s < u; ++s) e = i * t[s] + f[o + s], n = Math.floor(e / 1e7), f[o + s] = e - 1e7 * n, f[o + s + 1] += n;\n      }\n\n      return l(f), f;\n    }\n\n    function b(r, t) {\n      var n,\n          o,\n          i = r.length,\n          a = new Array(i),\n          u = e,\n          f = 0;\n\n      for (o = 0; o < i; o++) n = r[o] * t + f, f = Math.floor(n / u), a[o] = n - f * u;\n\n      for (; f > 0;) a[o++] = f % u, f = Math.floor(f / u);\n\n      return a;\n    }\n\n    function E(r, t) {\n      for (var e = []; t-- > 0;) e.push(0);\n\n      return e.concat(r);\n    }\n\n    function I(r, t, n) {\n      return new u(r < e ? b(t, r) : B(t, c(r)), n);\n    }\n\n    function U(r) {\n      var t,\n          e,\n          n,\n          o,\n          i = r.length,\n          a = d(i + i);\n\n      for (n = 0; n < i; n++) {\n        e = 0 - (o = r[n]) * o;\n\n        for (var u = n; u < i; u++) t = o * r[u] * 2 + a[n + u] + e, e = Math.floor(t / 1e7), a[n + u] = t - 1e7 * e;\n\n        a[n + i] = e;\n      }\n\n      return l(a), a;\n    }\n\n    function A(r, t) {\n      var e,\n          n,\n          o,\n          i,\n          a = r.length,\n          u = d(a);\n\n      for (o = 0, e = a - 1; e >= 0; --e) o = (i = 1e7 * o + r[e]) - (n = p(i / t)) * t, u[e] = 0 | n;\n\n      return [u, 0 | o];\n    }\n\n    function S(r, t) {\n      var n,\n          o,\n          i = P(t),\n          s = r.value,\n          g = i.value;\n      if (0 === g) throw new Error(\"Cannot divide by zero\");\n      if (r.isSmall) return i.isSmall ? [new f(p(s / g)), new f(s % g)] : [a[0], r];\n\n      if (i.isSmall) {\n        if (1 === g) return [r, a[0]];\n        if (-1 == g) return [r.negate(), a[0]];\n        var v = Math.abs(g);\n\n        if (v < e) {\n          o = h((n = A(s, v))[0]);\n          var w = n[1];\n          return r.sign && (w = -w), \"number\" == typeof o ? (r.sign !== i.sign && (o = -o), [new f(o), new f(w)]) : [new u(o, r.sign !== i.sign), new f(w)];\n        }\n\n        g = c(v);\n      }\n\n      var y = x(s, g);\n      if (-1 === y) return [a[0], r];\n      if (0 === y) return [a[r.sign === i.sign ? 1 : -1], a[0]];\n      n = s.length + g.length <= 200 ? function (r, t) {\n        var n,\n            o,\n            i,\n            a,\n            u,\n            f,\n            s,\n            c = r.length,\n            l = t.length,\n            p = e,\n            g = d(t.length),\n            v = t[l - 1],\n            w = Math.ceil(p / (2 * v)),\n            m = b(r, w),\n            y = b(t, w);\n\n        for (m.length <= c && m.push(0), y.push(0), v = y[l - 1], o = c - l; o >= 0; o--) {\n          for (n = p - 1, m[o + l] !== v && (n = Math.floor((m[o + l] * p + m[o + l - 1]) / v)), i = 0, a = 0, f = y.length, u = 0; u < f; u++) i += n * y[u], s = Math.floor(i / p), a += m[o + u] - (i - s * p), i = s, a < 0 ? (m[o + u] = a + p, a = -1) : (m[o + u] = a, a = 0);\n\n          for (; 0 !== a;) {\n            for (n -= 1, i = 0, u = 0; u < f; u++) (i += m[o + u] - p + y[u]) < 0 ? (m[o + u] = i + p, i = 0) : (m[o + u] = i, i = 1);\n\n            a += i;\n          }\n\n          g[o] = n;\n        }\n\n        return m = A(m, w)[0], [h(g), h(m)];\n      }(s, g) : function (r, t) {\n        for (var e, n, o, i, a = r.length, u = t.length, f = [], s = []; a;) if (s.unshift(r[--a]), l(s), x(s, t) < 0) f.push(0);else {\n          o = 1e7 * s[(n = s.length) - 1] + s[n - 2], n > u && (o = 1e7 * (o + 1)), e = Math.ceil(o / (1e7 * t[u - 1] + t[u - 2]));\n\n          do {\n            if (x(i = b(t, e), s) <= 0) break;\n            e--;\n          } while (e);\n\n          f.push(e), s = m(s, i);\n        }\n\n        return f.reverse(), [h(f), h(s)];\n      }(s, g);\n      var B = r.sign !== i.sign,\n          E = n[1],\n          I = r.sign;\n      return \"number\" == typeof (o = n[0]) ? (B && (o = -o), o = new f(o)) : o = new u(o, B), \"number\" == typeof E ? (I && (E = -E), E = new f(E)) : E = new u(E, I), [o, E];\n    }\n\n    function x(r, t) {\n      if (r.length !== t.length) return r.length > t.length ? 1 : -1;\n\n      for (var e = r.length - 1; e >= 0; e--) if (r[e] !== t[e]) return r[e] > t[e] ? 1 : -1;\n\n      return 0;\n    }\n\n    function q(r) {\n      var t = r.abs();\n      return !t.isUnit() && (!!(t.equals(2) || t.equals(3) || t.equals(5)) || !(t.isEven() || t.isDivisibleBy(3) || t.isDivisibleBy(5)) && (!!t.lesser(49) || void 0));\n    }\n\n    function C(r, e) {\n      for (var n, o, i, u = r.prev(), f = u, s = 0; f.isEven();) f = f.divide(2), s++;\n\n      r: for (o = 0; o < e.length; o++) if (!r.lesser(e[o]) && !(i = t(e[o]).modPow(f, r)).equals(a[1]) && !i.equals(u)) {\n        for (n = s - 1; 0 != n; n--) {\n          if ((i = i.square().mod(r)).isUnit()) return !1;\n          if (i.equals(u)) continue r;\n        }\n\n        return !1;\n      }\n\n      return !0;\n    }\n\n    u.prototype = Object.create(a.prototype), f.prototype = Object.create(a.prototype), u.prototype.add = function (r) {\n      var t = P(r);\n      if (this.sign !== t.sign) return this.subtract(t.negate());\n      var e = this.value,\n          n = t.value;\n      return new u(t.isSmall ? w(e, Math.abs(n)) : v(e, n), this.sign);\n    }, u.prototype.plus = u.prototype.add, f.prototype.add = function (r) {\n      var t = P(r),\n          e = this.value;\n      if (e < 0 !== t.sign) return this.subtract(t.negate());\n      var n = t.value;\n\n      if (t.isSmall) {\n        if (s(e + n)) return new f(e + n);\n        n = c(Math.abs(n));\n      }\n\n      return new u(w(n, Math.abs(e)), e < 0);\n    }, f.prototype.plus = f.prototype.add, u.prototype.subtract = function (r) {\n      var t = P(r);\n      if (this.sign !== t.sign) return this.add(t.negate());\n      var e = this.value,\n          n = t.value;\n      return t.isSmall ? y(e, Math.abs(n), this.sign) : function (r, t, e) {\n        var n;\n        return x(r, t) >= 0 ? n = m(r, t) : (n = m(t, r), e = !e), \"number\" == typeof (n = h(n)) ? (e && (n = -n), new f(n)) : new u(n, e);\n      }(e, n, this.sign);\n    }, u.prototype.minus = u.prototype.subtract, f.prototype.subtract = function (r) {\n      var t = P(r),\n          e = this.value;\n      if (e < 0 !== t.sign) return this.add(t.negate());\n      var n = t.value;\n      return t.isSmall ? new f(e - n) : y(n, Math.abs(e), e >= 0);\n    }, f.prototype.minus = f.prototype.subtract, u.prototype.negate = function () {\n      return new u(this.value, !this.sign);\n    }, f.prototype.negate = function () {\n      var r = this.sign,\n          t = new f(-this.value);\n      return t.sign = !r, t;\n    }, u.prototype.abs = function () {\n      return new u(this.value, !1);\n    }, f.prototype.abs = function () {\n      return new f(Math.abs(this.value));\n    }, u.prototype.multiply = function (r) {\n      var t,\n          n,\n          o,\n          i = P(r),\n          f = this.value,\n          s = i.value,\n          h = this.sign !== i.sign;\n\n      if (i.isSmall) {\n        if (0 === s) return a[0];\n        if (1 === s) return this;\n        if (-1 === s) return this.negate();\n        if ((t = Math.abs(s)) < e) return new u(b(f, t), h);\n        s = c(t);\n      }\n\n      return -.012 * (n = f.length) - .012 * (o = s.length) + 15e-6 * n * o > 0 ? new u(function r(t, e) {\n        var n = Math.max(t.length, e.length);\n        if (n <= 30) return B(t, e);\n        n = Math.ceil(n / 2);\n        var o = t.slice(n),\n            i = t.slice(0, n),\n            a = e.slice(n),\n            u = e.slice(0, n),\n            f = r(i, u),\n            s = r(o, a),\n            c = r(v(i, o), v(u, a)),\n            h = v(v(f, E(m(m(c, f), s), n)), E(s, 2 * n));\n        return l(h), h;\n      }(f, s), h) : new u(B(f, s), h);\n    }, u.prototype.times = u.prototype.multiply, f.prototype._multiplyBySmall = function (r) {\n      return s(r.value * this.value) ? new f(r.value * this.value) : I(Math.abs(r.value), c(Math.abs(this.value)), this.sign !== r.sign);\n    }, u.prototype._multiplyBySmall = function (r) {\n      return 0 === r.value ? a[0] : 1 === r.value ? this : -1 === r.value ? this.negate() : I(Math.abs(r.value), this.value, this.sign !== r.sign);\n    }, f.prototype.times = f.prototype.multiply = function (r) {\n      return P(r)._multiplyBySmall(this);\n    }, u.prototype.square = function () {\n      return new u(U(this.value), !1);\n    }, f.prototype.square = function () {\n      var r = this.value * this.value;\n      return s(r) ? new f(r) : new u(U(c(Math.abs(this.value))), !1);\n    }, f.prototype.divmod = u.prototype.divmod = function (r) {\n      var t = S(this, r);\n      return {\n        quotient: t[0],\n        remainder: t[1]\n      };\n    }, f.prototype.over = f.prototype.divide = u.prototype.over = u.prototype.divide = function (r) {\n      return S(this, r)[0];\n    }, f.prototype.remainder = f.prototype.mod = u.prototype.remainder = u.prototype.mod = function (r) {\n      return S(this, r)[1];\n    }, u.prototype.pow = function (r) {\n      var t,\n          e,\n          n,\n          o = P(r),\n          i = this.value,\n          u = o.value;\n      if (0 === u) return a[1];\n      if (0 === i) return a[0];\n      if (1 === i) return a[1];\n      if (-1 === i) return o.isEven() ? a[1] : a[-1];\n      if (o.sign) return a[0];\n      if (!o.isSmall) throw new Error(\"The exponent \" + o.toString() + \" is too large.\");\n      if (this.isSmall && s(t = Math.pow(i, u))) return new f(p(t));\n\n      for (e = this, n = a[1]; !0 & u && (n = n.times(e), --u), 0 !== u;) u /= 2, e = e.square();\n\n      return n;\n    }, f.prototype.pow = u.prototype.pow, f.prototype.modPow = u.prototype.modPow = function (r, t) {\n      if (r = P(r), (t = P(t)).isZero()) throw new Error(\"Cannot take modPow with modulus 0\");\n\n      for (var e = a[1], n = this.mod(t); r.isPositive();) {\n        if (n.isZero()) return a[0];\n        r.isOdd() && (e = e.multiply(n).mod(t)), r = r.divide(2), n = n.square().mod(t);\n      }\n\n      return e;\n    }, u.prototype.compareAbs = function (r) {\n      var t = P(r);\n      return t.isSmall ? 1 : x(this.value, t.value);\n    }, f.prototype.compareAbs = function (r) {\n      var t = P(r),\n          e = Math.abs(this.value),\n          n = t.value;\n      return t.isSmall ? e === (n = Math.abs(n)) ? 0 : e > n ? 1 : -1 : -1;\n    }, u.prototype.compareTo = u.prototype.compare = function (r) {\n      if (Infinity === r) return -1;\n      if (-Infinity === r) return 1;\n      var t = P(r);\n      return this.sign !== t.sign ? t.sign ? 1 : -1 : t.isSmall ? this.sign ? -1 : 1 : x(this.value, t.value) * (this.sign ? -1 : 1);\n    }, f.prototype.compareTo = f.prototype.compare = function (r) {\n      if (Infinity === r) return -1;\n      if (-Infinity === r) return 1;\n      var t = P(r),\n          e = this.value,\n          n = t.value;\n      return t.isSmall ? e == n ? 0 : e > n ? 1 : -1 : e < 0 !== t.sign ? e < 0 ? -1 : 1 : e < 0 ? 1 : -1;\n    }, f.prototype.eq = f.prototype.equals = u.prototype.eq = u.prototype.equals = function (r) {\n      return 0 === this.compare(r);\n    }, f.prototype.neq = f.prototype.notEquals = u.prototype.neq = u.prototype.notEquals = function (r) {\n      return 0 !== this.compare(r);\n    }, f.prototype.gt = f.prototype.greater = u.prototype.gt = u.prototype.greater = function (r) {\n      return this.compare(r) > 0;\n    }, f.prototype.lt = f.prototype.lesser = u.prototype.lt = u.prototype.lesser = function (r) {\n      return this.compare(r) < 0;\n    }, f.prototype.geq = f.prototype.greaterOrEquals = u.prototype.geq = u.prototype.greaterOrEquals = function (r) {\n      return this.compare(r) >= 0;\n    }, f.prototype.leq = f.prototype.lesserOrEquals = u.prototype.leq = u.prototype.lesserOrEquals = function (r) {\n      return this.compare(r) <= 0;\n    }, u.prototype.isEven = function () {\n      return 0 == (1 & this.value[0]);\n    }, f.prototype.isEven = function () {\n      return 0 == (1 & this.value);\n    }, u.prototype.isOdd = function () {\n      return 1 == (1 & this.value[0]);\n    }, f.prototype.isOdd = function () {\n      return 1 == (1 & this.value);\n    }, u.prototype.isPositive = function () {\n      return !this.sign;\n    }, f.prototype.isPositive = function () {\n      return this.value > 0;\n    }, u.prototype.isNegative = function () {\n      return this.sign;\n    }, f.prototype.isNegative = function () {\n      return this.value < 0;\n    }, u.prototype.isUnit = function () {\n      return !1;\n    }, f.prototype.isUnit = function () {\n      return 1 === Math.abs(this.value);\n    }, u.prototype.isZero = function () {\n      return !1;\n    }, f.prototype.isZero = function () {\n      return 0 === this.value;\n    }, f.prototype.isDivisibleBy = u.prototype.isDivisibleBy = function (r) {\n      var t = P(r),\n          e = t.value;\n      return 0 !== e && (1 === e || (2 === e ? this.isEven() : this.mod(t).equals(a[0])));\n    }, f.prototype.isPrime = u.prototype.isPrime = function (r) {\n      var e = q(this);\n      if (void 0 !== e) return e;\n      var n = this.abs(),\n          o = n.bitLength();\n      if (o <= 64) return C(n, [2, 325, 9375, 28178, 450775, 9780504, 1795265022]);\n\n      for (var i = Math.log(2) * o, a = Math.ceil(!0 === r ? 2 * Math.pow(i, 2) : i), u = [], f = 0; f < a; f++) u.push(t(f + 2));\n\n      return C(n, u);\n    }, f.prototype.isProbablePrime = u.prototype.isProbablePrime = function (r) {\n      var e = q(this);\n      if (void 0 !== e) return e;\n\n      for (var n = this.abs(), o = void 0 === r ? 5 : r, i = [], a = 0; a < o; a++) i.push(t.randBetween(2, n.minus(2)));\n\n      return C(n, i);\n    }, f.prototype.modInv = u.prototype.modInv = function (r) {\n      for (var e, n, o, i = t.zero, a = t.one, u = P(r), f = this.abs(); !f.equals(t.zero);) e = u.divide(f), n = i, o = u, i = a, u = f, a = n.subtract(e.multiply(a)), f = o.subtract(e.multiply(f));\n\n      if (!u.equals(1)) throw new Error(this.toString() + \" and \" + r.toString() + \" are not co-prime\");\n      return -1 === i.compare(0) && (i = i.add(r)), this.isNegative() ? i.negate() : i;\n    }, u.prototype.next = function () {\n      var r = this.value;\n      return this.sign ? y(r, 1, this.sign) : new u(w(r, 1), this.sign);\n    }, f.prototype.next = function () {\n      var r = this.value;\n      return r + 1 < n ? new f(r + 1) : new u(o, !1);\n    }, u.prototype.prev = function () {\n      var r = this.value;\n      return this.sign ? new u(w(r, 1), !0) : y(r, 1, this.sign);\n    }, f.prototype.prev = function () {\n      var r = this.value;\n      return r - 1 > -n ? new f(r - 1) : new u(o, !0);\n    };\n\n    for (var N = [1]; 2 * N[N.length - 1] <= e;) N.push(2 * N[N.length - 1]);\n\n    var O = N.length,\n        R = N[O - 1];\n\n    function T(r) {\n      return (\"number\" == typeof r || \"string\" == typeof r) && +Math.abs(r) <= e || r instanceof u && r.value.length <= 1;\n    }\n\n    function k(r, e, n) {\n      e = P(e);\n\n      for (var o = r.isNegative(), i = e.isNegative(), a = o ? r.not() : r, u = i ? e.not() : e, f = 0, s = 0, c = null, h = null, l = []; !a.isZero() || !u.isZero();) f = (c = S(a, R))[1].toJSNumber(), o && (f = R - 1 - f), s = (h = S(u, R))[1].toJSNumber(), i && (s = R - 1 - s), a = c[0], u = h[0], l.push(n(f, s));\n\n      for (var d = 0 !== n(o ? 1 : 0, i ? 1 : 0) ? t(-1) : t(0), p = l.length - 1; p >= 0; p -= 1) d = d.multiply(R).add(t(l[p]));\n\n      return d;\n    }\n\n    function L(r) {\n      var t = r.value,\n          n = \"number\" == typeof t ? t | 1 << 30 : t[0] + t[1] * e | 1073758208;\n      return n & -n;\n    }\n\n    function F(r, t) {\n      return r = P(r), t = P(t), r.greater(t) ? r : t;\n    }\n\n    function M(r, t) {\n      return r = P(r), t = P(t), r.lesser(t) ? r : t;\n    }\n\n    function D(r, t) {\n      if (r = P(r).abs(), t = P(t).abs(), r.equals(t)) return r;\n      if (r.isZero()) return t;\n      if (t.isZero()) return r;\n\n      for (var e, n, o = a[1]; r.isEven() && t.isEven();) e = Math.min(L(r), L(t)), r = r.divide(e), t = t.divide(e), o = o.multiply(e);\n\n      for (; r.isEven();) r = r.divide(L(r));\n\n      do {\n        for (; t.isEven();) t = t.divide(L(t));\n\n        r.greater(t) && (n = t, t = r, r = n), t = t.subtract(r);\n      } while (!t.isZero());\n\n      return o.isUnit() ? r : r.multiply(o);\n    }\n\n    f.prototype.shiftLeft = u.prototype.shiftLeft = function (r) {\n      if (!T(r)) throw new Error(String(r) + \" is too large for shifting.\");\n      if ((r = +r) < 0) return this.shiftRight(-r);\n      var t = this;\n      if (t.isZero()) return t;\n\n      for (; r >= O;) t = t.multiply(R), r -= O - 1;\n\n      return t.multiply(N[r]);\n    }, f.prototype.shiftRight = u.prototype.shiftRight = function (r) {\n      var t;\n      if (!T(r)) throw new Error(String(r) + \" is too large for shifting.\");\n      if ((r = +r) < 0) return this.shiftLeft(-r);\n\n      for (var e = this; r >= O;) {\n        if (e.isZero() || e.isNegative() && e.isUnit()) return e;\n        e = (t = S(e, R))[1].isNegative() ? t[0].prev() : t[0], r -= O - 1;\n      }\n\n      return (t = S(e, N[r]))[1].isNegative() ? t[0].prev() : t[0];\n    }, f.prototype.not = u.prototype.not = function () {\n      return this.negate().prev();\n    }, f.prototype.and = u.prototype.and = function (r) {\n      return k(this, r, function (r, t) {\n        return r & t;\n      });\n    }, f.prototype.or = u.prototype.or = function (r) {\n      return k(this, r, function (r, t) {\n        return r | t;\n      });\n    }, f.prototype.xor = u.prototype.xor = function (r) {\n      return k(this, r, function (r, t) {\n        return r ^ t;\n      });\n    }, f.prototype.bitLength = u.prototype.bitLength = function () {\n      var r = this;\n      return r.compareTo(t(0)) < 0 && (r = r.negate().subtract(t(1))), 0 === r.compareTo(t(0)) ? t(0) : t(function r(e, n) {\n        if (n.compareTo(e) <= 0) {\n          var o = r(e, n.square(n)),\n              i = o.p,\n              a = o.e,\n              u = i.multiply(n);\n          return u.compareTo(e) <= 0 ? {\n            p: u,\n            e: 2 * a + 1\n          } : {\n            p: i,\n            e: 2 * a\n          };\n        }\n\n        return {\n          p: t(1),\n          e: 0\n        };\n      }(r, t(2)).e).add(t(1));\n    };\n\n    var X = function (r, t) {\n      for (var e = r.length, n = Math.abs(t), o = 0; o < e; o++) if (\"-\" !== (c = r[o].toLowerCase()) && /[a-z0-9]/.test(c)) {\n        if (/[0-9]/.test(c) && +c >= n) {\n          if (\"1\" === c && 1 === n) continue;\n          throw new Error(c + \" is not a valid digit in base \" + t + \".\");\n        }\n\n        if (c.charCodeAt(0) - 87 >= n) throw new Error(c + \" is not a valid digit in base \" + t + \".\");\n      }\n\n      if (2 <= t && t <= 36 && e <= i / Math.log(t)) {\n        var a = parseInt(r, t);\n        if (isNaN(a)) throw new Error(c + \" is not a valid digit in base \" + t + \".\");\n        return new f(parseInt(r, t));\n      }\n\n      t = P(t);\n      var u = [],\n          s = \"-\" === r[0];\n\n      for (o = s ? 1 : 0; o < r.length; o++) {\n        var c,\n            h = (c = r[o].toLowerCase()).charCodeAt(0);\n        if (48 <= h && h <= 57) u.push(P(c));else if (97 <= h && h <= 122) u.push(P(c.charCodeAt(0) - 87));else {\n          if (\"<\" !== c) throw new Error(c + \" is not a valid character\");\n          var l = o;\n\n          do {\n            o++;\n          } while (\">\" !== r[o]);\n\n          u.push(P(r.slice(l + 1, o)));\n        }\n      }\n\n      return V(u, t, s);\n    };\n\n    function V(r, t, e) {\n      var n,\n          o = a[0],\n          i = a[1];\n\n      for (n = r.length - 1; n >= 0; n--) o = o.add(r[n].times(i)), i = i.times(t);\n\n      return e ? o.negate() : o;\n    }\n\n    function Q(r) {\n      return r <= 35 ? \"0123456789abcdefghijklmnopqrstuvwxyz\".charAt(r) : \"<\" + r + \">\";\n    }\n\n    function W(r, e) {\n      if ((e = t(e)).isZero()) {\n        if (r.isZero()) return {\n          value: [0],\n          isNegative: !1\n        };\n        throw new Error(\"Cannot convert nonzero numbers to base 0.\");\n      }\n\n      if (e.equals(-1)) {\n        if (r.isZero()) return {\n          value: [0],\n          isNegative: !1\n        };\n        if (r.isNegative()) return {\n          value: [].concat.apply([], Array.apply(null, Array(-r)).map(Array.prototype.valueOf, [1, 0])),\n          isNegative: !1\n        };\n        var n = Array.apply(null, Array(+r - 1)).map(Array.prototype.valueOf, [0, 1]);\n        return n.unshift([1]), {\n          value: [].concat.apply([], n),\n          isNegative: !1\n        };\n      }\n\n      var o = !1;\n      if (r.isNegative() && e.isPositive() && (o = !0, r = r.abs()), e.equals(1)) return r.isZero() ? {\n        value: [0],\n        isNegative: !1\n      } : {\n        value: Array.apply(null, Array(+r)).map(Number.prototype.valueOf, 1),\n        isNegative: o\n      };\n\n      for (var i, a = [], u = r; u.isNegative() || u.compareAbs(e) >= 0;) {\n        i = u.divmod(e), u = i.quotient;\n        var f = i.remainder;\n        f.isNegative() && (f = e.minus(f).abs(), u = u.next()), a.push(f.toJSNumber());\n      }\n\n      return a.push(u.toJSNumber()), {\n        value: a.reverse(),\n        isNegative: o\n      };\n    }\n\n    function z(r, t) {\n      var e = W(r, t);\n      return (e.isNegative ? \"-\" : \"\") + e.value.map(Q).join(\"\");\n    }\n\n    function K(r) {\n      if (s(+r)) {\n        var t = +r;\n        if (t === p(t)) return new f(t);\n        throw new Error(\"Invalid integer: \" + r);\n      }\n\n      var e = \"-\" === r[0];\n      e && (r = r.slice(1));\n      var n = r.split(/e/i);\n      if (n.length > 2) throw new Error(\"Invalid integer: \" + n.join(\"e\"));\n\n      if (2 === n.length) {\n        var o = n[1];\n        if (\"+\" === o[0] && (o = o.slice(1)), (o = +o) !== p(o) || !s(o)) throw new Error(\"Invalid integer: \" + o + \" is not a valid exponent.\");\n        var i = n[0],\n            a = i.indexOf(\".\");\n        if (a >= 0 && (o -= i.length - a - 1, i = i.slice(0, a) + i.slice(a + 1)), o < 0) throw new Error(\"Cannot include negative exponent part for integers\");\n        r = i += new Array(o + 1).join(\"0\");\n      }\n\n      if (!/^([0-9][0-9]*)$/.test(r)) throw new Error(\"Invalid integer: \" + r);\n\n      for (var c = [], h = r.length, d = h - 7; h > 0;) c.push(+r.slice(d, h)), (d -= 7) < 0 && (d = 0), h -= 7;\n\n      return l(c), new u(c, e);\n    }\n\n    function P(r) {\n      return \"number\" == typeof r ? function (r) {\n        if (s(r)) {\n          if (r !== p(r)) throw new Error(r + \" is not an integer.\");\n          return new f(r);\n        }\n\n        return K(r.toString());\n      }(r) : \"string\" == typeof r ? K(r) : r;\n    }\n\n    u.prototype.toArray = function (r) {\n      return W(this, r);\n    }, f.prototype.toArray = function (r) {\n      return W(this, r);\n    }, u.prototype.toString = function (r) {\n      if (void 0 === r && (r = 10), 10 !== r) return z(this, r);\n\n      for (var t, e = this.value, n = e.length, o = String(e[--n]); --n >= 0;) t = String(e[n]), o += \"0000000\".slice(t.length) + t;\n\n      return (this.sign ? \"-\" : \"\") + o;\n    }, f.prototype.toString = function (r) {\n      return void 0 === r && (r = 10), 10 != r ? z(this, r) : String(this.value);\n    }, u.prototype.toJSON = f.prototype.toJSON = function () {\n      return this.toString();\n    }, u.prototype.toJSNumber = u.prototype.valueOf = function () {\n      return parseInt(this.toString(), 10);\n    }, f.prototype.toJSNumber = f.prototype.valueOf = function () {\n      return this.value;\n    };\n\n    for (var G = 0; G < 1e3; G++) a[G] = new f(G), G > 0 && (a[-G] = new f(-G));\n\n    return a.one = a[1], a.zero = a[0], a.minusOne = a[-1], a.max = F, a.min = M, a.gcd = D, a.lcm = function (r, t) {\n      return r = P(r).abs(), t = P(t).abs(), r.divide(D(r, t)).multiply(t);\n    }, a.isInstance = function (r) {\n      return r instanceof u || r instanceof f;\n    }, a.randBetween = function (r, t) {\n      var n = M(r = P(r), t = P(t)),\n          o = F(r, t).subtract(n).add(1);\n      if (o.isSmall) return n.add(Math.floor(Math.random() * o));\n\n      for (var i = [], a = !0, s = o.value.length - 1; s >= 0; s--) {\n        var c = a ? o.value[s] : e,\n            l = p(Math.random() * c);\n        i.unshift(l), l < c && (a = !1);\n      }\n\n      return i = h(i), n.add(\"number\" == typeof i ? new f(i) : new u(i, !1));\n    }, a.fromArray = function (r, t, e) {\n      return V(r.map(P), P(t || 10), e);\n    }, a;\n  }();\n\n  r.hasOwnProperty(\"exports\") && (r.exports = t);\n}(O = {\n  path: void 0,\n  exports: {},\n  require: function (r, t) {\n    return function () {\n      throw new Error(\"Dynamic requires are not currently supported by @rollup/plugin-commonjs\");\n    }();\n  }\n}), O.exports),\n    T = \"0123456789ABCDEFGHJKMNPQRSTVWXYZ\",\n    k = \"0123456789abcdef\";\n\nfunction L(r) {\n  return Buffer.from(C.update(r).digest());\n}\n\nfunction F(r) {\n  return L(L(Buffer.from(r, \"hex\"))).slice(0, 4).toString(\"hex\");\n}\n\nfunction M(r) {\n  if (!r.match(/^[0-9a-fA-F]*$/)) throw new Error(\"Not a hex-encoded string\");\n  r.length % 2 != 0 && (r = \"0\" + r);\n\n  for (var t = [], e = 0, n = (r = r.toLowerCase()).length - 1; n >= 0; n--) if (e < 4) {\n    var o = k.indexOf(r[n]) >> e,\n        i = 0;\n    0 !== n && (i = k.indexOf(r[n - 1]));\n    var a = 1 + e;\n    e = a, t.unshift(T[o + (i % (1 << a) << 5 - a)]);\n  } else e = 0;\n\n  for (var u = 0, f = 0; f < t.length && \"0\" === t[f]; f++) u++;\n\n  t = t.slice(u);\n\n  for (var s = Buffer.from(r, \"hex\").toString().match(/^\\u0000*/), c = s ? s[0].length : 0, h = 0; h < c; h++) t.unshift(T[0]);\n\n  return t.join(\"\");\n}\n\nfunction D(r) {\n  return r.toUpperCase().replace(/O/g, \"0\").replace(/[IL]/g, \"1\");\n}\n\nvar X = function (r, t) {\n  this.value = r, this.tag = t;\n},\n    V = function (r) {\n  this.value = r;\n},\n    Q = require(\"bn.js\"),\n    W = function () {\n  function r(r) {\n    void 0 === r && (r = Buffer.from([])), this.buffer = r, this.bytesRead = 0;\n  }\n\n  var t = r.prototype;\n  return t.read = function (r) {\n    var t = this.buffer.slice(0, r);\n    return this.buffer = this.buffer.slice(r), this.bytesRead += r, t;\n  }, t.write = function (r) {\n    this.buffer = Buffer.concat([this.buffer, Buffer.from(r)]);\n  }, r;\n}(),\n    z = function () {\n  function r(r) {\n    if (!r || r.length < 1) throw new Error(\"Missing str in address\");\n    this.str = r;\n  }\n\n  var t = r.prototype;\n  return t.protocol = function () {\n    if (this.str.length < 1) throw Error(\"No address found.\");\n    return this.str[0];\n  }, t.payload = function () {\n    if (this.str.length < 1) throw Error(\"No address found.\");\n    return this.str.slice(1, this.str.length);\n  }, r;\n}();\n\nfunction K(r) {\n  return e(r, null, 4);\n}\n\nfunction P(r, t) {\n  if (!t || !t.str) throw Error(\"Invalid address\");\n  var e = \"\",\n      n = t.payload(),\n      o = t.protocol();\n\n  switch (o) {\n    case 0:\n      var i = function (r) {\n        for (var t, e = new Q(0), n = 0; t = r.read(1)[0], e.ior(new Q(127 & t).shln(n)), t >> 7 != 0;) n += 7;\n\n        return e;\n      }(new W(n)).toString();\n\n      e = r + String(o) + i;\n      break;\n\n    default:\n      var a = Buffer.from([o]),\n          s = K(Buffer.concat([a, n])),\n          c = Buffer.concat([n, Buffer.from(s)]),\n          h = u(c.toString(\"hex\")),\n          l = f(h).replace(/=/g, \"\").toLowerCase();\n      e = String(r) + String(o) + l;\n  }\n\n  return e;\n}\n\nfunction G(r, t) {\n  var e = Buffer.from([r]),\n      n = Buffer.concat([e, t]);\n  return new z(n);\n}\n\nvar H = [BigInt(1), BigInt(2), BigInt(4), BigInt(8), BigInt(16), BigInt(32), BigInt(64), BigInt(128), BigInt(256), BigInt(512), BigInt(1024), BigInt(2048), BigInt(4096), BigInt(8192), BigInt(16384), BigInt(32768), BigInt(65536), BigInt(131072), BigInt(262144), BigInt(471693), BigInt(419994), BigInt(397615), BigInt(395339), BigInt(275453), BigInt(273067), BigInt(268625), BigInt(144334), BigInt(141953), BigInt(137544), BigInt(126816), BigInt(122570), BigInt(116281), BigInt(114136), BigInt(107829), BigInt(103596), BigInt(101446), BigInt(90923), BigInt(86683), BigInt(84547), BigInt(78212), BigInt(76098), BigInt(71873), BigInt(63506), BigInt(57383), BigInt(53262), BigInt(51260), BigInt(45085), BigInt(43057), BigInt(38955), BigInt(28724), BigInt(26666), BigInt(22553), BigInt(14343), BigInt(2002), BigInt(1831), BigInt(1678), BigInt(1660), BigInt(1437), BigInt(1259), BigInt(948), BigInt(874), BigInt(729), BigInt(455), BigInt(63)],\n    Z = function (r) {\n  this.codeword = r;\n};\n\nfunction j(r, t) {\n  this.hi = r >>> 0, this.lo = t >>> 0;\n}\n\nfunction Y(r, t) {\n  return new j(r, t);\n}\n\nfunction J() {\n  var r = arguments,\n      t = r[0].hi,\n      e = r[0].lo,\n      n = r.length - 1;\n\n  do {\n    t ^= r[n].hi, e ^= r[n].lo, n--;\n  } while (n > 0);\n\n  return new this.u64(t, e);\n}\n\nfunction _(r, t, e, n, o) {\n  o |= 0;\n\n  for (var i = 0; i < n;) r[i + t] = e[i + o], i++;\n}\n\nfunction $(r) {\n  if (!r) return [];\n\n  for (var t = r.length ? 1 + (r.length - 1 >>> 3) : 0, e = new Array(t), n = 0; n < t;) e[n] = new j(r[8 * n] << 24 | r[8 * n + 1] << 16 | r[8 * n + 2] << 8 | r[8 * n + 3], r[8 * n + 4] << 24 | r[8 * n + 5] << 16 | r[8 * n + 6] << 8 | r[8 * n + 7]), n++;\n\n  return e;\n}\n\nfunction rr(r) {\n  for (var t = new Array(r.length), e = r.length, n = 0; n < e;) t[4 * n] = (4278190080 & r[n]) >>> 24, t[4 * n + 1] = (16711680 & r[n]) >>> 16, t[4 * n + 2] = (65280 & r[n]) >>> 8, t[4 * n + 3] = 255 & r[n], n++;\n\n  return t;\n}\n\nZ.mainnet = new Z(BigInt(0)), Z.testnet = new Z(BigInt(0x6834ba37b3980400)), Z.emulator = new Z(BigInt(0x1cb159857af02000)), j.prototype.set = function (r) {\n  this.lo = r.lo, this.hi = r.hi;\n}, j.prototype.add = function (r) {\n  var t, e, n, o;\n  return o = (this.hi >>> 16) + (r.hi >>> 16) + ((n = (65535 & this.hi) + (65535 & r.hi) + ((e = (this.lo >>> 16) + (r.lo >>> 16) + ((t = (65535 & this.lo) + (65535 & r.lo)) >>> 16)) >>> 16)) >>> 16), this.lo = e << 16 | 65535 & t, this.hi = o << 16 | 65535 & n, this;\n}, j.prototype.addOne = function () {\n  -1 === this.lo || 4294967295 === this.lo ? (this.lo = 0, this.hi++) : this.lo++;\n}, j.prototype.plus = function (r) {\n  var t,\n      e,\n      n,\n      o,\n      i = new j(0, 0);\n  return o = (this.hi >>> 16) + (r.hi >>> 16) + ((n = (65535 & this.hi) + (65535 & r.hi) + ((e = (this.lo >>> 16) + (r.lo >>> 16) + ((t = (65535 & this.lo) + (65535 & r.lo)) >>> 16)) >>> 16)) >>> 16), i.lo = e << 16 | 65535 & t, i.hi = o << 16 | 65535 & n, i;\n}, j.prototype.not = function () {\n  return new j(~this.hi, ~this.lo);\n}, j.prototype.one = function () {\n  return new j(0, 1);\n}, j.prototype.zero = function () {\n  return new j(0, 0);\n}, j.prototype.neg = function () {\n  return this.not().plus(this.one());\n}, j.prototype.minus = function (r) {\n  return this.plus(r.neg());\n}, j.prototype.isZero = function () {\n  return 0 === this.lo && 0 === this.hi;\n}, j.prototype.multiply = function (r) {\n  if (this.isZero()) return this.zero();\n  var t;\n  if (!0 !== ((t = r) && t.__isLong__) && (r = function (r) {\n    return isNaN(r) || !isFinite(r) ? this.zero() : new j(r % 1 | 0, r / 1 | 0);\n  }(r)), r.isZero()) return this.zero();\n  var e = 65535 & this.hi,\n      n = this.lo >>> 16,\n      o = 65535 & this.lo,\n      i = 65535 & r.hi,\n      a = r.lo >>> 16,\n      u = 65535 & r.lo,\n      f = 0,\n      s = 0,\n      c = 0,\n      h = 0;\n  return c += (h += o * u) >>> 16, s += (c += n * u) >>> 16, c &= 65535, s += (c += o * a) >>> 16, f += (s += e * u) >>> 16, s &= 65535, f += (s += n * a) >>> 16, s &= 65535, f += (s += o * i) >>> 16, f += (this.hi >>> 16) * u + e * a + n * i + o * (r.hi >>> 16), new j((f &= 65535) << 16 | (s &= 65535), (c &= 65535) << 16 | (h &= 65535));\n}, j.prototype.shiftLeft = function (r) {\n  r %= 64;\n  var t = new j(0, 0);\n  if (0 === r) return this.clone();\n  if (r > 31) t.lo = 0, t.hi = this.lo << r - 32;else {\n    var e = this.lo >>> 32 - r;\n    t.lo = this.lo << r, t.hi = this.hi << r | e;\n  }\n  return t;\n}, j.prototype.setShiftLeft = function (r) {\n  if (0 === r) return this;\n  if (r > 63 && (r %= 64), r > 31) this.hi = this.lo << r - 32, this.lo = 0;else {\n    var t = this.lo >>> 32 - r;\n    this.lo <<= r, this.hi = this.hi << r | t;\n  }\n  return this;\n}, j.prototype.shiftRight = function (r) {\n  r %= 64;\n  var t = new j(0, 0);\n  if (0 === r) return this.clone();\n  if (r >= 32) t.hi = 0, t.lo = this.hi >>> r - 32;else {\n    var e = 32 - r,\n        n = this.hi << e >>> e;\n    t.hi = this.hi >>> r, t.lo = this.lo >>> r | n << e;\n  }\n  return t;\n}, j.prototype.rotateLeft = function (r) {\n  if (r > 32) return this.rotateRight(64 - r);\n  var t = new j(0, 0);\n  return 0 === r ? (t.lo = this.lo >>> 0, t.hi = this.hi >>> 0) : 32 === r ? (t.lo = this.hi, t.hi = this.lo) : (t.lo = this.lo << r | this.hi >>> 32 - r, t.hi = this.hi << r | this.lo >>> 32 - r), t;\n}, j.prototype.setRotateLeft = function (r) {\n  return r > 32 ? this.setRotateRight(64 - r) : (0 === r || (32 === r ? (t = this.lo, this.lo = this.hi, this.hi = t) : (t = this.hi << r | this.lo >>> 32 - r, this.lo = this.lo << r | this.hi >>> 32 - r, this.hi = t)), this);\n  var t;\n}, j.prototype.rotateRight = function (r) {\n  if (r > 32) return this.rotateLeft(64 - r);\n  var t = new j(0, 0);\n  return 0 === r ? (t.lo = this.lo >>> 0, t.hi = this.hi >>> 0) : 32 === r ? (t.lo = this.hi, t.hi = this.lo) : (t.lo = this.hi << 32 - r | this.lo >>> r, t.hi = this.lo << 32 - r | this.hi >>> r), t;\n}, j.prototype.setFlip = function () {\n  var r;\n  return r = this.lo, this.lo = this.hi, this.hi = r, this;\n}, j.prototype.setRotateRight = function (r) {\n  return r > 32 ? this.setRotateLeft(64 - r) : (0 === r || (32 === r ? (t = this.lo, this.lo = this.hi, this.hi = t) : (newHigh = this.lo << 32 - r | this.hi >>> r, this.lo = this.hi << 32 - r | this.lo >>> r, this.hi = newHigh)), this);\n  var t;\n}, j.prototype.xor = function (r) {\n  var t = new j(0, 0);\n  return t.hi = this.hi ^ r.hi, t.lo = this.lo ^ r.lo, t;\n}, j.prototype.setxorOne = function (r) {\n  return this.hi ^= r.hi, this.lo ^= r.lo, this;\n}, j.prototype.and = function (r) {\n  var t = new j(0, 0);\n  return t.hi = this.hi & r.hi, t.lo = this.lo & r.lo, t;\n}, j.prototype.clone = function () {\n  return new j(this.hi, this.lo);\n}, j.prototype.setxor64 = function () {\n  for (var r = arguments, t = r.length; t--;) this.hi ^= r[t].hi, this.lo ^= r[t].lo;\n\n  return this;\n};\nvar tr = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=\";\n\nfunction er(r) {\n  var t,\n      e,\n      n,\n      o,\n      i,\n      a,\n      u = [],\n      f = 0;\n\n  for (r = r.replace(/[^A-Za-z0-9\\+\\/\\=]/g, \"\"); f < r.length;) n = tr.indexOf(r.charAt(f++)), t = (15 & (o = tr.indexOf(r.charAt(f++)))) << 4 | (i = tr.indexOf(r.charAt(f++))) >> 2, e = (3 & i) << 6 | (a = tr.indexOf(r.charAt(f++))), u.push(n << 2 | o >> 4), 64 !== i && u.push(t), 64 !== a && u.push(e);\n\n  return u;\n}\n\nvar nr = $(er(\"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\")),\n    or = $(er(\"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\")),\n    ir = $(er(\"pcbGMvSl9JeE+Phvl4SX65nu7l6wmbDHjfb2eoyNjPcN///oFw0X5b3W1grcvdy3sd7eFsixyKdUkZFt/FT8OVBgYJDwUPDAAwICBwUDBQSpzs4u4Kngh31WVtGHfYesGefnzCsZK9VitbUTpmKmceZNTXwx5jGamuzsWbWatcNFj49Az0XPBZ0fH6O8nbw+QImJScBAwAmH+vpokoeS7xXv79A/FT/F67KylCbrJn/Jjo7OQMlABwv7++YdCx3t7EFBbi/sL4Jns7MaqWepff1fX0Mc/Ry+6kVFYCXqJYq/IyP52r/aRvdTU1EC9wKmluTkRaGWodNbm5t27VvtLcJ1dShdwl3qHOHhxSQcJNmuPT3U6a7pempMTPK+ar6YWmxsgu5a7thBfn69w0HD/AL19fMGAgbxT4ODUtFP0R1caGiM5Fzk0PRRUVYH9AeiNNHRjVw0XLkI+fnhGAgY6ZPi4kyuk67fc6urPpVzlU1TYmKX9VP1xD8qKmtBP0FUDAgIHBQMFBBSlZVj9lL2MWVGRumvZa+MXp2df+Je4iEoMDBIeCh4YKE3N8/4ofhuDwoKGxEPERS1Ly/rxLXEXgkODhUbCRscNiQkflo2WkibGxuttpu2Nj3f35hHPUelJs3Np2omaoFpTk71u2m7nM1/fzNMzUz+n+rqULqfus8bEhI/LRstJJ4dHaS5nrk6dFhYxJx0nLAuNDRGci5yaC02NkF3LXdsstzcEc2yzaPutLSdKe4pc/tbW00W+xa29qSkpQH2AVNNdnah103X7GG3txSjYaN1zn19NEnOSfp7UlLfjXuNpD7d3Z9CPkKhcV5ezZNxk7yXExOxopeiJvWmpqIE9QRXaLm5AbhouGkAAAAAAAAAACzBwbV0LHSZYEBA4KBgoIAf4+PCIR8h3ch5eTpDyEPy7ba2miztLHe+1NQN2b7Zs0aNjUfKRsoB2WdnF3DZcM5LcnKv3Uvd5N6UlO153nkz1JiY/2fUZyvosLCTI+gje0qFhVveSt4Ra7u7Br1rvW0qxcW7fip+keVPT3s05TSeFu3t1zoWOsHFhobSVMVUF9eamvhi12IvVWZmmf9V/8yUERG2p5SnIs+KisBKz0oPEOnp2TAQMMkGBAQOCgYKCIH+/maYgZjn8KCgqwvwC1tEeHi0zETM8LolJfDVutVK40tLdT7jPpbzoqKsDvMOX/5dXUQZ/hm6wICA21vAWxuKBQWAhYqFCq0/P9Psrex+vCEh/t+830JIcHCo2EjY4ATx8f0MBAz532NjGXrfesbBd3cvWMFY7nWvrzCfdZ9FY0JC56VjpYQwICBwUDBQQBrl5csuGi7RDv397xIOEuFtv78It223ZUyBgVXUTNQZFBgYJDwUPDA1JiZ5XzVfTC/Dw7JxL3Gd4b6+hjjhOGeiNTXI/aL9asyIiMdPzE8LOS4uZUs5S1xXk5Nq+Vf5PfJVVVgN8g2qgvz8YZ2CneNHenqzyUfJ9KzIyCfvrO+L57q6iDLnMm8rMjJPfSt9ZJXm5kKklaTXoMDAO/ug+5uYGRmqs5izMtGenvZo0Wgnf6OjIoF/gV1mRETuqmaqiH5UVNaCfoKoqzs73ear5naDCwuVnoOeFsqMjMlFykUDKcfHvHspe5XTa2sFbtNu1jwoKGxEPERQeaenLIt5i1XivLyBPeI9Yx0WFjEnHScsdq2tN5p2mkE729uWTTtNrVZkZJ76VvrITnR0ptJO0ugeFBQ2Ih4iKNuSkuR223Y/CgwMEh4KHhhsSEj8tGy0kOS4uI835DdrXZ+feOdd5yVuvb0Psm6yYe9DQ2kq7yqGpsTENfGm8ZOoOTna46jjcqQxMcb3pPdiN9PTilk3Wb2L8vJ0houG/zLV1YNWMlaxQ4uLTsVDxQ1Zbm6F61nr3Lfa2hjCt8KvjAEBjo+MjwJksbEdrGSsedKcnPFt0m0j4ElJcjvgO5K02Ngfx7THq/qsrLkV+hVDB/Pz+gkHCf0lz8+gbyVvha/KyiDqr+qPjvT0fYmOifPpR0dnIOkgjhgQEDgoGCgg1W9vC2TVZN6I8PBzg4iD+29KSvuxb7GUclxcypZylrgkODhUbCRscPFXV18I8Qiux3NzIVLHUuZRl5dk81HzNSPLy65lI2WNfKGhJYR8hFmc6OhXv5y/yyE+Pl1jIWN83ZaW6nzdfDfcYWEef9x/woYNDZyRhpEahQ8Pm5SFlB6Q4OBLq5Cr20J8fLrGQsb4xHFxJlfEV+KqzMwp5arlg9iQkONz2HM7BQYGCQ8FDwwB9/f0AwED9RIcHCo2EjY4o8LCPP6j/p9famqL4V/h1Pmurr4Q+RBH0GlpAmvQa9KRFxe/qJGoLliZmXHoWOgpJzo6U2knaXS5Jyf30LnQTjjZ2ZFIOEipE+vr3jUTNc2zKyvlzrPOVjMiIndVM1VEu9LSBNa71r9wqak5kHCQSYkHB4eAiYAOpzMzwfKn8ma2LS3swbbBWiI8PFpmImZ4khUVuK2SrSogycmpYCBgiUmHh1zbSdsV/6qqsBr/Gk94UFDYiHiIoHqlpSuOeo5RjwMDiYqPigb4WVlKE/gTsoAJCZKbgJsSFxoaIzkXOTTaZWUQddp1yjHX14RTMVO1xoSE1VHGURO40NAD07jTu8OCgtxew14fsCkp4suwy1J3WlrDmXeZtBEeHi0zETM8y3t7PUbLRvb8qKi3H/wfS9ZtbQxh1mHaOiwsYk46Tlg=\")),\n    ar = $(er(\"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\")),\n    ur = $(er(\"9JelxsYy9KWX64T4+G+XhLDHme7uXrCZjPeN9vZ6jI0X5Q3//+gXDdy3vdbWCty9yKex3t4WyLH8OVSRkW38VPDAUGBgkPBQBQQDAgIHBQPgh6nOzi7gqYesfVZW0Yd9K9UZ5+fMKxmmcWK1tROmYjGa5k1NfDHmtcOa7OxZtZrPBUWPj0DPRbw+nR8fo7ydwAlAiYlJwECS74f6+miShz/FFe/v0D8VJn/rsrKUJutAB8mOjs5AyR3tC/v75h0LL4LsQUFuL+ypfWezsxqpZxy+/V9fQxz9JYrqRUVgJeraRr8jI/navwKm91NTUQL3odOW5ORFoZbtLVubm3btW13qwnV1KF3CJNkc4eHFJBzpeq49PdTprr6YakxM8r5q7thabGyC7lrD/EF+fr3DQQbxAvX18wYC0R1Pg4NS0U/k0FxoaIzkXAei9FFRVgf0XLk00dGNXDQY6Qj5+eEYCK7fk+LiTK6TlU1zq6s+lXP1xFNiYpf1U0FUPyoqa0E/FBAMCAgcFAz2MVKVlWP2Uq+MZUZG6a9l4iFenZ1/4l54YCgwMEh4KPhuoTc3z/ihERQPCgobEQ/EXrUvL+vEtRscCQ4OFRsJWkg2JCR+Wja2NpsbG622m0elPd/fmEc9aoEmzc2naia7nGlOTvW7aUz+zX9/M0zNus+f6upQup8tJBsSEj8tG7k6nh0dpLmenLB0WFjEnHRyaC40NEZyLndsLTY2QXctzaOy3NwRzbIpc+60tJ0p7ha2+1tbTRb7AVP2pKSlAfbX7E12dqHXTaN1Ybe3FKNhSfrOfX00Sc6NpHtSUt+Ne0KhPt3dn0I+k7xxXl7Nk3GiJpcTE7GilwRX9aamogT1uGloubkBuGgAAAAAAAAAAHSZLMHBtXQsoIBgQEDgoGAh3R/j48IhH0PyyHl5OkPILHfttraaLO3Zs77U1A3ZvsoBRo2NR8pGcM7ZZ2cXcNnd5Etycq/dS3kz3pSU7XneZyvUmJj/Z9Qje+iwsJMj6N4RSoWFW95KvW1ru7sGvWt+kSrFxbt+KjSe5U9PezTlOsEW7e3XOhZUF8WGhtJUxWIv15qa+GLX/8xVZmaZ/1WnIpQREbanlEoPz4qKwErPMMkQ6enZMBAKCAYEBA4KBpjngf7+ZpiBC1vwoKCrC/DM8ER4eLTMRNVKuiUl8NW6PpbjS0t1PuMOX/OioqwO8xm6/l1dRBn+WxvAgIDbW8CFCooFBYCFiux+rT8/0+yt30K8ISH+37zY4EhwcKjYSAz5BPHx/QwEesbfY2MZet9Y7sF3dy9YwZ9Fda+vMJ91pYRjQkLnpWNQQDAgIHBQMC7RGuXlyy4aEuEO/f3vEg63ZW2/vwi3bdQZTIGBVdRMPDAUGBgkPBRfTDUmJnlfNXGdL8PDsnEvOGfhvr6GOOH9aqI1Ncj9ok8LzIiIx0/MS1w5Li5lSzn5PVeTk2r5Vw2q8lVVWA3yneOC/PxhnYLJ9Ed6erPJR++LrMjIJ++sMm/nurqIMud9ZCsyMk99K6TXlebmQqSV+5ugwMA7+6CzMpgZGaqzmGgn0Z6e9mjRgV1/o6MigX+qiGZERO6qZoKoflRU1oJ+5narOzvd5queFoMLC5Weg0UDyoyMyUXKe5Upx8e8eylu1tNrawVu00RQPCgobEQ8i1V5p6csi3k9Y+K8vIE94icsHRYWMScdmkF2ra03mnZNrTvb25ZNO/rIVmRknvpW0uhOdHSm0k4iKB4UFDYiHnY/25KS5HbbHhgKDAwSHgq0kGxISPy0bDdr5Li4jzfk5yVdn594512yYW69vQ+ybiqG70NDaSrv8ZOmxMQ18abjcqg5OdrjqPdipDExxvekWb0309OKWTeG/4vy8nSGi1axMtXVg1YyxQ1Di4tOxUPr3FluboXrWcKvt9raGMK3jwKMAQGOj4yseWSxsR2sZG0j0pyc8W3SO5LgSUlyO+DHq7TY2B/HtBVD+qysuRX6Cf0H8/P6CQdvhSXPz6BvJeqPr8rKIOqvifOO9PR9iY4gjulHR2cg6SggGBAQOCgYZN7Vb28LZNWD+4jw8HODiLGUb0pK+7FvlrhyXFzKlnJscCQ4OFRsJAiu8VdXXwjxUubHc3MhUsfzNVGXl2TzUWWNI8vLrmUjhFl8oaElhHy/y5zo6Fe/nGN8IT4+XWMhfDfdlpbqfN1/wtxhYR5/3JEahg0NnJGGlB6FDw+blIWr25Dg4EurkMb4Qnx8usZCV+LEcXEmV8Tlg6rMzCnlqnM72JCQ43PYDwwFBgYJDwUD9QH39/QDATY4EhwcKjYS/p+jwsI8/qPh1F9qaovhXxBH+a6uvhD5a9LQaWkCa9CoLpEXF7+okegpWJmZcehYaXQnOjpTaSfQTrknJ/fQuUipONnZkUg4Nc0T6+veNRPOVrMrK+XOs1VEMyIid1Uz1r+70tIE1ruQSXCpqTmQcIAOiQcHh4CJ8manMzPB8qfBWrYtLezBtmZ4Ijw8WmYirSqSFRW4rZJgiSDJyalgINsVSYeHXNtJGk//qqqwGv+IoHhQUNiIeI5ReqWlK456igaPAwOJio8TsvhZWUoT+JsSgAkJkpuAOTQXGhojORd1ytplZRB12lO1MdfXhFMxURPGhITVUcbTu7jQ0APTuF4fw4KC3F7Dy1KwKSniy7CZtHdaWsOZdzM8ER4eLTMRRvbLe3s9RssfS/yoqLcf/GHa1m1tDGHWTlg6LCxiTjo=\")),\n    fr = $(er(\"pfSXpcbGMvSEl+uE+Phvl5mwx5nu7l6wjYz3jfb2eowNF+UN///oF73ct73W1grcscinsd7eFshU/DlUkZFt/FDwwFBgYJDwAwUEAwICBwWp4Iepzs4u4H2HrH1WVtGHGSvVGefnzCtipnFitbUTpuYxmuZNTXwxmrXDmuzsWbVFzwVFj49Az528Pp0fH6O8QMAJQImJScCHku+H+vpokhU/xRXv79A/6yZ/67KylCbJQAfJjo7OQAsd7Qv7++Yd7C+C7EFBbi9nqX1ns7Maqf0cvv1fX0Mc6iWK6kVFYCW/2ka/IyP52vcCpvdTU1EClqHTluTkRaFb7S1bm5t27cJd6sJ1dShdHCTZHOHhxSSu6XquPT3U6Wq+mGpMTPK+Wu7YWmxsgu5Bw/xBfn69wwIG8QL19fMGT9EdT4ODUtFc5NBcaGiM5PQHovRRUVYHNFy5NNHRjVwIGOkI+fnhGJOu35Pi4kyuc5VNc6urPpVT9cRTYmKX9T9BVD8qKmtBDBQQDAgIHBRS9jFSlZVj9mWvjGVGRumvXuIhXp2df+IoeGAoMDBIeKH4bqE3N8/4DxEUDwoKGxG1xF61Ly/rxAkbHAkODhUbNlpINiQkflqbtjabGxuttj1HpT3f35hHJmqBJs3Np2ppu5xpTk71u81M/s1/fzNMn7rPn+rqULobLSQbEhI/LZ65Op4dHaS5dJywdFhYxJwucmguNDRGci13bC02NkF3ss2jstzcEc3uKXPutLSdKfsWtvtbW00W9gFT9qSkpQFN1+xNdnah12GjdWG3txSjzkn6zn19NEl7jaR7UlLfjT5CoT7d3Z9CcZO8cV5ezZOXoiaXExOxovUEV/WmpqIEaLhpaLm5AbgAAAAAAAAAACx0mSzBwbV0YKCAYEBA4KAfId0f4+PCIchD8sh5eTpD7Sx37ba2miy+2bO+1NQN2UbKAUaNjUfK2XDO2WdnF3BL3eRLcnKv3d55M96UlO151Gcr1JiY/2foI3vosLCTI0reEUqFhVvea71ta7u7Br0qfpEqxcW7fuU0nuVPT3s0FjrBFu3t1zrFVBfFhobSVNdiL9eamvhiVf/MVWZmmf+UpyKUERG2p89KD8+KisBKEDDJEOnp2TAGCggGBAQOCoGY54H+/maY8Atb8KCgqwtEzPBEeHi0zLrVSrolJfDV4z6W40tLdT7zDl/zoqKsDv4Zuv5dXUQZwFsbwICA21uKhQqKBQWAha3sfq0/P9PsvN9CvCEh/t9I2OBIcHCo2AQM+QTx8f0M33rG32NjGXrBWO7Bd3cvWHWfRXWvrzCfY6WEY0JC56UwUEAwICBwUBou0Rrl5csuDhLhDv397xJtt2Vtv78It0zUGUyBgVXUFDwwFBgYJDw1X0w1JiZ5Xy9xnS/Dw7Jx4Thn4b6+hjii/WqiNTXI/cxPC8yIiMdPOUtcOS4uZUtX+T1Xk5Nq+fINqvJVVVgNgp3jgvz8YZ1HyfRHenqzyazvi6zIyCfv5zJv57q6iDIrfWQrMjJPfZWk15Xm5kKkoPuboMDAO/uYszKYGRmqs9FoJ9GenvZof4Fdf6OjIoFmqohmRETuqn6CqH5UVNaCq+Z2qzs73eaDnhaDCwuVnspFA8qMjMlFKXuVKcfHvHvTbtbTa2sFbjxEUDwoKGxEeYtVeaenLIviPWPivLyBPR0nLB0WFjEndppBdq2tN5o7Ta0729uWTVb6yFZkZJ76TtLoTnR0ptIeIigeFBQ2Itt2P9uSkuR2Ch4YCgwMEh5stJBsSEj8tOQ3a+S4uI83XeclXZ+feOdusmFuvb0Psu8qhu9DQ2kqpvGTpsTENfGo43KoOTna46T3YqQxMcb3N1m9N9PTilmLhv+L8vJ0hjJWsTLV1YNWQ8UNQ4uLTsVZ69xZbm6F67fCr7fa2hjCjI8CjAEBjo9krHlksbEdrNJtI9KcnPFt4DuS4ElJcju0x6u02Ngfx/oVQ/qsrLkVBwn9B/Pz+gklb4Ulz8+gb6/qj6/KyiDqjonzjvT0fYnpII7pR0dnIBgoIBgQEDgo1WTe1W9vC2SIg/uI8PBzg2+xlG9KSvuxcpa4clxcypYkbHAkODhUbPEIrvFXV18Ix1Lmx3NzIVJR8zVRl5dk8yNljSPLy65lfIRZfKGhJYScv8uc6OhXvyFjfCE+Pl1j3Xw33ZaW6nzcf8LcYWEef4aRGoYNDZyRhZQehQ8Pm5SQq9uQ4OBLq0LG+EJ8fLrGxFfixHFxJleq5YOqzMwp5dhzO9iQkONzBQ8MBQYGCQ8BA/UB9/f0AxI2OBIcHCo2o/6fo8LCPP5f4dRfamqL4fkQR/murr4Q0GvS0GlpAmuRqC6RFxe/qFjoKViZmXHoJ2l0Jzo6U2m50E65Jyf30DhIqTjZ2ZFIEzXNE+vr3jWzzlazKyvlzjNVRDMiIndVu9a/u9LSBNZwkElwqak5kImADokHB4eAp/JmpzMzwfK2wVq2LS3swSJmeCI8PFpmkq0qkhUVuK0gYIkgycmpYEnbFUmHh1zb/xpP/6qqsBp4iKB4UFDYiHqOUXqlpSuOj4oGjwMDiYr4E7L4WVlKE4CbEoAJCZKbFzk0FxoaIznadcraZWUQdTFTtTHX14RTxlETxoSE1VG407u40NAD08NeH8OCgtxesMtSsCkp4st3mbR3WlrDmREzPBEeHi0zy0b2y3t7PUb8H0v8qKi3H9Zh2tZtbQxhOk5YOiwsYk4=\")),\n    sr = $(er(\"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\")),\n    cr = $(er(\"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\")),\n    hr = function (r, t) {\n  if (7 === r) return 255 & t.lo;\n  var e = 8 * (7 - r);\n  if (e >= 32) return t.hi >>> e - 32 & 255;\n  var n = 32 - e;\n  return 255 & (t.lo >>> e | t.hi << n >>> n << n);\n},\n    lr = [Y(0, 0), Y(0, 16), Y(0, 32), Y(0, 48), Y(0, 64), Y(0, 80), Y(0, 96), Y(0, 112), Y(0, 128), Y(0, 144), Y(0, 160), Y(0, 176), Y(0, 192), Y(0, 208), Y(0, 224), Y(0, 240)],\n    dr = [Y(4294967295, 4294967295), Y(4294967295, 4294967279), Y(4294967295, 4294967263), Y(4294967295, 4294967247), Y(4294967295, 4294967231), Y(4294967295, 4294967215), Y(4294967295, 4294967199), Y(4294967295, 4294967183), Y(4294967295, 4294967167), Y(4294967295, 4294967151), Y(4294967295, 4294967135), Y(4294967295, 4294967119), Y(4294967295, 4294967103), Y(4294967295, 4294967087), Y(4294967295, 4294967071), Y(4294967295, 4294967055)],\n    pr = [Y(0, 0), Y(0, 1), Y(0, 2), Y(0, 3), Y(0, 4), Y(0, 5), Y(0, 6), Y(0, 7), Y(0, 8), Y(0, 9), Y(0, 10), Y(0, 11), Y(0, 12), Y(0, 13)],\n    gr = function (r, t) {\n  for (var e = new Array(16), n = new Array(16), o = 0; o < 16; o++) n[o] = r[o], e[o] = n[o].xor(t[o]);\n\n  for (var i = new Array(16), a = 0; a < 14; a++) {\n    for (var u = 0; u < 16; u++) e[u].setxor64(lr[u].plus(pr[a]).setShiftLeft(56));\n\n    for (var f = 0; f < 16; f++) i[f] = J(nr[hr(0, e[f])], or[hr(1, e[f + 1 & 15])], ir[hr(2, e[f + 2 & 15])], ar[hr(3, e[f + 3 & 15])], ur[hr(4, e[f + 4 & 15])], fr[hr(5, e[f + 5 & 15])], sr[hr(6, e[f + 6 & 15])], cr[hr(7, e[f + 11 & 15])]);\n\n    var s = e;\n    e = i, i = s;\n  }\n\n  for (var c = 0; c < 14; c++) {\n    for (var h = 0; h < 16; h++) n[h].setxor64(pr[c], dr[h]);\n\n    for (var l = 0; l < 16; l++) i[l] = J(nr[hr(0, n[l + 1 & 15])], or[hr(1, n[l + 3 & 15])], ir[hr(2, n[l + 5 & 15])], ar[hr(3, n[l + 11 & 15])], ur[hr(4, n[l + 0 & 15])], fr[hr(5, n[l + 2 & 15])], sr[hr(6, n[l + 4 & 15])], cr[hr(7, n[l + 6 & 15])]);\n\n    temp = n, n = i, i = temp;\n  }\n\n  for (var d = 0; d < 16; d++) t[d].setxor64(e[d], n[d]);\n},\n    vr = function (r, t, e) {\n  var n,\n      o,\n      i = new Array(16);\n  if (n = r.buffer, e < r.buffer.length - (o = r.ptr)) return _(n, o, t, t.length), void (r.ptr = o += t.length);\n\n  for (_(i, 0, r.state, 16); e > 0;) {\n    var a = r.buffer.length - o;\n\n    if (a > e && (a = e), _(n, o, t, a), o += a, t = t.slice(a), e -= a, o === r.buffer.length) {\n      var u = $(n);\n      gr(u, i), r.count.addOne(), o = 0;\n    }\n  }\n\n  r.state = i, r.ptr = o;\n};\n\nfunction wr(r, t, e) {\n  var n;\n  n = 1 === t ? r : 2 === t ? rr(r) : function (r) {\n    for (var t = r.length, e = new Array(t), n = 0; n < t;) e[n] = r.charCodeAt(n), n++;\n\n    return e;\n  }(r);\n  var o = {};\n  o.state = new Array(16);\n\n  for (var i = 0; i < 15; i++) o.state[i] = new j(0, 0);\n\n  o.state[15] = new j(0, 512), o.ptr = 0, o.count = new j(0, 0), o.buffer = new Array(128), vr(o, n, n.length);\n\n  var a = function (r) {\n    var t,\n        e,\n        n,\n        o,\n        i,\n        a = r.ptr,\n        u = new Array(136);\n    u[0] = 128, a < 120 ? (t = 128 - a, e = r.count.plus(Y(0, 1))) : (t = 256 - a, e = r.count.plus(Y(0, 2))), function (r, t, e, n) {\n      for (var o = 0; o < n;) r[o + 1] = 0, o++;\n    }(u, 0, 0, t - 9), (n = u)[o = t - 8] = (i = e).hi >>> 24, n[o + 1] = i.hi >>> 16 & 255, n[o + 2] = i.hi >>> 8 & 255, n[o + 3] = 255 & i.hi, n[o + 4] = i.lo >>> 24, n[o + 5] = i.lo >>> 16 & 255, n[o + 6] = i.lo >>> 8 & 255, n[o + 7] = 255 & i.lo, vr(r, u, t), function (r) {\n      var t = new Array(16);\n      !function (r, t, e, n) {\n        for (var o = 0; o < 16;) r[o + 0] = e[o].clone(), o++;\n      }(t, 0, r);\n\n      for (var e = new Array(16), n = 0; n < 14; n++) {\n        for (var o = 0; o < 16; o++) t[o].setxor64(lr[o].plus(pr[n]).setShiftLeft(56));\n\n        for (var i = 0; i < 16; i++) e[i] = J(nr[hr(0, t[i])], or[hr(1, t[i + 1 & 15])], ir[hr(2, t[i + 2 & 15])], ar[hr(3, t[i + 3 & 15])], ur[hr(4, t[i + 4 & 15])], fr[hr(5, t[i + 5 & 15])], sr[hr(6, t[i + 6 & 15])], cr[hr(7, t[i + 11 & 15])]);\n\n        var a = t;\n        t = e, e = a;\n      }\n\n      for (var u = 0; u < 16; u++) r[u].setxor64(t[u]);\n    }(r.state);\n\n    for (var f = new Array(16), s = 0, c = 8; s < 8; s++, c++) f[2 * s] = r.state[c].hi, f[2 * s + 1] = r.state[c].lo;\n\n    return f;\n  }(o);\n\n  return 2 === e ? a : 1 === e ? rr(a) : function (r) {\n    for (var t = \"\", e = r.length, n = 0; n < e; n++) {\n      var o = r[n];\n      o < 0 && (o = 4294967295 + r[n] + 1);\n\n      for (var i = o.toString(16); i.length < 8;) i = \"0\" + i;\n\n      t += i;\n    }\n\n    return t;\n  }(a);\n}\n\nfor (var mr = {}, yr = \"123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz\", Br = [], br = 0; br < yr.length; br++) Br.push(yr.charCodeAt(br));\n\nvar Er = [0, 2, 3, 5, 6, 7, 9, 10, 11],\n    Ir = Br.length;\n\nfunction Ur(r) {\n  var t = function (r) {\n    if (r.length % 2 != 0) throw Error(\"Hex string has invalid length!\");\n\n    for (var t = new Uint8Array(r.length / 2), e = 0; e < r.length / 2; ++e) t[e] = parseInt(r.slice(2 * e, 2 * e + 2), 16);\n\n    return t;\n  }(r.toString(\"hex\"));\n\n  if (0 === t.length) throw Error(\"Unrecognised address format\");\n  var e,\n      n = Math.floor(t.length / 8),\n      o = t.length % 8,\n      i = 11 * n + Er[o],\n      a = new Uint8Array(i);\n\n  for (e = 0; e < i; ++e) a[e] = Br[0];\n\n  for (e = 0; e < n; e++) a = mr.encodeBlock(t.subarray(8 * e, 8 * e + 8), a, 11 * e);\n\n  return o > 0 && (a = mr.encodeBlock(t.subarray(8 * n, 8 * n + o), a, 11 * n)), function (r) {\n    for (var t = [], e = 0, n = Object.keys(r); e < n.length; e++) t.push(String.fromCharCode(r[Number(n[e])]));\n\n    return t.join(\"\");\n  }(a);\n}\n\nfunction Ar(r) {\n  var t = function (r) {\n    for (var t = new Uint8Array(r.length), e = 0; e < r.length; e++) t[e] = r.charCodeAt(e);\n\n    return t;\n  }(r);\n\n  if (0 === t.length) throw Error(\"Unrecognised address format\");\n  var e = Math.floor(t.length / 11),\n      n = t.length % 11,\n      o = Er.indexOf(n);\n  if (o < 0) throw Error(\"Invalid encoded length\");\n\n  for (var i = new Uint8Array(8 * e + o), a = 0; a < e; a++) i = mr.decodeBlock(t.subarray(11 * a, 11 * a + 11), i, 8 * a);\n\n  return n > 0 && (i = mr.decodeBlock(t.subarray(11 * e, 11 * e + n), i, 8 * e)), Buffer.from(function (r) {\n    for (var t = [], e = 0, n = Object.keys(r); e < n.length; e++) t.push((\"0\" + r[Number(n[e])].toString(16)).slice(-2));\n\n    return t.join(\"\");\n  }(i), \"hex\");\n}\n\nfunction Sr(r, t) {\n  return (\"00\" + (98 - function (r) {\n    for (var t = r.split(\"\").map(function (r) {\n      var t = r.toUpperCase().charCodeAt(0);\n      return t >= 48 && t <= 57 ? r : (t - 55).toString();\n    }).join(\"\"), e = \"\", n = 0; n < Math.ceil(t.length / 6); n++) e = (parseInt(e + t.substr(6 * n, 6), 10) % 97).toString();\n\n    return parseInt(e, 10);\n  }(r + t + \"00\"))).slice(-2);\n}\n\nmr.encodeBlock = function (r, t, e) {\n  if (r.length < 1 || r.length > 11) throw Error(\"Invalid block length: \" + r.length);\n\n  for (var n = function (r) {\n    if (r.length < 1 || r.length > 8) throw Error(\"Invalid input length\");\n    var t = R.zero,\n        e = R(2).pow(8),\n        n = 0;\n\n    switch (9 - r.length) {\n      case 1:\n        t = t.add(r[n++]);\n\n      case 2:\n        t = t.multiply(e).add(r[n++]);\n\n      case 3:\n        t = t.multiply(e).add(r[n++]);\n\n      case 4:\n        t = t.multiply(e).add(r[n++]);\n\n      case 5:\n        t = t.multiply(e).add(r[n++]);\n\n      case 6:\n        t = t.multiply(e).add(r[n++]);\n\n      case 7:\n        t = t.multiply(e).add(r[n++]);\n\n      case 8:\n        t = t.multiply(e).add(r[n++]);\n        break;\n\n      default:\n        throw Error(\"Impossible condition\");\n    }\n\n    return t;\n  }(r), o = Er[r.length] - 1; 1 === n.compare(0);) {\n    var i = n.divmod(Ir);\n    n = i.quotient, t[e + o] = Br[parseInt(i.remainder.toString(), 10)], o--;\n  }\n\n  return t;\n}, mr.decodeBlock = function (r, t, e) {\n  if (r.length < 1 || r.length > 11) throw Error(\"Invalid block length: \" + r.length);\n  var n = Er.indexOf(r.length);\n  if (n <= 0) throw Error(\"Invalid block size\");\n\n  for (var o = R(0), i = R(1), a = r.length - 1; a >= 0; a--) {\n    var u = Br.indexOf(r[a]);\n    if (u < 0) throw Error(\"Invalid symbol\");\n    var f = i.multiply(u).add(o);\n    if (1 === f.compare(R(2).pow(64))) throw Error(\"Overflow\");\n    o = f, i = i.multiply(Ir);\n  }\n\n  if (n < 8 && R(2).pow(8 * n).compare(o) <= 0) throw Error(\"Overflow 2\");\n  return t.set(function (r, t) {\n    var e = new Uint8Array(t);\n    if (t < 1 || t > 8) throw Error(\"Invalid input length\");\n\n    for (var n = R(2).pow(8), o = t - 1; o >= 0; o--) e[o] = parseInt(r.remainder(n).toString(), 10), r = r.divide(n);\n\n    return e;\n  }(o, n), e), t;\n};\nvar xr = t.decode,\n    qr = t.encode,\n    Cr = t.fromWords,\n    Nr = t.toWords;\n\nfunction Or(r, t) {\n  return function (e) {\n    var n;\n\n    switch (e.readUInt8(0)) {\n      case 118:\n        if (169 !== e.readUInt8(1) || 136 !== e.readUInt8(e.length - 2) || 172 !== e.readUInt8(e.length - 1)) throw Error(\"Unrecognised address format\");\n        return n = Buffer.concat([Buffer.from(r), e.slice(3, 3 + e.readUInt8(2))]), c(n);\n\n      case 169:\n        if (135 !== e.readUInt8(e.length - 1)) throw Error(\"Unrecognised address format\");\n        return n = Buffer.concat([Buffer.from(t), e.slice(2, 2 + e.readUInt8(1))]), c(n);\n\n      default:\n        throw Error(\"Unrecognised address format\");\n    }\n  };\n}\n\nfunction Rr(r, t) {\n  return function (e) {\n    var n = s(e),\n        o = function (r) {\n      return r.every(function (r, t) {\n        return t < n.length && r === n.readUInt8(t);\n      });\n    };\n\n    if (r.some(o)) return Buffer.concat([Buffer.from([118, 169, 20]), n.slice(r[0].length), Buffer.from([136, 172])]);\n    if (t.some(o)) return Buffer.concat([Buffer.from([169, 20]), n.slice(t[0].length), Buffer.from([135])]);\n    throw Error(\"Unrecognised address format\");\n  };\n}\n\nvar Tr = function (r, t, e, n) {\n  return {\n    coinType: t,\n    decoder: Rr(e, n),\n    encoder: Or(e[0], n[0]),\n    name: r\n  };\n};\n\nfunction kr(r) {\n  return function (t) {\n    var e = t.readUInt8(0);\n    if (e >= 81 && e <= 96) e -= 80;else if (0 !== e) throw Error(\"Unrecognised address format\");\n    var n = [e].concat(Nr(t.slice(2, t.readUInt8(1) + 2)));\n    return qr(r, n);\n  };\n}\n\nfunction Lr(r) {\n  return function (t) {\n    var e = xr(t),\n        n = e.words;\n    if (e.prefix !== r) throw Error(\"Unexpected human-readable part in bech32 encoded address\");\n    var o = Cr(n.slice(1)),\n        i = n[0];\n    return i > 0 && (i += 80), Buffer.concat([Buffer.from([i, o.length]), Buffer.from(o)]);\n  };\n}\n\nfunction Fr(r, t, e) {\n  var n = kr(r),\n      o = Or(t, e);\n  return function (r) {\n    try {\n      return o(r);\n    } catch (t) {\n      return n(r);\n    }\n  };\n}\n\nfunction Mr(r, t, e) {\n  var n = Lr(r),\n      o = Rr(t, e);\n  return function (t) {\n    return t.toLowerCase().startsWith(r + \"1\") ? n(t) : o(t);\n  };\n}\n\nvar Dr = function (r, t, e, n, o) {\n  return {\n    coinType: t,\n    decoder: Mr(e, n, o),\n    encoder: Fr(e, n[0], o[0]),\n    name: r\n  };\n};\n\nfunction Xr(r, t, e) {\n  var n = Yr(r),\n      o = Or(t, e);\n  return function (r) {\n    try {\n      return o(r);\n    } catch (t) {\n      return n(r);\n    }\n  };\n}\n\nfunction Vr(r, t, e) {\n  var n = Rr(t, e),\n      o = Jr(r);\n  return function (t) {\n    return t.toLowerCase().startsWith(r) ? o(t) : n(t);\n  };\n}\n\nvar Qr = function (r, t, e, n, o) {\n  return {\n    coinType: t,\n    decoder: Vr(e, n, o),\n    encoder: Xr(e, n[0], o[0]),\n    name: r\n  };\n};\n\nfunction Wr(r) {\n  var t,\n      e = (t = wr(r, 1, 2), rr(t = (t = wr(t, 2, 2)).slice(0, 8)));\n  return Buffer.from(e);\n}\n\nfunction zr(r) {\n  var t = Wr(r);\n  return i(Buffer.concat([r, t], r.length + 4));\n}\n\nfunction Kr(r) {\n  return function (t) {\n    return d(t.toString(\"hex\"), r || null);\n  };\n}\n\nfunction Pr(r) {\n  return function (t) {\n    var e = h(t);\n    if (!l(t, r || null) && e !== e.toLowerCase() && e !== e.toUpperCase()) throw Error(\"Invalid address checksum\");\n    return Buffer.from(h(t), \"hex\");\n  };\n}\n\nvar Gr = function (r, t, e) {\n  return {\n    coinType: t,\n    decoder: Pr(e),\n    encoder: Kr(e),\n    name: r\n  };\n},\n    Hr = function (r) {\n  return (2147483648 | r) >>> 0;\n},\n    Zr = function (r) {\n  return (2147483647 & r) >> 0;\n},\n    jr = function (r, t) {\n  return {\n    coinType: Hr(t),\n    decoder: Pr(),\n    encoder: Kr(),\n    name: r\n  };\n};\n\nfunction Yr(r, t) {\n  return function (e) {\n    return qr(r, Nr(e), t);\n  };\n}\n\nfunction Jr(r, t) {\n  return function (e) {\n    var n = xr(e, t),\n        o = n.words;\n    if (n.prefix !== r) throw Error(\"Unrecognised address format\");\n    return Buffer.from(Cr(o));\n  };\n}\n\nvar _r = function (r, t, e, n) {\n  return {\n    coinType: t,\n    decoder: Jr(e, n),\n    encoder: Yr(e, n),\n    name: r\n  };\n};\n\nfunction $r(r) {\n  return function (t) {\n    if (!p.isValid(t)) throw Error(\"Unrecognised address format\");\n    return p.fromHex(t).toString().replace(/^.{3}/g, r);\n  };\n}\n\nfunction rt(r) {\n  return function (t) {\n    if (!p.isValid(t)) throw Error(\"Unrecognised address format\");\n    var e = new RegExp(\"^.{\" + r.length + \"}\", \"g\"),\n        n = t.replace(e, \"EOS\");\n    return p(n).toBuffer();\n  };\n}\n\nvar tt = function (r, t, e) {\n  return {\n    coinType: t,\n    decoder: rt(e),\n    encoder: $r(e),\n    name: r\n  };\n};\n\nfunction et(r) {\n  return Buffer.from(y(r));\n}\n\nfunction nt(r) {\n  for (var t, e = h(r).toLowerCase(), n = new q(256).update(Buffer.from(e)).digest(), o = \"0x\", i = e.length, a = 0; a < i; a++) t = n[Math.floor(a / 2)], a % 2 == 0 ? t >>= 4 : t &= 15, o += e[a] > \"9\" && t <= 7 ? e[a].toUpperCase() : e[a];\n\n  return o;\n}\n\nfunction ot(r) {\n  if (5 !== r.readInt8(0) || r.readInt8(1) !== \"M\".charCodeAt(0) || 26 !== r.length) return !1;\n  var t,\n      n = r.slice(-4),\n      o = (t = r.slice(0, -4), new q(256).update(Buffer.from(e(t, null, 32))).digest().slice(0, 4));\n  return n.equals(o);\n}\n\nvar it = [0, 0, 1, 18, 2, 5, 19, 11, 3, 29, 6, 27, 20, 8, 12, 23, 4, 10, 30, 17, 7, 22, 28, 26, 21, 25, 9, 16, 13, 14, 24, 15],\n    at = [1, 2, 4, 8, 16, 5, 10, 20, 13, 26, 17, 7, 14, 28, 29, 31, 27, 19, 3, 6, 12, 24, 21, 15, 30, 25, 23, 11, 22, 9, 18, 1],\n    ut = \"23456789ABCDEFGHJKLMNPQRSTUVWXYZ\",\n    ft = [3, 2, 1, 0, 7, 6, 5, 4, 13, 14, 15, 16, 12, 8, 9, 10, 11];\n\nfunction st(r) {\n  return U.update(r).hex().substr(-8);\n}\n\nvar ct,\n    ht,\n    lt,\n    dt,\n    pt,\n    gt,\n    vt,\n    wt,\n    mt = function (r, t, e, n) {\n  return {\n    coinType: t,\n    decoder: n,\n    encoder: e,\n    name: r\n  };\n},\n    yt = [Dr(\"BTC\", 0, \"bc\", [[0]], [[5]]), Dr(\"LTC\", 2, \"ltc\", [[48]], [[50], [5]]), Tr(\"DOGE\", 3, [[30]], [[22]]), Tr(\"RDD\", 4, [[61]], [[5]]), Tr(\"DASH\", 5, [[76]], [[16]]), Tr(\"PPC\", 6, [[55]], [[117]]), mt(\"NMC\", 7, c, s), Tr(\"VIA\", 14, [[71]], [[33]]), (ct = [[36]], ht = [[5]], {\n  coinType: 17,\n  decoder: function (r, t, e) {\n    var n = Lr(\"grs\"),\n        i = function (r, t) {\n      return function (e) {\n        var n = function (r) {\n          var t = function (r) {\n            var t = r.slice(0, -4),\n                e = r.slice(-4),\n                n = Wr(t);\n            return e[0] ^ n[0] | e[1] ^ n[1] | e[2] ^ n[2] | e[3] ^ n[3] ? Buffer.from([]) : t;\n          }(o(r));\n\n          if (0 === t.length) throw new Error(\"Invalid checksum\");\n          return t;\n        }(e),\n            i = function (r) {\n          return r.every(function (r, t) {\n            return t < n.length && r === n.readUInt8(t);\n          });\n        };\n\n        if (r.some(i)) return Buffer.concat([Buffer.from([118, 169, 20]), n.slice(r[0].length), Buffer.from([136, 172])]);\n        if (t.some(i)) return Buffer.concat([Buffer.from([169, 20]), n.slice(t[0].length), Buffer.from([135])]);\n        throw Error(\"Unrecognised address format\");\n      };\n    }(t, e);\n\n    return function (r) {\n      return r.toLowerCase().startsWith(\"grs1\") ? n(r) : i(r);\n    };\n  }(0, ct, ht),\n  encoder: (lt = ct[0], dt = ht[0], pt = kr(\"grs\"), gt = function (r, t) {\n    return function (e) {\n      switch (e.readUInt8(0)) {\n        case 118:\n          if (169 !== e.readUInt8(1) || 136 !== e.readUInt8(e.length - 2) || 172 !== e.readUInt8(e.length - 1)) throw Error(\"Unrecognised address format\");\n          return zr(Buffer.concat([Buffer.from(r), e.slice(3, 3 + e.readUInt8(2))]));\n\n        case 169:\n          if (135 !== e.readUInt8(e.length - 1)) throw Error(\"Unrecognised address format\");\n          return zr(Buffer.concat([Buffer.from(t), e.slice(2, 2 + e.readUInt8(1))]));\n\n        default:\n          throw Error(\"Unrecognised address format\");\n      }\n    };\n  }(lt, dt), function (r) {\n    try {\n      return gt(r);\n    } catch (t) {\n      return pt(r);\n    }\n  }),\n  name: \"GRS\"\n}), Dr(\"DGB\", 20, \"dgb\", [[30]], [[63]]), Dr(\"MONA\", 22, \"mona\", [[50]], [[55], [5]]), mt(\"DCR\", 42, i, o), mt(\"XEM\", 43, function (r) {\n  return f(u(r.toString(\"hex\")));\n}, function (r) {\n  if (!w(r)) throw Error(\"Unrecognised address format\");\n  var t = r.toString().toUpperCase().replace(/-/g, \"\");\n  return a(t);\n}), Tr(\"AIB\", 55, [[23]], [[5]]), Dr(\"SYS\", 57, \"sys\", [[63]], [[5]]), Gr(\"ETH\", 60), Gr(\"ETC\", 61), mt(\"ICX\", 74, function (r) {\n  if (21 !== r.length) throw Error(\"Unrecognised address format\");\n\n  switch (r.readUInt8(0)) {\n    case 0:\n      return \"hx\" + r.slice(1).toString(\"hex\");\n\n    case 1:\n      return \"cx\" + r.slice(1).toString(\"hex\");\n\n    default:\n      throw Error(\"Unrecognised address format\");\n  }\n}, function (r) {\n  var t = r.slice(0, 2),\n      e = r.slice(2);\n\n  switch (t) {\n    case \"hx\":\n      return Buffer.concat([Buffer.from([0]), Buffer.from(e, \"hex\")]);\n\n    case \"cx\":\n      return Buffer.concat([Buffer.from([1]), Buffer.from(e, \"hex\")]);\n\n    default:\n      throw Error(\"Unrecognised address format\");\n  }\n}), Tr(\"XVG\", 77, [[30]], [[33]]), Tr(\"STRAT\", 105, [[63]], [[125]]), mt(\"ARK\", 111, c, function (r) {\n  var t = s(r);\n  if (23 !== t[0]) throw Error(\"Unrecognised address format\");\n  return t;\n}), _r(\"ATOM\", 118, \"cosmos\"), _r(\"ZIL\", 119, \"zil\"), _r(\"EGLD\", 120, \"erd\"), mt(\"ZEN\", 121, function (r) {\n  if (!(r.slice(0, 2).equals(Buffer.from([32, 137])) || r.slice(0, 2).equals(Buffer.from([28, 184])) || r.slice(0, 2).equals(Buffer.from([32, 150])) || r.slice(0, 2).equals(Buffer.from([28, 189])) || r.slice(0, 2).equals(Buffer.from([22, 154])))) throw Error(\"Unrecognised address format\");\n  return c(r);\n}, function (r) {\n  if (!(r.startsWith(\"zn\") || r.startsWith(\"zs\") || r.startsWith(\"zc\") || r.startsWith(\"t1\") || r.startsWith(\"t3\"))) throw Error(\"Unrecognised address format\");\n  return s(r);\n}), mt(\"XMR\", 128, Ur, Ar), Qr(\"ZEC\", 133, \"zs\", [[28, 184]], [[28, 189]]), mt(\"LSK\", 134, function (r) {\n  return R(r.toString(\"hex\"), 16).toString(10) + \"L\";\n}, function (r) {\n  return function (r) {\n    if (r.length < 2 || r.length > 22) throw new Error(\"Address length does not match requirements. Expected between 2 and 22 characters.\");\n    if (\"L\" !== r[r.length - 1]) throw new Error('Address format does not match requirements. Expected \"L\" at the end.');\n    if (r.includes(\".\")) throw new Error(\"Address format does not match requirements. Address includes invalid character: `.`.\");\n  }(r), Buffer.from(R(r.slice(0, -1)).toString(16), \"hex\");\n}), tt(\"STEEM\", 135, \"STM\"), Tr(\"FIRO\", 136, [[82]], [[7]]), Gr(\"RSK\", 137, 30), Tr(\"KMD\", 141, [[60]], [[85]]), mt(\"XRP\", 144, function (r) {\n  return g.encodeChecked(r);\n}, function (r) {\n  return g.decodeChecked(r);\n}), mt(\"BCH\", 145, function (r) {\n  switch (r.readUInt8(0)) {\n    case 118:\n      if (169 !== r.readUInt8(1) || 136 !== r.readUInt8(r.length - 2) || 172 !== r.readUInt8(r.length - 1)) throw Error(\"Unrecognised address format\");\n      return v(\"bitcoincash\", 0, r.slice(3, 3 + r.readUInt8(2)));\n\n    case 169:\n      if (135 !== r.readUInt8(r.length - 1)) throw Error(\"Unrecognised address format\");\n      return v(\"bitcoincash\", 1, r.slice(2, 2 + r.readUInt8(1)));\n\n    default:\n      throw Error(\"Unrecognised address format\");\n  }\n}, function (r) {\n  var t = Rr([[0]], [[5]]);\n\n  try {\n    return t(r);\n  } catch (t) {\n    return function (r) {\n      var t = E(r),\n          e = t.type,\n          n = t.hash;\n      if (0 === e) return Buffer.concat([Buffer.from([118, 169, 20]), Buffer.from(n), Buffer.from([136, 172])]);\n      if (1 === e) return Buffer.concat([Buffer.from([169, 20]), Buffer.from(n), Buffer.from([135])]);\n      throw Error(\"Unrecognised address format\");\n    }(r);\n  }\n}), mt(\"XLM\", 148, function (r) {\n  return b(\"ed25519PublicKey\", r);\n}, function (r) {\n  return B(\"ed25519PublicKey\", r);\n}), mt(\"BTM\", 153, kr(\"bm\"), Lr(\"bm\")), Dr(\"BTG\", 156, \"btg\", [[38]], [[23]]), mt(\"NANO\", 165, function (r) {\n  var t = A(Uint8Array.from(r)),\n      n = e(r, null, 5).reverse();\n  return \"nano_\" + t + A(n);\n}, function (r) {\n  var t = S(r.slice(5));\n  return Buffer.from(t).slice(0, -5);\n}), Tr(\"RVN\", 175, [[60]], [[122]]), Gr(\"POA\", 178), Dr(\"LCC\", 192, \"lcc\", [[28]], [[50], [5]]), tt(\"EOS\", 194, \"EOS\"), mt(\"TRX\", 195, c, s), mt(\"BCN\", 204, function (r) {\n  var t = new q(256).update(r).digest().slice(0, 4);\n  return Ur(Buffer.concat([r, t]));\n}, function (r) {\n  var t = Ar(r),\n      e = t.slice(0, -68).toString(\"hex\");\n  if (t.length < 68 || \"06\" !== e && \"cef622\" !== e) throw Error(\"Unrecognised address format\");\n  var n = t.slice(-4);\n  if (!new q(256).update(t.slice(0, -4)).digest().slice(0, 4).equals(n)) throw Error(\"Invalid checksum\");\n  return t.slice(0, -4);\n}), tt(\"FIO\", 235, \"FIO\"), mt(\"BSV\", 236, function (r) {\n  var t = Buffer.concat([Buffer.from([0]), r]);\n  return c(t);\n}, function (r) {\n  var t = s(r);\n  if (21 !== t.length) throw Error(\"Unrecognised address format\");\n  if (0 !== t[0]) throw Error(\"Invalid version byte\");\n  return t.slice(1);\n}), mt(\"NEO\", 239, c, s), mt(\"NIM\", 242, function (r) {\n  var t = function (r, t) {\n    void 0 === t && (t = \"0123456789ABCDEFGHJKLMNPQRSTUVXY\");\n    var e,\n        n,\n        o = 3,\n        i = 0,\n        a = \"\";\n\n    for (n = 0; n < r.length; n++) a += t[31 & (i | (e = r[n]) >> o)], o > 5 && (a += t[31 & e >> (o -= 5)]), i = e << (o = 5 - o), o = 8 - o;\n\n    for (3 !== o && (a += t[31 & i]); a.length % 8 != 0 && 33 === t.length;) a += t[32];\n\n    return a;\n  }(r);\n\n  return (\"NQ\" + Sr(t, \"NQ\") + t).replace(/.{4}/g, \"$& \").trim();\n}, function (r) {\n  if (!r.startsWith(\"NQ\")) throw Error(\"Unrecognised address format\");\n  var t = r.replace(/ /g, \"\"),\n      e = t.slice(2, 4),\n      n = t.slice(4);\n  if (e !== Sr(n, \"NQ\")) throw Error(\"Unrecognised address format\");\n  return function (r, t) {\n    void 0 === t && (t = \"0123456789ABCDEFGHJKLMNPQRSTUVXY\");\n    var e,\n        n = {};\n    t.toUpperCase().split(\"\").forEach(function (r, t) {\n      r in n || (n[r] = t);\n    });\n    var o = 8,\n        i = 0,\n        a = [];\n    return r.toUpperCase().split(\"\").forEach(function (r) {\n      33 === t.length && r === t[32] || (e = 255 & n[r], (o -= 5) > 0 ? i |= e << o : o < 0 ? (a.push(i | e >> -o), i = e << (o += 8) & 255) : (a.push(i | e), o = 8, i = 0));\n    }), 8 !== o && 0 !== i && a.push(i), Buffer.from(a);\n  }(n);\n}), Gr(\"EWT\", 246), mt(\"ALGO\", 283, function (r) {\n  var t = st(r);\n  return f(u(r.toString(\"hex\").concat(t))).replace(/=/g, \"\");\n}, function (r) {\n  var t = a(r);\n  if (36 !== t.length) throw Error(\"Unrecognised address format\");\n  var e = t.slice(0, -4),\n      n = t.slice(-4),\n      o = st(e);\n  if (n.toString(\"hex\") !== o) throw Error(\"Unrecognised address format\");\n  return e;\n}), mt(\"IOST\", 291, i, o), Tr(\"DIVI\", 301, [[30]], [[13]]), _r(\"IOTX\", 304, \"io\"), tt(\"BTS\", 308, \"BTS\"), _r(\"CKB\", 309, \"ckb\"), _r(\"LUNA\", 330, \"terra\"), mt(\"DOT\", 354, function (r) {\n  return m(Uint8Array.from(r), 0);\n}, et), mt(\"VSYS\", 360, function (r) {\n  if (!ot(r)) throw new Error(\"VSYS: Invalid checksum\");\n  return i(r);\n}, function (r) {\n  var t = r;\n  if (r.startsWith(\"address:\") && (t = r.substr(r.length)), t.length > 36) throw new Error(\"VSYS: Address length should not be more than 36\");\n  var e = o(t);\n  if (!ot(e)) throw new Error(\"VSYS: Invalid checksum\");\n  return e;\n}), tt(\"ABBC\", 367, \"ABBC\"), mt(\"NEAR\", 397, function (r) {\n  var t = r.toString();\n  if (t.length > 64 || t.length < 2) throw Error(\"Invalid address format\");\n  return t;\n}, function (r) {\n  if (/(^(([a-z\\d]+[\\-_])*[a-z\\d]+\\.)*([a-z\\d]+[\\-_])*[a-z\\d]+$)/g.test(r)) {\n    if (r.length > 64 || r.length < 2) throw Error(\"Invalid address format\");\n    return Buffer.from(r);\n  }\n\n  throw Error(\"Invalid address string\");\n}), mt(\"ETN\", 415, function (r) {\n  var t = Buffer.concat([Buffer.from([18]), r]),\n      e = new q(256).update(t).digest().slice(0, 4);\n  return Ur(Buffer.concat([t, e]));\n}, function (r) {\n  var t = Ar(r);\n  if (18 !== t[0]) throw Error(\"Unrecognised address format\");\n  var e = t.slice(65, 69);\n  if (!new q(256).update(t.slice(0, 65)).digest().slice(0, 4).equals(e)) throw Error(\"Invalid checksum\");\n  return t.slice(1, 65);\n}), mt(\"AION\", 425, function (r) {\n  return \"0x\".concat(r.toString(\"hex\"));\n}, function (r) {\n  var t = r;\n  if (null == t || 0 === t.length || t.length < 64) throw Error(\"Unrecognised address format\");\n  if (t.startsWith(\"0x\") && (t = t.slice(2)), t.startsWith(\"a0\") && (64 !== t.length || !t.substring(2).match(\"^[0-9A-Fa-f]+$\"))) throw Error(\"Unrecognised address format\");\n  return Buffer.from(t, \"hex\");\n}), mt(\"KSM\", 434, function (r) {\n  return m(Uint8Array.from(r), 2);\n}, et), mt(\"AE\", 457, function (r) {\n  return \"ak_\" + c(r.slice(2));\n}, function (r) {\n  return Buffer.concat([Buffer.from(\"0x\"), s(r.split(\"_\")[1])]);\n}), _r(\"KAVA\", 459, \"kava\"), mt(\"FIL\", 461, function (r) {\n  return P(\"f\", G(r[0], r.slice(1))).toString();\n}, function (r) {\n  return function (r) {\n    !function (r) {\n      if (!r) throw Error(\"No bytes to validate.\");\n      if (r.length < 3) throw Error(\"Address is too short to validate.\");\n      if (\"f\" !== r[0] && \"t\" !== r[0]) throw Error(\"Unknown address network.\");\n\n      switch (r[1]) {\n        case \"0\":\n          if (r.length > 22) throw Error(\"Invalid ID address length.\");\n          break;\n\n        case \"1\":\n          if (41 !== r.length) throw Error(\"Invalid secp256k1 address length.\");\n          break;\n\n        case \"2\":\n          if (41 !== r.length) throw Error(\"Invalid Actor address length.\");\n          break;\n\n        case \"3\":\n          if (86 !== r.length) throw Error(\"Invalid BLS address length.\");\n          break;\n\n        default:\n          throw new Error(\"Invalid address protocol.\");\n      }\n    }(r);\n    var t,\n        e = r[0],\n        n = parseInt(r[1], 10),\n        o = Buffer.from([n]),\n        i = r.slice(2);\n    if (0 === n) return G(n, Buffer.from((function (r, t) {\n      for (var e = new Q(r);;) {\n        var n = e.maskn(7).toNumber();\n\n        if (e.ishrn(7), e.isZero()) {\n          t.write([n]);\n          break;\n        }\n\n        t.write([128 | n]);\n      }\n    }(i, t = new W()), t.buffer)));\n    var u,\n        f,\n        s = Buffer.from(a(i.toUpperCase())),\n        c = s.length,\n        h = s.slice(0, c - 4);\n    if (u = s.slice(c - 4, c), f = K(Buffer.concat([o, h])), Buffer.compare(Buffer.from(f), u)) throw Error(\"Checksums don't match\");\n    var l = G(n, h);\n    if (P(e, l) !== r) throw Error(\"Did not encode this address properly: \" + r);\n    return l;\n  }(r).str;\n}), mt(\"AR\", 472, function (r) {\n  return r.toString(\"base64\").replace(/\\+/g, \"-\").replace(/\\//g, \"_\").replace(/\\=/g, \"\");\n}, function (r) {\n  return r = (r = r.replace(/\\-/g, \"+\").replace(/\\_/g, \"/\")).concat(\"=\".repeat(r.length % 4 == 0 ? 0 : 4 - r.length % 4)), Buffer.from(r, \"base64\");\n}), Tr(\"CCA\", 489, [[11]], [[5]]), Gr(\"THETA\", 500), mt(\"SOL\", 501, i, o), mt(\"XHV\", 535, Ur, Ar), mt(\"FLOW\", 539, function (r) {\n  var t = Buffer.alloc(8, 0);\n  return r.length > 8 && (t = r.slice(-8)), r.copy(t, 8 - r.length), \"0x\" + t.toString(\"hex\").toLowerCase();\n}, function (r) {\n  if (!function (r, t) {\n    var e = r;\n    if ((e = BigInt(e) ^ BigInt(t.codeword)) === BigInt(0)) return !1;\n\n    for (var n = BigInt(0), o = 0; o < 64; o++) (BigInt(e) & BigInt(1)) === BigInt(1) && (n = BigInt(n) ^ BigInt(H[o])), e = BigInt(e) >> BigInt(1);\n\n    return n === BigInt(0) && e === BigInt(0);\n  }(BigInt(r), Z.mainnet)) throw Error(\"Unrecognised address format\");\n  return Buffer.from(h(r).replace(/^0+/, \"\"), \"hex\");\n}), _r(\"IRIS\", 566, \"iaa\"), Tr(\"LRG\", 568, [[30]], [[13]]), mt(\"SERO\", 569, function (r) {\n  return i(r);\n}, function (r) {\n  var t = o(r);\n  if (96 === t.length) return t;\n  throw Error(\"Unrecognised address format\");\n}), mt(\"BDX\", 570, Ur, Ar), Dr(\"CCXX\", 571, \"ccx\", [[137]], [[75], [5]]), mt(\"SRM\", 573, i, o), mt(\"VLX\", 574, i, o), Tr(\"BPS\", 576, [[0]], [[5]]), Gr(\"TFUEL\", 589), _r(\"GRIN\", 592, \"grin\"), Gr(\"OPT\", 614), Gr(\"XDAI\", 700), Gr(\"VET\", 703), _r(\"BNB\", 714, \"bnb\"), Gr(\"CLO\", 820), tt(\"HIVE\", 825, \"STM\"), Gr(\"TOMO\", 889), mt(\"HNT\", 904, function (r) {\n  var t = Buffer.concat([Buffer.from([0]), r]);\n  return c(t);\n}, function (r) {\n  var t = s(r);\n  if (0 !== t[0]) throw Error(\"Invalid version byte\");\n  return t.slice(1);\n}), _r(\"RUNE\", 931, \"thor\"), Dr(\"BCD\", 999, \"bcd\", [[0]], [[5]]), Gr(\"TT\", 1001), Gr(\"FTM\", 1007), _r(\"ONE\", 1023, \"one\"), mt(\"ONT\", 1024, function (r) {\n  return c(Buffer.concat([Buffer.from([23]), r]));\n}, function (r) {\n  var t = s(r);\n\n  switch (t.readUInt8(0)) {\n    case 23:\n      return t.slice(1);\n\n    default:\n      throw Error(\"Unrecognised address format\");\n  }\n}), {\n  coinType: 1729,\n  decoder: function (r) {\n    var t = s(r).slice(3);\n\n    switch (r.substring(0, 3)) {\n      case \"tz1\":\n        return Buffer.concat([Buffer.from([0, 0]), t]);\n\n      case \"tz2\":\n        return Buffer.concat([Buffer.from([0, 1]), t]);\n\n      case \"tz3\":\n        return Buffer.concat([Buffer.from([0, 2]), t]);\n\n      case \"KT1\":\n        return Buffer.concat([Buffer.from([1]), t, Buffer.from([0])]);\n\n      default:\n        throw Error(\"Unrecognised address format\");\n    }\n  },\n  encoder: function (r) {\n    if (22 !== r.length && 21 !== r.length) throw Error(\"Unrecognised address format\");\n    var t;\n\n    switch (r.readUInt8(0)) {\n      case 0:\n        if (0 === r.readUInt8(1)) t = Buffer.from([6, 161, 159]);else if (1 === r.readUInt8(1)) t = Buffer.from([6, 161, 161]);else {\n          if (2 !== r.readUInt8(1)) throw Error(\"Unrecognised address format\");\n          t = Buffer.from([6, 161, 164]);\n        }\n        return c(Buffer.concat([t, r.slice(2)]));\n\n      case 1:\n        return t = Buffer.from([2, 90, 121]), c(Buffer.concat([t, r.slice(1, 21)]));\n\n      default:\n        throw Error(\"Unrecognised address format\");\n    }\n  },\n  name: \"XTZ\"\n}, {\n  coinType: 1815,\n  decoder: (wt = Jr(\"addr\", 104), function (r) {\n    return r.toLowerCase().startsWith(\"addr\") ? wt(r) : function (r) {\n      var t = o(r),\n          e = function (r, t, e) {\n        var n = new DataView(r),\n            o = new Uint8Array(r),\n            i = 0;\n\n        function a(r, t) {\n          return i += r, t;\n        }\n\n        function u(t) {\n          return a(t, new Uint8Array(r, i, t));\n        }\n\n        function f() {\n          return a(1, o[i]);\n        }\n\n        function s() {\n          return a(2, n.getUint16(i));\n        }\n\n        function c() {\n          return a(4, n.getUint32(i));\n        }\n\n        function h() {\n          return 255 === o[i] && (i += 1, !0);\n        }\n\n        function l(r) {\n          if (r < 24) return r;\n          if (24 === r) return f();\n          if (25 === r) return s();\n          if (26 === r) return c();\n          if (27 === r) return 4294967296 * c() + c();\n          if (31 === r) return -1;\n          throw new Error(\"Invalid length encoding\");\n        }\n\n        function d(r) {\n          var t = f();\n          if (255 === t) return -1;\n          var e = l(31 & t);\n          if (e < 0 || t >> 5 !== r) throw new Error(\"Invalid indefinite length element\");\n          return e;\n        }\n\n        function p(r, t) {\n          for (var e = 0; e < t; ++e) {\n            var n = f();\n            128 & n && (n < 224 ? (n = (31 & n) << 6 | 63 & f(), t -= 1) : n < 240 ? (n = (15 & n) << 12 | (63 & f()) << 6 | 63 & f(), t -= 2) : (n = (15 & n) << 18 | (63 & f()) << 12 | (63 & f()) << 6 | 63 & f(), t -= 3)), n < 65536 ? r.push(n) : (r.push(55296 | (n -= 65536) >> 10), r.push(56320 | 1023 & n));\n          }\n        }\n\n        var g = function r() {\n          var t,\n              e,\n              o,\n              c = f(),\n              g = c >> 5,\n              v = 31 & c;\n          if (7 === g) switch (v) {\n            case 25:\n              return function () {\n                var r = new ArrayBuffer(4),\n                    t = new DataView(r),\n                    e = s(),\n                    n = 32768 & e,\n                    o = 31744 & e,\n                    i = 1023 & e;\n                if (31744 === o) o = 261120;else if (0 !== o) o += 114688;else if (0 !== i) return (n ? -1 : 1) * i * 5.960464477539063e-8;\n                return t.setUint32(0, n << 16 | o << 13 | i << 13), t.getFloat32(0);\n              }();\n\n            case 26:\n              return a(4, n.getFloat32(i));\n\n            case 27:\n              return a(8, n.getFloat64(i));\n          }\n          if ((e = l(v)) < 0 && (g < 2 || 6 < g)) throw new Error(\"Invalid length\");\n\n          switch (g) {\n            case 0:\n              return e;\n\n            case 1:\n              return -1 - e;\n\n            case 2:\n              if (e < 0) {\n                var w = [],\n                    m = 0;\n\n                for (e = d(g); e >= 0;) m += e, w.push(u(e));\n\n                var y = new Uint8Array(m),\n                    B = 0;\n\n                for (t = 0; t < w.length; ++t) y.set(w[t], B), B += w[t].length;\n\n                return y;\n              }\n\n              return u(e);\n\n            case 3:\n              var b = [];\n              if (e < 0) for (e = d(g); e >= 0;) p(b, e);else p(b, e);\n              var E = \"\";\n\n              for (t = 0; t < b.length; t += 8192) E += String.fromCharCode.apply(null, b.slice(t, t + 8192));\n\n              return E;\n\n            case 4:\n              var I;\n              if (e < 0) for (I = []; !h();) I.push(r());else for (I = new Array(e), t = 0; t < e; ++t) I[t] = r();\n              return I;\n\n            case 5:\n              var U = {};\n\n              for (t = 0; t < e || e < 0 && !h(); ++t) U[r()] = r();\n\n              return U;\n\n            case 6:\n              return o = r(), new X(o, e);\n\n            case 7:\n              switch (e) {\n                case 20:\n                  return !1;\n\n                case 21:\n                  return !0;\n\n                case 22:\n                  return null;\n\n                case 23:\n                  return;\n\n                default:\n                  return function (r) {\n                    return new V(r);\n                  }(e);\n              }\n\n          }\n        }();\n\n        if (i !== r.byteLength) throw new Error(\"Remaining bytes\");\n        return g;\n      }(t.buffer.slice(t.byteOffset, t.byteOffset + t.byteLength)),\n          n = e[0];\n\n      if (void 0 === n) throw Error(\"Unrecognised address format\");\n      var i = e[1],\n          a = I(n.value);\n      if (parseInt(a, 16) !== i) throw Error(\"Unrecognised address format\");\n      return Buffer.from(n.value);\n    }(r);\n  }),\n  encoder: function (r) {\n    var t = Yr(\"addr\", 104);\n    return function (r) {\n      try {\n        return function (r) {\n          var t = I(r),\n              e = function (r) {\n            var t,\n                e = new ArrayBuffer(256),\n                n = new DataView(e),\n                o = new Uint8Array(e),\n                i = 0;\n\n            function a(r) {\n              for (var a = e.byteLength, u = i + r; a < u;) a <<= 1;\n\n              if (a !== e.byteLength) {\n                var f = n;\n                e = new ArrayBuffer(a), n = new DataView(e), o = new Uint8Array(e);\n\n                for (var s = i + 3 >> 2, c = 0; c < s; ++c) n.setUint32(c << 2, f.getUint32(c << 2));\n              }\n\n              return t = r, n;\n            }\n\n            function u() {\n              i += t;\n            }\n\n            function f(r) {\n              u(a(1).setUint8(i, r));\n            }\n\n            function s(r) {\n              a(r.length), o.set(r, i), u();\n            }\n\n            function c(r) {\n              u(a(2).setUint16(i, r));\n            }\n\n            function h(r) {\n              u(a(4).setUint32(i, r));\n            }\n\n            function l(r) {\n              var t = r % 4294967296,\n                  e = (r - t) / 4294967296,\n                  n = a(8);\n              n.setUint32(i, e), n.setUint32(i + 4, t), u();\n            }\n\n            function d(r, t) {\n              t < 24 ? f(r << 5 | t) : t < 256 ? (f(r << 5 | 24), f(t)) : t < 65536 ? (f(r << 5 | 25), c(t)) : t < 4294967296 ? (f(r << 5 | 26), h(t)) : (f(r << 5 | 27), l(t));\n            }\n\n            if (function r(t) {\n              var e, n;\n              if (!1 === t) return f(244);\n              if (!0 === t) return f(245);\n              if (null === t) return f(246);\n              if (void 0 === t) return f(247);\n              if (n = t, \"function\" == typeof Object.is ? Object.is(n, -0) : -0 === n && (0 !== n || 1 / n == 1 / -0)) return s([249, 128, 0]);\n\n              switch (typeof t) {\n                case \"number\":\n                  if (Math.floor(t) === t) {\n                    if (0 <= t && t <= 9007199254740992) return d(0, t);\n                    if (-9007199254740992 <= t && t < 0) return d(1, -(t + 1));\n                  }\n\n                  return f(251), function (r) {\n                    u(a(8).setFloat64(i, r));\n                  }(t);\n\n                case \"string\":\n                  var o = [];\n\n                  for (e = 0; e < t.length; e++) {\n                    var p = t.charCodeAt(e);\n                    p < 128 ? o.push(p) : p < 2048 ? (o.push(192 | p >> 6), o.push(128 | 63 & p)) : (p = (1023 & p) << 10, p |= 1023 & t.charCodeAt(++e), o.push(240 | (p += 65536) >> 18), o.push(128 | p >> 12 & 63), o.push(128 | p >> 6 & 63), o.push(128 | 63 & p));\n                  }\n\n                  return d(3, o.length), s(o);\n\n                default:\n                  var g, v;\n                  if (Array.isArray(t)) for (d(4, g = t.length), e = 0; e < g; e++) r(t[e]);else if (t instanceof Uint8Array) d(2, t.length), s(t);else if (ArrayBuffer.isView(t)) d(2, (v = new Uint8Array(t.buffer)).length), s(v);else if (t instanceof ArrayBuffer || \"function\" == typeof SharedArrayBuffer && t instanceof SharedArrayBuffer) d(2, (v = new Uint8Array(t)).length), s(v);else if (t instanceof X) !function (r, t) {\n                    r <= 255 ? r < 24 ? f(192 | r) : (f(216), f(r)) : r <= 65535 ? (f(217), c(r)) : r <= 4294967295 ? (f(218), h(r)) : (f(219), l(r));\n                  }(t.tag), r(t.value);else {\n                    var w = Object.keys(t);\n\n                    for (d(5, g = w.length), e = 0; e < g; e++) {\n                      var m = w[e];\n                      r(m), r(t[m]);\n                    }\n                  }\n              }\n            }(r), \"slice\" in e) return e.slice(0, i);\n\n            for (var p = new ArrayBuffer(i), g = new DataView(p), v = 0; v < i; ++v) g.setUint8(v, n.getUint8(v));\n\n            return p;\n          }([new X(r.buffer.slice(r.byteOffset, r.byteOffset + r.byteLength), 24), parseInt(t, 16)]),\n              n = i(Buffer.from(e));\n\n          if (!n.startsWith(\"Ae2\") && !n.startsWith(\"Ddz\")) throw Error(\"Unrecognised address format\");\n          return n;\n        }(r);\n      } catch (e) {\n        return t(r);\n      }\n    };\n  }(),\n  name: \"ADA\"\n}, mt(\"SC\", 1991, function (r) {\n  var t = n(r, null, 32).slice(0, 12);\n  return r.toString(\"hex\") + t;\n}, function (r) {\n  if (76 !== r.length) throw Error(\"Unrecognised address format\");\n  var t = Buffer.from(r.slice(0, 64), \"hex\");\n  if (r.slice(64) !== n(t, null, 32).slice(0, 12)) throw Error(\"Unrecognised address format\");\n  return t;\n}), mt(\"QTUM\", 2301, c, s), tt(\"GXC\", 2303, \"GXC\"), mt(\"ELA\", 2305, i, o), mt(\"NAS\", 2718, function (r) {\n  var t = new x(256).update(r).digest().slice(0, 4);\n  return i(Buffer.concat([r, t]));\n}, function (r) {\n  var t = o(r);\n  if (26 !== t.length || 25 !== t[0] || 87 !== t[1] && 88 !== t[1]) throw Error(\"Unrecognised address format\");\n  var e = t.slice(0, 22),\n      n = t.slice(-4);\n  if (!new x(256).update(e).digest().slice(0, 4).equals(n)) throw Error(\"Invalid checksum\");\n  return e;\n}), {\n  coinType: 3030,\n  decoder: function (r) {\n    var t = Buffer.alloc(20),\n        e = new DataView(t.buffer, 0, 20),\n        n = r.split(\".\");\n    if (3 !== n.length) throw Error(\"Unrecognised address format\");\n    var o = Number(n[0]),\n        i = BigInt(n[1]),\n        a = BigInt(n[2]);\n    return e.setUint32(0, o), e.setBigUint64(4, i), e.setBigUint64(12, a), t;\n  },\n  encoder: function (r) {\n    if (20 !== r.length) throw Error(\"Unrecognised address format\");\n    var t = new DataView(r.buffer, 0);\n    return [t.getUint32(0), t.getBigUint64(4), t.getBigUint64(12)].join(\".\");\n  },\n  name: \"HBAR\"\n}, {\n  coinType: 4218,\n  decoder: function (r) {\n    var t = xr(r, void 0),\n        e = t.words;\n    if (\"iota\" !== t.prefix) throw Error(\"Unrecognised address format\");\n    return Buffer.from(Cr(e)).slice(1);\n  },\n  encoder: (vt = Buffer.from([0]), function (r) {\n    return qr(\"iota\", Nr(Buffer.concat([vt, r])), void 0);\n  }),\n  name: \"IOTA\"\n}, mt(\"HNS\", 5353, function (r) {\n  if (20 !== r.length) throw Error(\"P2WPKH must be 20 bytes\");\n  var t = [0].concat(Nr(r));\n  return qr(\"hs\", t);\n}, function (r) {\n  var t = xr(r),\n      e = t.words;\n  if (\"hs\" !== t.prefix) throw Error(\"Unrecognised address format\");\n  var n = e[0],\n      o = Cr(e.slice(1));\n  if (0 !== n) throw Error(\"Bad program version\");\n  if (20 !== o.length) throw Error(\"Witness program hash is the wrong size\");\n  return Buffer.from(o);\n}), mt(\"STX\", 5757, function (r) {\n  var t = r.toString(\"hex\"),\n      e = t.substring(0, t.length - 8);\n  if (!e.match(/^[0-9a-fA-F]{40}$/)) throw new Error(\"Invalid argument: not a hash160 hex string\");\n  (e = e.toLowerCase()).length % 2 != 0 && (e = \"0\" + e);\n  var n = {\n    p2pkh: 22,\n    p2sh: 20\n  },\n      o = t.slice(-8),\n      i = \"\",\n      a = \"\";\n  return o === F(\"\" + n.p2pkh.toString(16) + e) ? (a = \"P\", i = M(\"\" + e + o)) : o === F(\"\" + n.p2sh.toString(16) + e) && (a = \"M\", i = M(\"\" + e + o)), \"S\" + a + i;\n}, function (r) {\n  if (r.length <= 5) throw new Error(\"Invalid c32 address: invalid length\");\n  if (\"S\" !== r[0]) throw new Error('Invalid c32 address: must start with \"S\"');\n  var t = D(r.slice(1)),\n      e = T.indexOf(t[0]).toString(16);\n  1 === e.length && (e = \"0\" + e);\n\n  var n = function (r) {\n    if (!(r = D(r)).match(\"^[\" + T + \"]*$\")) throw new Error(\"Not a c32-encoded string\");\n\n    for (var t = r.match(\"^\" + T[0] + \"*\"), e = t ? t[0].length : 0, n = [], o = 0, i = 0, a = r.length - 1; a >= 0; a--) {\n      4 === i && (n.unshift(k[o]), i = 0, o = 0);\n      var u = (T.indexOf(r[a]) << i) + o,\n          f = k[u % 16];\n      if ((o = u >> 4) > 1 << (i += 1)) throw new Error(\"Panic error in decoding.\");\n      n.unshift(f);\n    }\n\n    n.unshift(k[o]), n.length % 2 == 1 && n.unshift(\"0\");\n\n    for (var s = 0, c = 0; c < n.length && \"0\" === n[c]; c++) s++;\n\n    for (var h = (n = n.slice(s - s % 2)).join(\"\"), l = 0; l < e; l++) h = \"00\" + h;\n\n    return h;\n  }(t.slice(1)),\n      o = n.slice(-8);\n\n  if (F(\"\" + e + n.substring(0, n.length - 8)) !== o) throw new Error(\"Invalid c32check string: checksum mismatch\");\n  return Buffer.from(n, \"hex\");\n}), Gr(\"GO\", 6060), {\n  coinType: 8444,\n  decoder: function (t) {\n    var e = r.decode(t, 90),\n        n = e.words;\n    if (\"xch\" !== e.prefix) throw Error(\"Unrecognised address format\");\n    return Buffer.from(r.fromWords(n));\n  },\n  encoder: function (t) {\n    return r.encode(\"xch\", r.toWords(t), 90);\n  },\n  name: \"XCH\"\n}, mt(\"NULS\", 8964, function (r) {\n  for (var t = 255 & r[0] | (255 & r[1]) << 8, e = Buffer.allocUnsafe(r.length + 1), n = 0, o = 0, a = 0; a < r.length; a++) e[a] = n = (n = r[a]) > 127 ? n - 256 : n, o ^= n;\n\n  e[r.length] = o;\n  var u = \"\";\n  if (1 === t) u = \"NULS\";else if (2 === t) u = \"tNULS\";else {\n    var f = Buffer.concat([Buffer.from([255 & t >> 0]), Buffer.from([255 & t >> 8])]);\n    u = i(f).toUpperCase();\n  }\n  return u + [\"a\", \"b\", \"c\", \"d\", \"e\"][u.length - 1] + i(e);\n}, function (r) {\n  if (r.startsWith(\"NULS\")) r = r.substring(5);else if (r.startsWith(\"tNULS\")) r = r.substring(6);else for (var t = 0; t < r.length; t++) if (r.charAt(t).charCodeAt(0) >= 97) {\n    r = r.substring(t + 1);\n    break;\n  }\n\n  for (var e = o(r), n = 0, i = 0, a = 0; a < e.length - 1; a++) e[a] = n = (n = e[a]) > 127 ? n - 256 : n, i ^= n;\n\n  if (i < 0 && (i = 256 + i), i !== e[e.length - 1]) throw Error(\"Unrecognised address format\");\n  return e.slice(0, -1);\n}), _r(\"AVAX\", 9e3, \"avax\"), Gr(\"NRG\", 9797), mt(\"ARDR\", 16754, function (r) {\n  for (var t = r.toString(\"hex\"), e = [], n = 0, o = 0; n < t.length; n += 2) e[ft[o++]] = 16 * parseInt(t[n], 16) + parseInt(t[n + 1], 16);\n\n  for (var i = \"\", a = [], u = 0; u < 17; u++) {\n    if (e[u] >= ut.length || 17 !== e.length) throw Error(\"Unrecognised address format\");\n    i += ut[e[u]], (u < 12 && (u + 1) % 4 == 0 || 16 === u) && (a.push(i), i = \"\");\n  }\n\n  return \"ARDOR-\" + a.join(\"-\");\n}, function (r) {\n  var t = [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];\n  if (\"ARDOR\" !== (r = r.replace(/(^\\s+)|(\\s+$)/g, \"\").toUpperCase()).slice(0, 5) || 5 !== r.split(\"-\").length) throw Error(\"Unrecognised address format\");\n\n  for (var e, n = [], o = 0, i = function (r, t) {\n    var e = \"undefined\" != typeof Symbol && r[Symbol.iterator] || r[\"@@iterator\"];\n    if (e) return (e = e.call(r)).next.bind(e);\n\n    if (Array.isArray(r) || (e = function (r, t) {\n      if (r) {\n        if (\"string\" == typeof r) return N(r, void 0);\n        var e = Object.prototype.toString.call(r).slice(8, -1);\n        return \"Object\" === e && r.constructor && (e = r.constructor.name), \"Map\" === e || \"Set\" === e ? Array.from(r) : \"Arguments\" === e || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(e) ? N(r, void 0) : void 0;\n      }\n    }(r))) {\n      e && (r = e);\n      var n = 0;\n      return function () {\n        return n >= r.length ? {\n          done: !0\n        } : {\n          done: !1,\n          value: r[n++]\n        };\n      };\n    }\n\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }(r = r.substr(r.indexOf(\"-\"))); !(e = i()).done;) {\n    var a = ut.indexOf(e.value);\n    if (a >= 0 && (n[o++] = a, o > 17)) throw Error(\"Unrecognised address format\");\n  }\n\n  for (var u = 0, f = 0; u < o; u++) t[ft[f++]] = n[u];\n\n  if (!function (r) {\n    for (var t, e, n = 0, o = 1; o < 5; o++) {\n      for (var i = 0, a = 0; a < 31; a++) if (!(a > 12 && a < 27)) {\n        var u = a;\n        a > 26 && (u -= 14), i ^= (e = at[o * a % 31], 0 === (t = r[u]) || 0 === e ? 0 : at[(it[t] + it[e]) % 31]);\n      }\n\n      n |= i;\n    }\n\n    return 0 === n;\n  }(t)) throw Error(\"Unrecognised address format\");\n  return Buffer.from(t);\n}), Qr(\"ZEL\", 19167, \"za\", [[28, 184]], [[28, 189]]), Gr(\"CELO\", 52752), Tr(\"WICC\", 99999, [[73]], [[51]]), mt(\"WAN\", 5718350, function (r) {\n  return nt(\"0x\" + r.toString(\"hex\"));\n}, function (r) {\n  if (/^0x[0-9a-fA-F]{40}$/.test(t = r) && nt(t) === t) return Buffer.from(h(r), \"hex\");\n  throw Error(\"Invalid address checksum\");\n  var t;\n}), mt(\"WAVES\", 5741564, i, function (r) {\n  var t = o(r);\n  if (1 !== t[0]) throw Error(\"Bad program version\");\n  if (87 !== t[1] || 26 !== t.length) throw Error(\"Unrecognised address format\");\n  var n = t.slice(0, 22),\n      i = t.slice(22, 26);\n  if (!new q(256).update(Buffer.from(e(n, null, 32))).digest().slice(0, 4).equals(i)) throw Error(\"Invalid checksum\");\n  return t;\n}), jr(\"BSC\", 56), jr(\"MATIC\", 137), jr(\"ARB1\", 42161)],\n    Bt = Object.assign.apply(Object, [{}].concat(yt.map(function (r) {\n  var t;\n  return (t = {})[r.name] = r, t;\n}))),\n    bt = Object.assign.apply(Object, [{}].concat(yt.map(function (r) {\n  var t;\n  return (t = {})[r.coinType] = r, t;\n})));\n\nexport { Zr as convertCoinTypeToEVMChainId, Hr as convertEVMChainIdToCoinType, yt as formats, bt as formatsByCoinType, Bt as formatsByName };","map":{"version":3,"sources":["../node_modules/big-integer/BigInteger.js","../src/blockstack/stx-c32.ts","../src/cbor/cbor.ts","../src/leb128/unsigned.ts","../src/filecoin/address.ts","../src/filecoin/index.ts","../src/flow/index.ts","../src/groestl-hash-js/op.js","../src/groestl-hash-js/helper.js","../src/groestl-hash-js/groestl.js","../src/monero/xmr-base58.ts","../src/nimq/index.ts","../src/index.ts","../src/groestl-hash-js/index.js"],"names":["bigInt","undefined","BASE","MAX_INT","MAX_INT_ARR","smallToArray","LOG_MAX_INT","Math","log","Integer","v","radix","parseValue","parseBase","BigInteger","value","sign","this","isSmall","prototype","Object","create","SmallInteger","isPrecise","n","floor","arrayToSmall","arr","trim","length","compareAbs","i","createArray","x","Array","truncate","ceil","add","a","b","l_a","l_b","r","carry","base","sum","push","addAny","addSmall","l","subtract","negate","abs","plus","a_l","b_l","borrow","difference","subtractSmall","subtractAny","minus","small","multiplyLong","product","a_i","j","multiplySmall","shiftLeft","concat","multiplyKaratsuba","y","max","slice","d","c","ac","bd","abcd","l1","l2","multiply","times","multiplySmallAndArray","_multiplyBySmall","square","result","divisorMostSignificantDigit","lambda","remainder","divisor","quotientDigit","shift","q","divModSmall","part","guess","xlen","highx","check","unshift","reverse","quotient","divModAny","self","Error","comparison","divMod1","divMod2","qSign","mod","mSign","divmod","divide","over","pow","isEven","toString","modPow","exp","isZero","isPositive","isOdd","compare","Infinity","compareTo","equals","eq","notEquals","neq","greater","gt","lesser","lt","greaterOrEquals","geq","lesserOrEquals","leq","isNegative","isUnit","isDivisibleBy","isBasicPrime","millerRabinTest","nPrev","prev","next","isPrime","strict","bits","bitLength","logN","t","isProbablePrime","iterations","randBetween","modInv","zero","newT","one","newR","lastT","lastR","powersOfTwo","powers2Length","highestPower2","shift_isSmall","String","shiftRight","remQuo","bitwise","fn","xSign","ySign","xRem","not","yRem","xDigit","yDigit","xDivMod","yDivMod","toJSNumber","and","or","xor","roughLOB","integerLogarithm","tmp","p","e","min","gcd","low","range","random","restricted","top","digit","text","absBase","toLowerCase","test","charCodeAt","parseInt","isNaN","digits","charCode","start","parseBaseFromArray","val","stringify","charAt","toBase","apply","map","valueOf","neg","Number","out","left","toBaseString","join","toArray","str","toJSON","parseStringValue","split","decimalPlace","indexOf","parseNumberValue","minusOne","lcm","isInstance","fromArray","module","hasOwnProperty","C32_ALPHABET","hex","hashSha256","data","Buffer","from","sha256","update","digest","c32checksum","dataHex","hash160hex","substring","match","version","p2pkh","p2sh","checksumHex","c32str","prefix","c32encode","inputHex","res","currentCode","nextCode","nextBits","C32leadingZeros","zeroPrefix","numLeadingZeroBytesInHex","c32normalize","c32input","toUpperCase","replace","c32data","versionHex","c32decode","checksum","numLeadingZeroBytes","carryBits","currentValue","currentHexDigit","hexLeadingZeros","hexStr","is","TaggedValue","tag","SimpleValue","tagger","simpleValue","dataView","DataView","ta","Uint8Array","offset","commitRead","readArrayBuffer","tempArrayBuffer","ArrayBuffer","tempDataView","readUint16","exponent","fraction","setUint32","getFloat32","getFloat64","readUint8","getUint16","readUint32","getUint32","readBreak","readLength","additionalInformation","readIndefiniteStringLength","majorType","initialByte","appendUtf16Data","utf16data","decodeItem","readFloat16","elements","fullArrayLength","fullArray","fullArrayOffset","set","fromCharCode","retArray","retObject","simpleValueFunction","ret","byteLength","byteView","lastLength","prepareWrite","newByteLength","requiredLength","oldDataView","uint32count","commitWrite","setFloat64","writeUint8","setUint8","writeUint8Array","writeUint16","setUint16","writeUint32","writeUint64","high","view","writeTypeAndLength","type","encodeItem","writeFloat64","utf8data","converted","isArray","isView","buffer","SharedArrayBuffer","writeVarUint","keys","key","retView","getUint8","Bn","require","Stream","buf","bytesRead","read","size","write","readBn","stream","num","byt","ior","shln","bigNum","maskn","toNumber","ishrn","Address","protocol","payload","expect","getChecksum","ingest","blake2b","address","checkAddressString","network","protocolByte","raw","filNewAddress","payloadChecksum","b32decode","addressObj","filEncode","addressString","decoded","bytes","bytes2a","hex2a","bytes32encoded","b32encode","input","filDecode","parityCheckMatrixColumns","BigInt","chain","codeWord","codeword","parity","ChainID","u64","h","hi","lo","oWord","lowest","lowMid","highMid","highest","addOne","obj","__isLong__","isFinite","multiplier","fromNumber","a32","a16","a00","b32","b16","b00","c48","c32","c16","c00","clone","toMoveUp","setShiftLeft","bitsOff32","toMoveDown","rotateLeft","rotateRight","setRotateLeft","setRotateRight","newHigh","setFlip","setxorOne","setxor64","arguments","u","xor64","bufferInsert","bufferOffset","len","dataOffset","array","s","bytes2Int64Buffer","uint64","int32Buffer2Bytes","keyStr","b64Decode","output","chr2","chr3","enc1","enc2","enc3","enc4","T0","T1","T2","T3","T4","T5","T6","T7","B64","j64","nj64","r64","compress","int64buf","state","g","m","uu","temp","ii","bufferInsert64","groestl","ctx","ptr","V","clen","int64Buf","count","pad","padLen","bufferSet","final","groestll","format","msg","string2bytes","groestlClose","int32ArrayToHexString","b58","alphabetStr","alphabet","encodedBlockSizes","alphabetSize","bin","twopow8","encodeBlock","index","uint8BeTo64","div","decodeBlock","resSize","resNum","order","uint64ToBe8","xmrAddressEncoder","hexToBin","fullBlockCount","lastBlockSize","subarray","binToStr","xmrAddressDecoder","strToBin","lastBlockDecodedSize","dataU","binToHex","nimqCheck","ccode","code","substr","_ibanCheck","byte","base32","charmap","forEach","symbol","char","startsWith","addr","base32Part","fromBase32","toBase32","decode","bech32Decode","encode","bech32Encode","fromWords","bech32FromWords","toWords","bech32ToWords","bech32","makeBitcoinBase58CheckEncoder","p2pkhVersion","p2shVersion","readUInt8","bs58Encode","makeBitcoinBase58CheckDecoder","p2pkhVersions","p2shVersions","bs58Decode","checkVersion","every","some","bitcoinBase58Chain","name","coinType","decoder","encoder","makeBech32SegwitEncoder","hrp","words","makeBech32SegwitDecoder","script","makeBitcoinEncoder","encodeBech32","encodeBase58Check","makeBitcoinDecoder","decodeBech32","decodeBase58Check","bitcoinChain","makeZcashEncoder","makeBech32Encoder","makeZcashDecoder","makeBech32Decoder","zcashChain","cashaddrEncode","encodeByron","decodeByron","crc32","byteOffset","cborEncodedAddress","cborEncode","bs58EncodeNoCheck","bs58DecodeNoCheck","cborDecoded","cborDecode","taggedAddr","addrChecksum","calculatedChecksum","makeCardanoEncoder","ndata","hash","cashaddrDecode","decodeCashAddr","grsCheckSumFn","rtn","bs58grscheckEncode","newChecksum","decodeRaw","bs58grscheckDecode","makeBase58GrsCheckEncoder","makeBase58GrsCheckDecoder","makeGroestlcoinDecoder","makeChecksummedHexEncoder","chainId","rskToChecksumAddress","makeChecksummedHexDecoder","stripped","rskStripHexPrefix","rskIsValidChecksumAddress","hexChecksumChain","convertEVMChainIdToCoinType","convertCoinTypeToEVMChainId","SLIP44_MSB","evmChain","limit","currentPrefix","bech32Chain","bufferAddrVersion","bech32m","makeEosioEncoder","eosPublicKey","isValid","fromHex","makeEosioDecoder","regex","RegExp","wPrefix","toBuffer","eosioChain","isValidXemAddress","ss58Encode","ksmAddrDecoder","ss58Decode","decodeEd25519PublicKey","encodeEd25519PublicKey","getBigUint64","alloc","components","shard","realm","account","setBigUint64","includes","validateLiskAddress","wanToChecksumAddress","hashed","Keccak","hashByte","withoutChecksum","isByteArrayValid","addressBytes","readInt8","givenCheckSum","generatedCheckSum","base58String","SHA3","bufferData","body","glog","gexp","pos","cwmap","clean","ardrCheckSum","dataStr","acc","algoChecksum","pk","sha512_256","publicKey","expectedChecksum","repeat","encoded","nanoBase32Encode","nanoBase32Decode","isValidAddress","mainnet","addrBytes","copy","tempBuffer","allocUnsafe","chainIdBuffer","blake2bHex","SIA_CHECKSUM_SIZE","SIA_HASH_SIZE","getConfig","formats","xrpCodec","encodeChecked","decodeChecked","iotaBech32Chain","formatsByName","assign","formatsByCoinType"],"mappings":"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","sourcesContent":["var bigInt = (function (undefined) {\r\n    \"use strict\";\r\n\r\n    var BASE = 1e7,\r\n        LOG_BASE = 7,\r\n        MAX_INT = 9007199254740992,\r\n        MAX_INT_ARR = smallToArray(MAX_INT),\r\n        LOG_MAX_INT = Math.log(MAX_INT);\r\n\r\n    function Integer(v, radix) {\r\n        if (typeof v === \"undefined\") return Integer[0];\r\n        if (typeof radix !== \"undefined\") return +radix === 10 ? parseValue(v) : parseBase(v, radix);\r\n        return parseValue(v);\r\n    }\r\n\r\n    function BigInteger(value, sign) {\r\n        this.value = value;\r\n        this.sign = sign;\r\n        this.isSmall = false;\r\n    }\r\n    BigInteger.prototype = Object.create(Integer.prototype);\r\n\r\n    function SmallInteger(value) {\r\n        this.value = value;\r\n        this.sign = value < 0;\r\n        this.isSmall = true;\r\n    }\r\n    SmallInteger.prototype = Object.create(Integer.prototype);\r\n\r\n    function isPrecise(n) {\r\n        return -MAX_INT < n && n < MAX_INT;\r\n    }\r\n\r\n    function smallToArray(n) { // For performance reasons doesn't reference BASE, need to change this function if BASE changes\r\n        if (n < 1e7)\r\n            return [n];\r\n        if (n < 1e14)\r\n            return [n % 1e7, Math.floor(n / 1e7)];\r\n        return [n % 1e7, Math.floor(n / 1e7) % 1e7, Math.floor(n / 1e14)];\r\n    }\r\n\r\n    function arrayToSmall(arr) { // If BASE changes this function may need to change\r\n        trim(arr);\r\n        var length = arr.length;\r\n        if (length < 4 && compareAbs(arr, MAX_INT_ARR) < 0) {\r\n            switch (length) {\r\n                case 0: return 0;\r\n                case 1: return arr[0];\r\n                case 2: return arr[0] + arr[1] * BASE;\r\n                default: return arr[0] + (arr[1] + arr[2] * BASE) * BASE;\r\n            }\r\n        }\r\n        return arr;\r\n    }\r\n\r\n    function trim(v) {\r\n        var i = v.length;\r\n        while (v[--i] === 0);\r\n        v.length = i + 1;\r\n    }\r\n\r\n    function createArray(length) { // function shamelessly stolen from Yaffle's library https://github.com/Yaffle/BigInteger\r\n        var x = new Array(length);\r\n        var i = -1;\r\n        while (++i < length) {\r\n            x[i] = 0;\r\n        }\r\n        return x;\r\n    }\r\n\r\n    function truncate(n) {\r\n        if (n > 0) return Math.floor(n);\r\n        return Math.ceil(n);\r\n    }\r\n\r\n    function add(a, b) { // assumes a and b are arrays with a.length >= b.length\r\n        var l_a = a.length,\r\n            l_b = b.length,\r\n            r = new Array(l_a),\r\n            carry = 0,\r\n            base = BASE,\r\n            sum, i;\r\n        for (i = 0; i < l_b; i++) {\r\n            sum = a[i] + b[i] + carry;\r\n            carry = sum >= base ? 1 : 0;\r\n            r[i] = sum - carry * base;\r\n        }\r\n        while (i < l_a) {\r\n            sum = a[i] + carry;\r\n            carry = sum === base ? 1 : 0;\r\n            r[i++] = sum - carry * base;\r\n        }\r\n        if (carry > 0) r.push(carry);\r\n        return r;\r\n    }\r\n\r\n    function addAny(a, b) {\r\n        if (a.length >= b.length) return add(a, b);\r\n        return add(b, a);\r\n    }\r\n\r\n    function addSmall(a, carry) { // assumes a is array, carry is number with 0 <= carry < MAX_INT\r\n        var l = a.length,\r\n            r = new Array(l),\r\n            base = BASE,\r\n            sum, i;\r\n        for (i = 0; i < l; i++) {\r\n            sum = a[i] - base + carry;\r\n            carry = Math.floor(sum / base);\r\n            r[i] = sum - carry * base;\r\n            carry += 1;\r\n        }\r\n        while (carry > 0) {\r\n            r[i++] = carry % base;\r\n            carry = Math.floor(carry / base);\r\n        }\r\n        return r;\r\n    }\r\n\r\n    BigInteger.prototype.add = function (v) {\r\n        var n = parseValue(v);\r\n        if (this.sign !== n.sign) {\r\n            return this.subtract(n.negate());\r\n        }\r\n        var a = this.value, b = n.value;\r\n        if (n.isSmall) {\r\n            return new BigInteger(addSmall(a, Math.abs(b)), this.sign);\r\n        }\r\n        return new BigInteger(addAny(a, b), this.sign);\r\n    };\r\n    BigInteger.prototype.plus = BigInteger.prototype.add;\r\n\r\n    SmallInteger.prototype.add = function (v) {\r\n        var n = parseValue(v);\r\n        var a = this.value;\r\n        if (a < 0 !== n.sign) {\r\n            return this.subtract(n.negate());\r\n        }\r\n        var b = n.value;\r\n        if (n.isSmall) {\r\n            if (isPrecise(a + b)) return new SmallInteger(a + b);\r\n            b = smallToArray(Math.abs(b));\r\n        }\r\n        return new BigInteger(addSmall(b, Math.abs(a)), a < 0);\r\n    };\r\n    SmallInteger.prototype.plus = SmallInteger.prototype.add;\r\n\r\n    function subtract(a, b) { // assumes a and b are arrays with a >= b\r\n        var a_l = a.length,\r\n            b_l = b.length,\r\n            r = new Array(a_l),\r\n            borrow = 0,\r\n            base = BASE,\r\n            i, difference;\r\n        for (i = 0; i < b_l; i++) {\r\n            difference = a[i] - borrow - b[i];\r\n            if (difference < 0) {\r\n                difference += base;\r\n                borrow = 1;\r\n            } else borrow = 0;\r\n            r[i] = difference;\r\n        }\r\n        for (i = b_l; i < a_l; i++) {\r\n            difference = a[i] - borrow;\r\n            if (difference < 0) difference += base;\r\n            else {\r\n                r[i++] = difference;\r\n                break;\r\n            }\r\n            r[i] = difference;\r\n        }\r\n        for (; i < a_l; i++) {\r\n            r[i] = a[i];\r\n        }\r\n        trim(r);\r\n        return r;\r\n    }\r\n\r\n    function subtractAny(a, b, sign) {\r\n        var value;\r\n        if (compareAbs(a, b) >= 0) {\r\n            value = subtract(a, b);\r\n        } else {\r\n            value = subtract(b, a);\r\n            sign = !sign;\r\n        }\r\n        value = arrayToSmall(value);\r\n        if (typeof value === \"number\") {\r\n            if (sign) value = -value;\r\n            return new SmallInteger(value);\r\n        }\r\n        return new BigInteger(value, sign);\r\n    }\r\n\r\n    function subtractSmall(a, b, sign) { // assumes a is array, b is number with 0 <= b < MAX_INT\r\n        var l = a.length,\r\n            r = new Array(l),\r\n            carry = -b,\r\n            base = BASE,\r\n            i, difference;\r\n        for (i = 0; i < l; i++) {\r\n            difference = a[i] + carry;\r\n            carry = Math.floor(difference / base);\r\n            difference %= base;\r\n            r[i] = difference < 0 ? difference + base : difference;\r\n        }\r\n        r = arrayToSmall(r);\r\n        if (typeof r === \"number\") {\r\n            if (sign) r = -r;\r\n            return new SmallInteger(r);\r\n        } return new BigInteger(r, sign);\r\n    }\r\n\r\n    BigInteger.prototype.subtract = function (v) {\r\n        var n = parseValue(v);\r\n        if (this.sign !== n.sign) {\r\n            return this.add(n.negate());\r\n        }\r\n        var a = this.value, b = n.value;\r\n        if (n.isSmall)\r\n            return subtractSmall(a, Math.abs(b), this.sign);\r\n        return subtractAny(a, b, this.sign);\r\n    };\r\n    BigInteger.prototype.minus = BigInteger.prototype.subtract;\r\n\r\n    SmallInteger.prototype.subtract = function (v) {\r\n        var n = parseValue(v);\r\n        var a = this.value;\r\n        if (a < 0 !== n.sign) {\r\n            return this.add(n.negate());\r\n        }\r\n        var b = n.value;\r\n        if (n.isSmall) {\r\n            return new SmallInteger(a - b);\r\n        }\r\n        return subtractSmall(b, Math.abs(a), a >= 0);\r\n    };\r\n    SmallInteger.prototype.minus = SmallInteger.prototype.subtract;\r\n\r\n    BigInteger.prototype.negate = function () {\r\n        return new BigInteger(this.value, !this.sign);\r\n    };\r\n    SmallInteger.prototype.negate = function () {\r\n        var sign = this.sign;\r\n        var small = new SmallInteger(-this.value);\r\n        small.sign = !sign;\r\n        return small;\r\n    };\r\n\r\n    BigInteger.prototype.abs = function () {\r\n        return new BigInteger(this.value, false);\r\n    };\r\n    SmallInteger.prototype.abs = function () {\r\n        return new SmallInteger(Math.abs(this.value));\r\n    };\r\n\r\n    function multiplyLong(a, b) {\r\n        var a_l = a.length,\r\n            b_l = b.length,\r\n            l = a_l + b_l,\r\n            r = createArray(l),\r\n            base = BASE,\r\n            product, carry, i, a_i, b_j;\r\n        for (i = 0; i < a_l; ++i) {\r\n            a_i = a[i];\r\n            for (var j = 0; j < b_l; ++j) {\r\n                b_j = b[j];\r\n                product = a_i * b_j + r[i + j];\r\n                carry = Math.floor(product / base);\r\n                r[i + j] = product - carry * base;\r\n                r[i + j + 1] += carry;\r\n            }\r\n        }\r\n        trim(r);\r\n        return r;\r\n    }\r\n\r\n    function multiplySmall(a, b) { // assumes a is array, b is number with |b| < BASE\r\n        var l = a.length,\r\n            r = new Array(l),\r\n            base = BASE,\r\n            carry = 0,\r\n            product, i;\r\n        for (i = 0; i < l; i++) {\r\n            product = a[i] * b + carry;\r\n            carry = Math.floor(product / base);\r\n            r[i] = product - carry * base;\r\n        }\r\n        while (carry > 0) {\r\n            r[i++] = carry % base;\r\n            carry = Math.floor(carry / base);\r\n        }\r\n        return r;\r\n    }\r\n\r\n    function shiftLeft(x, n) {\r\n        var r = [];\r\n        while (n-- > 0) r.push(0);\r\n        return r.concat(x);\r\n    }\r\n\r\n    function multiplyKaratsuba(x, y) {\r\n        var n = Math.max(x.length, y.length);\r\n\r\n        if (n <= 30) return multiplyLong(x, y);\r\n        n = Math.ceil(n / 2);\r\n\r\n        var b = x.slice(n),\r\n            a = x.slice(0, n),\r\n            d = y.slice(n),\r\n            c = y.slice(0, n);\r\n\r\n        var ac = multiplyKaratsuba(a, c),\r\n            bd = multiplyKaratsuba(b, d),\r\n            abcd = multiplyKaratsuba(addAny(a, b), addAny(c, d));\r\n\r\n        var product = addAny(addAny(ac, shiftLeft(subtract(subtract(abcd, ac), bd), n)), shiftLeft(bd, 2 * n));\r\n        trim(product);\r\n        return product;\r\n    }\r\n\r\n    // The following function is derived from a surface fit of a graph plotting the performance difference\r\n    // between long multiplication and karatsuba multiplication versus the lengths of the two arrays.\r\n    function useKaratsuba(l1, l2) {\r\n        return -0.012 * l1 - 0.012 * l2 + 0.000015 * l1 * l2 > 0;\r\n    }\r\n\r\n    BigInteger.prototype.multiply = function (v) {\r\n        var n = parseValue(v),\r\n            a = this.value, b = n.value,\r\n            sign = this.sign !== n.sign,\r\n            abs;\r\n        if (n.isSmall) {\r\n            if (b === 0) return Integer[0];\r\n            if (b === 1) return this;\r\n            if (b === -1) return this.negate();\r\n            abs = Math.abs(b);\r\n            if (abs < BASE) {\r\n                return new BigInteger(multiplySmall(a, abs), sign);\r\n            }\r\n            b = smallToArray(abs);\r\n        }\r\n        if (useKaratsuba(a.length, b.length)) // Karatsuba is only faster for certain array sizes\r\n            return new BigInteger(multiplyKaratsuba(a, b), sign);\r\n        return new BigInteger(multiplyLong(a, b), sign);\r\n    };\r\n\r\n    BigInteger.prototype.times = BigInteger.prototype.multiply;\r\n\r\n    function multiplySmallAndArray(a, b, sign) { // a >= 0\r\n        if (a < BASE) {\r\n            return new BigInteger(multiplySmall(b, a), sign);\r\n        }\r\n        return new BigInteger(multiplyLong(b, smallToArray(a)), sign);\r\n    }\r\n    SmallInteger.prototype._multiplyBySmall = function (a) {\r\n        if (isPrecise(a.value * this.value)) {\r\n            return new SmallInteger(a.value * this.value);\r\n        }\r\n        return multiplySmallAndArray(Math.abs(a.value), smallToArray(Math.abs(this.value)), this.sign !== a.sign);\r\n    };\r\n    BigInteger.prototype._multiplyBySmall = function (a) {\r\n        if (a.value === 0) return Integer[0];\r\n        if (a.value === 1) return this;\r\n        if (a.value === -1) return this.negate();\r\n        return multiplySmallAndArray(Math.abs(a.value), this.value, this.sign !== a.sign);\r\n    };\r\n    SmallInteger.prototype.multiply = function (v) {\r\n        return parseValue(v)._multiplyBySmall(this);\r\n    };\r\n    SmallInteger.prototype.times = SmallInteger.prototype.multiply;\r\n\r\n    function square(a) {\r\n        //console.assert(2 * BASE * BASE < MAX_INT);\r\n        var l = a.length,\r\n            r = createArray(l + l),\r\n            base = BASE,\r\n            product, carry, i, a_i, a_j;\r\n        for (i = 0; i < l; i++) {\r\n            a_i = a[i];\r\n            carry = 0 - a_i * a_i;\r\n            for (var j = i; j < l; j++) {\r\n                a_j = a[j];\r\n                product = 2 * (a_i * a_j) + r[i + j] + carry;\r\n                carry = Math.floor(product / base);\r\n                r[i + j] = product - carry * base;\r\n            }\r\n            r[i + l] = carry;\r\n        }\r\n        trim(r);\r\n        return r;\r\n    }\r\n\r\n    BigInteger.prototype.square = function () {\r\n        return new BigInteger(square(this.value), false);\r\n    };\r\n\r\n    SmallInteger.prototype.square = function () {\r\n        var value = this.value * this.value;\r\n        if (isPrecise(value)) return new SmallInteger(value);\r\n        return new BigInteger(square(smallToArray(Math.abs(this.value))), false);\r\n    };\r\n\r\n    function divMod1(a, b) { // Left over from previous version. Performs faster than divMod2 on smaller input sizes.\r\n        var a_l = a.length,\r\n            b_l = b.length,\r\n            base = BASE,\r\n            result = createArray(b.length),\r\n            divisorMostSignificantDigit = b[b_l - 1],\r\n            // normalization\r\n            lambda = Math.ceil(base / (2 * divisorMostSignificantDigit)),\r\n            remainder = multiplySmall(a, lambda),\r\n            divisor = multiplySmall(b, lambda),\r\n            quotientDigit, shift, carry, borrow, i, l, q;\r\n        if (remainder.length <= a_l) remainder.push(0);\r\n        divisor.push(0);\r\n        divisorMostSignificantDigit = divisor[b_l - 1];\r\n        for (shift = a_l - b_l; shift >= 0; shift--) {\r\n            quotientDigit = base - 1;\r\n            if (remainder[shift + b_l] !== divisorMostSignificantDigit) {\r\n                quotientDigit = Math.floor((remainder[shift + b_l] * base + remainder[shift + b_l - 1]) / divisorMostSignificantDigit);\r\n            }\r\n            // quotientDigit <= base - 1\r\n            carry = 0;\r\n            borrow = 0;\r\n            l = divisor.length;\r\n            for (i = 0; i < l; i++) {\r\n                carry += quotientDigit * divisor[i];\r\n                q = Math.floor(carry / base);\r\n                borrow += remainder[shift + i] - (carry - q * base);\r\n                carry = q;\r\n                if (borrow < 0) {\r\n                    remainder[shift + i] = borrow + base;\r\n                    borrow = -1;\r\n                } else {\r\n                    remainder[shift + i] = borrow;\r\n                    borrow = 0;\r\n                }\r\n            }\r\n            while (borrow !== 0) {\r\n                quotientDigit -= 1;\r\n                carry = 0;\r\n                for (i = 0; i < l; i++) {\r\n                    carry += remainder[shift + i] - base + divisor[i];\r\n                    if (carry < 0) {\r\n                        remainder[shift + i] = carry + base;\r\n                        carry = 0;\r\n                    } else {\r\n                        remainder[shift + i] = carry;\r\n                        carry = 1;\r\n                    }\r\n                }\r\n                borrow += carry;\r\n            }\r\n            result[shift] = quotientDigit;\r\n        }\r\n        // denormalization\r\n        remainder = divModSmall(remainder, lambda)[0];\r\n        return [arrayToSmall(result), arrayToSmall(remainder)];\r\n    }\r\n\r\n    function divMod2(a, b) { // Implementation idea shamelessly stolen from Silent Matt's library http://silentmatt.com/biginteger/\r\n        // Performs faster than divMod1 on larger input sizes.\r\n        var a_l = a.length,\r\n            b_l = b.length,\r\n            result = [],\r\n            part = [],\r\n            base = BASE,\r\n            guess, xlen, highx, highy, check;\r\n        while (a_l) {\r\n            part.unshift(a[--a_l]);\r\n            trim(part);\r\n            if (compareAbs(part, b) < 0) {\r\n                result.push(0);\r\n                continue;\r\n            }\r\n            xlen = part.length;\r\n            highx = part[xlen - 1] * base + part[xlen - 2];\r\n            highy = b[b_l - 1] * base + b[b_l - 2];\r\n            if (xlen > b_l) {\r\n                highx = (highx + 1) * base;\r\n            }\r\n            guess = Math.ceil(highx / highy);\r\n            do {\r\n                check = multiplySmall(b, guess);\r\n                if (compareAbs(check, part) <= 0) break;\r\n                guess--;\r\n            } while (guess);\r\n            result.push(guess);\r\n            part = subtract(part, check);\r\n        }\r\n        result.reverse();\r\n        return [arrayToSmall(result), arrayToSmall(part)];\r\n    }\r\n\r\n    function divModSmall(value, lambda) {\r\n        var length = value.length,\r\n            quotient = createArray(length),\r\n            base = BASE,\r\n            i, q, remainder, divisor;\r\n        remainder = 0;\r\n        for (i = length - 1; i >= 0; --i) {\r\n            divisor = remainder * base + value[i];\r\n            q = truncate(divisor / lambda);\r\n            remainder = divisor - q * lambda;\r\n            quotient[i] = q | 0;\r\n        }\r\n        return [quotient, remainder | 0];\r\n    }\r\n\r\n    function divModAny(self, v) {\r\n        var value, n = parseValue(v);\r\n        var a = self.value, b = n.value;\r\n        var quotient;\r\n        if (b === 0) throw new Error(\"Cannot divide by zero\");\r\n        if (self.isSmall) {\r\n            if (n.isSmall) {\r\n                return [new SmallInteger(truncate(a / b)), new SmallInteger(a % b)];\r\n            }\r\n            return [Integer[0], self];\r\n        }\r\n        if (n.isSmall) {\r\n            if (b === 1) return [self, Integer[0]];\r\n            if (b == -1) return [self.negate(), Integer[0]];\r\n            var abs = Math.abs(b);\r\n            if (abs < BASE) {\r\n                value = divModSmall(a, abs);\r\n                quotient = arrayToSmall(value[0]);\r\n                var remainder = value[1];\r\n                if (self.sign) remainder = -remainder;\r\n                if (typeof quotient === \"number\") {\r\n                    if (self.sign !== n.sign) quotient = -quotient;\r\n                    return [new SmallInteger(quotient), new SmallInteger(remainder)];\r\n                }\r\n                return [new BigInteger(quotient, self.sign !== n.sign), new SmallInteger(remainder)];\r\n            }\r\n            b = smallToArray(abs);\r\n        }\r\n        var comparison = compareAbs(a, b);\r\n        if (comparison === -1) return [Integer[0], self];\r\n        if (comparison === 0) return [Integer[self.sign === n.sign ? 1 : -1], Integer[0]];\r\n\r\n        // divMod1 is faster on smaller input sizes\r\n        if (a.length + b.length <= 200)\r\n            value = divMod1(a, b);\r\n        else value = divMod2(a, b);\r\n\r\n        quotient = value[0];\r\n        var qSign = self.sign !== n.sign,\r\n            mod = value[1],\r\n            mSign = self.sign;\r\n        if (typeof quotient === \"number\") {\r\n            if (qSign) quotient = -quotient;\r\n            quotient = new SmallInteger(quotient);\r\n        } else quotient = new BigInteger(quotient, qSign);\r\n        if (typeof mod === \"number\") {\r\n            if (mSign) mod = -mod;\r\n            mod = new SmallInteger(mod);\r\n        } else mod = new BigInteger(mod, mSign);\r\n        return [quotient, mod];\r\n    }\r\n\r\n    BigInteger.prototype.divmod = function (v) {\r\n        var result = divModAny(this, v);\r\n        return {\r\n            quotient: result[0],\r\n            remainder: result[1]\r\n        };\r\n    };\r\n    SmallInteger.prototype.divmod = BigInteger.prototype.divmod;\r\n\r\n    BigInteger.prototype.divide = function (v) {\r\n        return divModAny(this, v)[0];\r\n    };\r\n    SmallInteger.prototype.over = SmallInteger.prototype.divide = BigInteger.prototype.over = BigInteger.prototype.divide;\r\n\r\n    BigInteger.prototype.mod = function (v) {\r\n        return divModAny(this, v)[1];\r\n    };\r\n    SmallInteger.prototype.remainder = SmallInteger.prototype.mod = BigInteger.prototype.remainder = BigInteger.prototype.mod;\r\n\r\n    BigInteger.prototype.pow = function (v) {\r\n        var n = parseValue(v),\r\n            a = this.value,\r\n            b = n.value,\r\n            value, x, y;\r\n        if (b === 0) return Integer[1];\r\n        if (a === 0) return Integer[0];\r\n        if (a === 1) return Integer[1];\r\n        if (a === -1) return n.isEven() ? Integer[1] : Integer[-1];\r\n        if (n.sign) {\r\n            return Integer[0];\r\n        }\r\n        if (!n.isSmall) throw new Error(\"The exponent \" + n.toString() + \" is too large.\");\r\n        if (this.isSmall) {\r\n            if (isPrecise(value = Math.pow(a, b)))\r\n                return new SmallInteger(truncate(value));\r\n        }\r\n        x = this;\r\n        y = Integer[1];\r\n        while (true) {\r\n            if (b & 1 === 1) {\r\n                y = y.times(x);\r\n                --b;\r\n            }\r\n            if (b === 0) break;\r\n            b /= 2;\r\n            x = x.square();\r\n        }\r\n        return y;\r\n    };\r\n    SmallInteger.prototype.pow = BigInteger.prototype.pow;\r\n\r\n    BigInteger.prototype.modPow = function (exp, mod) {\r\n        exp = parseValue(exp);\r\n        mod = parseValue(mod);\r\n        if (mod.isZero()) throw new Error(\"Cannot take modPow with modulus 0\");\r\n        var r = Integer[1],\r\n            base = this.mod(mod);\r\n        while (exp.isPositive()) {\r\n            if (base.isZero()) return Integer[0];\r\n            if (exp.isOdd()) r = r.multiply(base).mod(mod);\r\n            exp = exp.divide(2);\r\n            base = base.square().mod(mod);\r\n        }\r\n        return r;\r\n    };\r\n    SmallInteger.prototype.modPow = BigInteger.prototype.modPow;\r\n\r\n    function compareAbs(a, b) {\r\n        if (a.length !== b.length) {\r\n            return a.length > b.length ? 1 : -1;\r\n        }\r\n        for (var i = a.length - 1; i >= 0; i--) {\r\n            if (a[i] !== b[i]) return a[i] > b[i] ? 1 : -1;\r\n        }\r\n        return 0;\r\n    }\r\n\r\n    BigInteger.prototype.compareAbs = function (v) {\r\n        var n = parseValue(v),\r\n            a = this.value,\r\n            b = n.value;\r\n        if (n.isSmall) return 1;\r\n        return compareAbs(a, b);\r\n    };\r\n    SmallInteger.prototype.compareAbs = function (v) {\r\n        var n = parseValue(v),\r\n            a = Math.abs(this.value),\r\n            b = n.value;\r\n        if (n.isSmall) {\r\n            b = Math.abs(b);\r\n            return a === b ? 0 : a > b ? 1 : -1;\r\n        }\r\n        return -1;\r\n    };\r\n\r\n    BigInteger.prototype.compare = function (v) {\r\n        // See discussion about comparison with Infinity:\r\n        // https://github.com/peterolson/BigInteger.js/issues/61\r\n        if (v === Infinity) {\r\n            return -1;\r\n        }\r\n        if (v === -Infinity) {\r\n            return 1;\r\n        }\r\n\r\n        var n = parseValue(v),\r\n            a = this.value,\r\n            b = n.value;\r\n        if (this.sign !== n.sign) {\r\n            return n.sign ? 1 : -1;\r\n        }\r\n        if (n.isSmall) {\r\n            return this.sign ? -1 : 1;\r\n        }\r\n        return compareAbs(a, b) * (this.sign ? -1 : 1);\r\n    };\r\n    BigInteger.prototype.compareTo = BigInteger.prototype.compare;\r\n\r\n    SmallInteger.prototype.compare = function (v) {\r\n        if (v === Infinity) {\r\n            return -1;\r\n        }\r\n        if (v === -Infinity) {\r\n            return 1;\r\n        }\r\n\r\n        var n = parseValue(v),\r\n            a = this.value,\r\n            b = n.value;\r\n        if (n.isSmall) {\r\n            return a == b ? 0 : a > b ? 1 : -1;\r\n        }\r\n        if (a < 0 !== n.sign) {\r\n            return a < 0 ? -1 : 1;\r\n        }\r\n        return a < 0 ? 1 : -1;\r\n    };\r\n    SmallInteger.prototype.compareTo = SmallInteger.prototype.compare;\r\n\r\n    BigInteger.prototype.equals = function (v) {\r\n        return this.compare(v) === 0;\r\n    };\r\n    SmallInteger.prototype.eq = SmallInteger.prototype.equals = BigInteger.prototype.eq = BigInteger.prototype.equals;\r\n\r\n    BigInteger.prototype.notEquals = function (v) {\r\n        return this.compare(v) !== 0;\r\n    };\r\n    SmallInteger.prototype.neq = SmallInteger.prototype.notEquals = BigInteger.prototype.neq = BigInteger.prototype.notEquals;\r\n\r\n    BigInteger.prototype.greater = function (v) {\r\n        return this.compare(v) > 0;\r\n    };\r\n    SmallInteger.prototype.gt = SmallInteger.prototype.greater = BigInteger.prototype.gt = BigInteger.prototype.greater;\r\n\r\n    BigInteger.prototype.lesser = function (v) {\r\n        return this.compare(v) < 0;\r\n    };\r\n    SmallInteger.prototype.lt = SmallInteger.prototype.lesser = BigInteger.prototype.lt = BigInteger.prototype.lesser;\r\n\r\n    BigInteger.prototype.greaterOrEquals = function (v) {\r\n        return this.compare(v) >= 0;\r\n    };\r\n    SmallInteger.prototype.geq = SmallInteger.prototype.greaterOrEquals = BigInteger.prototype.geq = BigInteger.prototype.greaterOrEquals;\r\n\r\n    BigInteger.prototype.lesserOrEquals = function (v) {\r\n        return this.compare(v) <= 0;\r\n    };\r\n    SmallInteger.prototype.leq = SmallInteger.prototype.lesserOrEquals = BigInteger.prototype.leq = BigInteger.prototype.lesserOrEquals;\r\n\r\n    BigInteger.prototype.isEven = function () {\r\n        return (this.value[0] & 1) === 0;\r\n    };\r\n    SmallInteger.prototype.isEven = function () {\r\n        return (this.value & 1) === 0;\r\n    };\r\n\r\n    BigInteger.prototype.isOdd = function () {\r\n        return (this.value[0] & 1) === 1;\r\n    };\r\n    SmallInteger.prototype.isOdd = function () {\r\n        return (this.value & 1) === 1;\r\n    };\r\n\r\n    BigInteger.prototype.isPositive = function () {\r\n        return !this.sign;\r\n    };\r\n    SmallInteger.prototype.isPositive = function () {\r\n        return this.value > 0;\r\n    };\r\n\r\n    BigInteger.prototype.isNegative = function () {\r\n        return this.sign;\r\n    };\r\n    SmallInteger.prototype.isNegative = function () {\r\n        return this.value < 0;\r\n    };\r\n\r\n    BigInteger.prototype.isUnit = function () {\r\n        return false;\r\n    };\r\n    SmallInteger.prototype.isUnit = function () {\r\n        return Math.abs(this.value) === 1;\r\n    };\r\n\r\n    BigInteger.prototype.isZero = function () {\r\n        return false;\r\n    };\r\n    SmallInteger.prototype.isZero = function () {\r\n        return this.value === 0;\r\n    };\r\n    BigInteger.prototype.isDivisibleBy = function (v) {\r\n        var n = parseValue(v);\r\n        var value = n.value;\r\n        if (value === 0) return false;\r\n        if (value === 1) return true;\r\n        if (value === 2) return this.isEven();\r\n        return this.mod(n).equals(Integer[0]);\r\n    };\r\n    SmallInteger.prototype.isDivisibleBy = BigInteger.prototype.isDivisibleBy;\r\n\r\n    function isBasicPrime(v) {\r\n        var n = v.abs();\r\n        if (n.isUnit()) return false;\r\n        if (n.equals(2) || n.equals(3) || n.equals(5)) return true;\r\n        if (n.isEven() || n.isDivisibleBy(3) || n.isDivisibleBy(5)) return false;\r\n        if (n.lesser(49)) return true;\r\n        // we don't know if it's prime: let the other functions figure it out\r\n    }\r\n    \r\n    function millerRabinTest(n, a) {\r\n        var nPrev = n.prev(),\r\n            b = nPrev,\r\n            r = 0,\r\n            d, t, i, x;\r\n        while (b.isEven()) b = b.divide(2), r++;\r\n        next : for (i = 0; i < a.length; i++) {\r\n            if (n.lesser(a[i])) continue;\r\n            x = bigInt(a[i]).modPow(b, n);\r\n            if (x.equals(Integer[1]) || x.equals(nPrev)) continue;\r\n            for (d = r - 1; d != 0; d--) {\r\n                x = x.square().mod(n);\r\n                if (x.isUnit()) return false;    \r\n                if (x.equals(nPrev)) continue next;\r\n            }\r\n            return false;\r\n        }\r\n        return true;\r\n    }\r\n    \r\n// Set \"strict\" to true to force GRH-supported lower bound of 2*log(N)^2\r\n    BigInteger.prototype.isPrime = function (strict) {\r\n        var isPrime = isBasicPrime(this);\r\n        if (isPrime !== undefined) return isPrime;\r\n        var n = this.abs();\r\n        var bits = n.bitLength();\r\n        if(bits <= 64)\r\n            return millerRabinTest(n, [2, 325, 9375, 28178, 450775, 9780504, 1795265022]);\r\n        var logN = Math.log(2) * bits;\r\n        var t = Math.ceil((strict === true) ? (2 * Math.pow(logN, 2)) : logN);\r\n        for (var a = [], i = 0; i < t; i++) {\r\n            a.push(bigInt(i + 2));\r\n        }\r\n        return millerRabinTest(n, a);\r\n    };\r\n    SmallInteger.prototype.isPrime = BigInteger.prototype.isPrime;\r\n\r\n    BigInteger.prototype.isProbablePrime = function (iterations) {\r\n        var isPrime = isBasicPrime(this);\r\n        if (isPrime !== undefined) return isPrime;\r\n        var n = this.abs();\r\n        var t = iterations === undefined ? 5 : iterations;\r\n        for (var a = [], i = 0; i < t; i++) {\r\n            a.push(bigInt.randBetween(2, n.minus(2)));\r\n        }\r\n        return millerRabinTest(n, a);\r\n    };\r\n    SmallInteger.prototype.isProbablePrime = BigInteger.prototype.isProbablePrime;\r\n\r\n    BigInteger.prototype.modInv = function (n) {\r\n        var t = bigInt.zero, newT = bigInt.one, r = parseValue(n), newR = this.abs(), q, lastT, lastR;\r\n        while (!newR.equals(bigInt.zero)) {\r\n            q = r.divide(newR);\r\n            lastT = t;\r\n            lastR = r;\r\n            t = newT;\r\n            r = newR;\r\n            newT = lastT.subtract(q.multiply(newT));\r\n            newR = lastR.subtract(q.multiply(newR));\r\n        }\r\n        if (!r.equals(1)) throw new Error(this.toString() + \" and \" + n.toString() + \" are not co-prime\");\r\n        if (t.compare(0) === -1) {\r\n            t = t.add(n);\r\n        }\r\n        if (this.isNegative()) {\r\n            return t.negate();\r\n        }\r\n        return t;\r\n    };\r\n\r\n    SmallInteger.prototype.modInv = BigInteger.prototype.modInv;\r\n\r\n    BigInteger.prototype.next = function () {\r\n        var value = this.value;\r\n        if (this.sign) {\r\n            return subtractSmall(value, 1, this.sign);\r\n        }\r\n        return new BigInteger(addSmall(value, 1), this.sign);\r\n    };\r\n    SmallInteger.prototype.next = function () {\r\n        var value = this.value;\r\n        if (value + 1 < MAX_INT) return new SmallInteger(value + 1);\r\n        return new BigInteger(MAX_INT_ARR, false);\r\n    };\r\n\r\n    BigInteger.prototype.prev = function () {\r\n        var value = this.value;\r\n        if (this.sign) {\r\n            return new BigInteger(addSmall(value, 1), true);\r\n        }\r\n        return subtractSmall(value, 1, this.sign);\r\n    };\r\n    SmallInteger.prototype.prev = function () {\r\n        var value = this.value;\r\n        if (value - 1 > -MAX_INT) return new SmallInteger(value - 1);\r\n        return new BigInteger(MAX_INT_ARR, true);\r\n    };\r\n\r\n    var powersOfTwo = [1];\r\n    while (2 * powersOfTwo[powersOfTwo.length - 1] <= BASE) powersOfTwo.push(2 * powersOfTwo[powersOfTwo.length - 1]);\r\n    var powers2Length = powersOfTwo.length, highestPower2 = powersOfTwo[powers2Length - 1];\r\n\r\n    function shift_isSmall(n) {\r\n        return ((typeof n === \"number\" || typeof n === \"string\") && +Math.abs(n) <= BASE) ||\r\n            (n instanceof BigInteger && n.value.length <= 1);\r\n    }\r\n\r\n    BigInteger.prototype.shiftLeft = function (n) {\r\n        if (!shift_isSmall(n)) {\r\n            throw new Error(String(n) + \" is too large for shifting.\");\r\n        }\r\n        n = +n;\r\n        if (n < 0) return this.shiftRight(-n);\r\n        var result = this;\r\n        if (result.isZero()) return result;\r\n        while (n >= powers2Length) {\r\n            result = result.multiply(highestPower2);\r\n            n -= powers2Length - 1;\r\n        }\r\n        return result.multiply(powersOfTwo[n]);\r\n    };\r\n    SmallInteger.prototype.shiftLeft = BigInteger.prototype.shiftLeft;\r\n\r\n    BigInteger.prototype.shiftRight = function (n) {\r\n        var remQuo;\r\n        if (!shift_isSmall(n)) {\r\n            throw new Error(String(n) + \" is too large for shifting.\");\r\n        }\r\n        n = +n;\r\n        if (n < 0) return this.shiftLeft(-n);\r\n        var result = this;\r\n        while (n >= powers2Length) {\r\n            if (result.isZero() || (result.isNegative() && result.isUnit())) return result;\r\n            remQuo = divModAny(result, highestPower2);\r\n            result = remQuo[1].isNegative() ? remQuo[0].prev() : remQuo[0];\r\n            n -= powers2Length - 1;\r\n        }\r\n        remQuo = divModAny(result, powersOfTwo[n]);\r\n        return remQuo[1].isNegative() ? remQuo[0].prev() : remQuo[0];\r\n    };\r\n    SmallInteger.prototype.shiftRight = BigInteger.prototype.shiftRight;\r\n\r\n    function bitwise(x, y, fn) {\r\n        y = parseValue(y);\r\n        var xSign = x.isNegative(), ySign = y.isNegative();\r\n        var xRem = xSign ? x.not() : x,\r\n            yRem = ySign ? y.not() : y;\r\n        var xDigit = 0, yDigit = 0;\r\n        var xDivMod = null, yDivMod = null;\r\n        var result = [];\r\n        while (!xRem.isZero() || !yRem.isZero()) {\r\n            xDivMod = divModAny(xRem, highestPower2);\r\n            xDigit = xDivMod[1].toJSNumber();\r\n            if (xSign) {\r\n                xDigit = highestPower2 - 1 - xDigit; // two's complement for negative numbers\r\n            }\r\n\r\n            yDivMod = divModAny(yRem, highestPower2);\r\n            yDigit = yDivMod[1].toJSNumber();\r\n            if (ySign) {\r\n                yDigit = highestPower2 - 1 - yDigit; // two's complement for negative numbers\r\n            }\r\n\r\n            xRem = xDivMod[0];\r\n            yRem = yDivMod[0];\r\n            result.push(fn(xDigit, yDigit));\r\n        }\r\n        var sum = fn(xSign ? 1 : 0, ySign ? 1 : 0) !== 0 ? bigInt(-1) : bigInt(0);\r\n        for (var i = result.length - 1; i >= 0; i -= 1) {\r\n            sum = sum.multiply(highestPower2).add(bigInt(result[i]));\r\n        }\r\n        return sum;\r\n    }\r\n\r\n    BigInteger.prototype.not = function () {\r\n        return this.negate().prev();\r\n    };\r\n    SmallInteger.prototype.not = BigInteger.prototype.not;\r\n\r\n    BigInteger.prototype.and = function (n) {\r\n        return bitwise(this, n, function (a, b) { return a & b; });\r\n    };\r\n    SmallInteger.prototype.and = BigInteger.prototype.and;\r\n\r\n    BigInteger.prototype.or = function (n) {\r\n        return bitwise(this, n, function (a, b) { return a | b; });\r\n    };\r\n    SmallInteger.prototype.or = BigInteger.prototype.or;\r\n\r\n    BigInteger.prototype.xor = function (n) {\r\n        return bitwise(this, n, function (a, b) { return a ^ b; });\r\n    };\r\n    SmallInteger.prototype.xor = BigInteger.prototype.xor;\r\n\r\n    var LOBMASK_I = 1 << 30, LOBMASK_BI = (BASE & -BASE) * (BASE & -BASE) | LOBMASK_I;\r\n    function roughLOB(n) { // get lowestOneBit (rough)\r\n        // SmallInteger: return Min(lowestOneBit(n), 1 << 30)\r\n        // BigInteger: return Min(lowestOneBit(n), 1 << 14) [BASE=1e7]\r\n        var v = n.value, x = typeof v === \"number\" ? v | LOBMASK_I : v[0] + v[1] * BASE | LOBMASK_BI;\r\n        return x & -x;\r\n    }\r\n\r\n    function integerLogarithm(value, base) {\r\n        if (base.compareTo(value) <= 0) {\r\n            var tmp = integerLogarithm(value, base.square(base));\r\n            var p = tmp.p;\r\n            var e = tmp.e;\r\n            var t = p.multiply(base);\r\n            return t.compareTo(value) <= 0 ? { p: t, e: e * 2 + 1 } : { p: p, e: e * 2 };\r\n        }\r\n        return { p: bigInt(1), e: 0 };\r\n    }\r\n\r\n    BigInteger.prototype.bitLength = function () {\r\n        var n = this;\r\n        if (n.compareTo(bigInt(0)) < 0) {\r\n            n = n.negate().subtract(bigInt(1));\r\n        }\r\n        if (n.compareTo(bigInt(0)) === 0) {\r\n            return bigInt(0);\r\n        }\r\n        return bigInt(integerLogarithm(n, bigInt(2)).e).add(bigInt(1));\r\n    }\r\n    SmallInteger.prototype.bitLength = BigInteger.prototype.bitLength;\r\n\r\n    function max(a, b) {\r\n        a = parseValue(a);\r\n        b = parseValue(b);\r\n        return a.greater(b) ? a : b;\r\n    }\r\n    function min(a, b) {\r\n        a = parseValue(a);\r\n        b = parseValue(b);\r\n        return a.lesser(b) ? a : b;\r\n    }\r\n    function gcd(a, b) {\r\n        a = parseValue(a).abs();\r\n        b = parseValue(b).abs();\r\n        if (a.equals(b)) return a;\r\n        if (a.isZero()) return b;\r\n        if (b.isZero()) return a;\r\n        var c = Integer[1], d, t;\r\n        while (a.isEven() && b.isEven()) {\r\n            d = Math.min(roughLOB(a), roughLOB(b));\r\n            a = a.divide(d);\r\n            b = b.divide(d);\r\n            c = c.multiply(d);\r\n        }\r\n        while (a.isEven()) {\r\n            a = a.divide(roughLOB(a));\r\n        }\r\n        do {\r\n            while (b.isEven()) {\r\n                b = b.divide(roughLOB(b));\r\n            }\r\n            if (a.greater(b)) {\r\n                t = b; b = a; a = t;\r\n            }\r\n            b = b.subtract(a);\r\n        } while (!b.isZero());\r\n        return c.isUnit() ? a : a.multiply(c);\r\n    }\r\n    function lcm(a, b) {\r\n        a = parseValue(a).abs();\r\n        b = parseValue(b).abs();\r\n        return a.divide(gcd(a, b)).multiply(b);\r\n    }\r\n    function randBetween(a, b) {\r\n        a = parseValue(a);\r\n        b = parseValue(b);\r\n        var low = min(a, b), high = max(a, b);\r\n        var range = high.subtract(low).add(1);\r\n        if (range.isSmall) return low.add(Math.floor(Math.random() * range));\r\n        var length = range.value.length - 1;\r\n        var result = [], restricted = true;\r\n        for (var i = length; i >= 0; i--) {\r\n            var top = restricted ? range.value[i] : BASE;\r\n            var digit = truncate(Math.random() * top);\r\n            result.unshift(digit);\r\n            if (digit < top) restricted = false;\r\n        }\r\n        result = arrayToSmall(result);\r\n        return low.add(typeof result === \"number\" ? new SmallInteger(result) : new BigInteger(result, false));\r\n    }\r\n    var parseBase = function (text, base) {\r\n        var length = text.length;\r\n        var i;\r\n        var absBase = Math.abs(base);\r\n        for (var i = 0; i < length; i++) {\r\n            var c = text[i].toLowerCase();\r\n            if (c === \"-\") continue;\r\n            if (/[a-z0-9]/.test(c)) {\r\n                if (/[0-9]/.test(c) && +c >= absBase) {\r\n                    if (c === \"1\" && absBase === 1) continue;\r\n                    throw new Error(c + \" is not a valid digit in base \" + base + \".\");\r\n                } else if (c.charCodeAt(0) - 87 >= absBase) {\r\n                    throw new Error(c + \" is not a valid digit in base \" + base + \".\");\r\n                }\r\n            }\r\n        }\r\n        if (2 <= base && base <= 36) {\r\n            if (length <= LOG_MAX_INT / Math.log(base)) {\r\n                var result = parseInt(text, base);\r\n                if (isNaN(result)) {\r\n                    throw new Error(c + \" is not a valid digit in base \" + base + \".\");\r\n                }\r\n                return new SmallInteger(parseInt(text, base));\r\n            }\r\n        }\r\n        base = parseValue(base);\r\n        var digits = [];\r\n        var isNegative = text[0] === \"-\";\r\n        for (i = isNegative ? 1 : 0; i < text.length; i++) {\r\n            var c = text[i].toLowerCase(),\r\n                charCode = c.charCodeAt(0);\r\n            if (48 <= charCode && charCode <= 57) digits.push(parseValue(c));\r\n            else if (97 <= charCode && charCode <= 122) digits.push(parseValue(c.charCodeAt(0) - 87));\r\n            else if (c === \"<\") {\r\n                var start = i;\r\n                do { i++; } while (text[i] !== \">\");\r\n                digits.push(parseValue(text.slice(start + 1, i)));\r\n            }\r\n            else throw new Error(c + \" is not a valid character\");\r\n        }\r\n        return parseBaseFromArray(digits, base, isNegative);\r\n    };\r\n\r\n    function parseBaseFromArray(digits, base, isNegative) {\r\n        var val = Integer[0], pow = Integer[1], i;\r\n        for (i = digits.length - 1; i >= 0; i--) {\r\n            val = val.add(digits[i].times(pow));\r\n            pow = pow.times(base);\r\n        }\r\n        return isNegative ? val.negate() : val;\r\n    }\r\n\r\n    function stringify(digit) {\r\n        if (digit <= 35) {\r\n            return \"0123456789abcdefghijklmnopqrstuvwxyz\".charAt(digit);\r\n        }\r\n        return \"<\" + digit + \">\";\r\n    }\r\n\r\n    function toBase(n, base) {\r\n        base = bigInt(base);\r\n        if (base.isZero()) {\r\n            if (n.isZero()) return { value: [0], isNegative: false };\r\n            throw new Error(\"Cannot convert nonzero numbers to base 0.\");\r\n        }\r\n        if (base.equals(-1)) {\r\n            if (n.isZero()) return { value: [0], isNegative: false };\r\n            if (n.isNegative())\r\n                return {\r\n                    value: [].concat.apply([], Array.apply(null, Array(-n))\r\n                        .map(Array.prototype.valueOf, [1, 0])\r\n                    ),\r\n                    isNegative: false\r\n                };\r\n\r\n            var arr = Array.apply(null, Array(+n - 1))\r\n                .map(Array.prototype.valueOf, [0, 1]);\r\n            arr.unshift([1]);\r\n            return {\r\n                value: [].concat.apply([], arr),\r\n                isNegative: false\r\n            };\r\n        }\r\n\r\n        var neg = false;\r\n        if (n.isNegative() && base.isPositive()) {\r\n            neg = true;\r\n            n = n.abs();\r\n        }\r\n        if (base.equals(1)) {\r\n            if (n.isZero()) return { value: [0], isNegative: false };\r\n\r\n            return {\r\n                value: Array.apply(null, Array(+n))\r\n                    .map(Number.prototype.valueOf, 1),\r\n                isNegative: neg\r\n            };\r\n        }\r\n        var out = [];\r\n        var left = n, divmod;\r\n        while (left.isNegative() || left.compareAbs(base) >= 0) {\r\n            divmod = left.divmod(base);\r\n            left = divmod.quotient;\r\n            var digit = divmod.remainder;\r\n            if (digit.isNegative()) {\r\n                digit = base.minus(digit).abs();\r\n                left = left.next();\r\n            }\r\n            out.push(digit.toJSNumber());\r\n        }\r\n        out.push(left.toJSNumber());\r\n        return { value: out.reverse(), isNegative: neg };\r\n    }\r\n\r\n    function toBaseString(n, base) {\r\n        var arr = toBase(n, base);\r\n        return (arr.isNegative ? \"-\" : \"\") + arr.value.map(stringify).join('');\r\n    }\r\n\r\n    BigInteger.prototype.toArray = function (radix) {\r\n        return toBase(this, radix);\r\n    };\r\n\r\n    SmallInteger.prototype.toArray = function (radix) {\r\n        return toBase(this, radix);\r\n    };\r\n\r\n    BigInteger.prototype.toString = function (radix) {\r\n        if (radix === undefined) radix = 10;\r\n        if (radix !== 10) return toBaseString(this, radix);\r\n        var v = this.value, l = v.length, str = String(v[--l]), zeros = \"0000000\", digit;\r\n        while (--l >= 0) {\r\n            digit = String(v[l]);\r\n            str += zeros.slice(digit.length) + digit;\r\n        }\r\n        var sign = this.sign ? \"-\" : \"\";\r\n        return sign + str;\r\n    };\r\n\r\n    SmallInteger.prototype.toString = function (radix) {\r\n        if (radix === undefined) radix = 10;\r\n        if (radix != 10) return toBaseString(this, radix);\r\n        return String(this.value);\r\n    };\r\n    BigInteger.prototype.toJSON = SmallInteger.prototype.toJSON = function () { return this.toString(); }\r\n\r\n    BigInteger.prototype.valueOf = function () {\r\n        return parseInt(this.toString(), 10);\r\n    };\r\n    BigInteger.prototype.toJSNumber = BigInteger.prototype.valueOf;\r\n\r\n    SmallInteger.prototype.valueOf = function () {\r\n        return this.value;\r\n    };\r\n    SmallInteger.prototype.toJSNumber = SmallInteger.prototype.valueOf;\r\n\r\n    function parseStringValue(v) {\r\n        if (isPrecise(+v)) {\r\n            var x = +v;\r\n            if (x === truncate(x))\r\n                return new SmallInteger(x);\r\n            throw new Error(\"Invalid integer: \" + v);\r\n        }\r\n        var sign = v[0] === \"-\";\r\n        if (sign) v = v.slice(1);\r\n        var split = v.split(/e/i);\r\n        if (split.length > 2) throw new Error(\"Invalid integer: \" + split.join(\"e\"));\r\n        if (split.length === 2) {\r\n            var exp = split[1];\r\n            if (exp[0] === \"+\") exp = exp.slice(1);\r\n            exp = +exp;\r\n            if (exp !== truncate(exp) || !isPrecise(exp)) throw new Error(\"Invalid integer: \" + exp + \" is not a valid exponent.\");\r\n            var text = split[0];\r\n            var decimalPlace = text.indexOf(\".\");\r\n            if (decimalPlace >= 0) {\r\n                exp -= text.length - decimalPlace - 1;\r\n                text = text.slice(0, decimalPlace) + text.slice(decimalPlace + 1);\r\n            }\r\n            if (exp < 0) throw new Error(\"Cannot include negative exponent part for integers\");\r\n            text += (new Array(exp + 1)).join(\"0\");\r\n            v = text;\r\n        }\r\n        var isValid = /^([0-9][0-9]*)$/.test(v);\r\n        if (!isValid) throw new Error(\"Invalid integer: \" + v);\r\n        var r = [], max = v.length, l = LOG_BASE, min = max - l;\r\n        while (max > 0) {\r\n            r.push(+v.slice(min, max));\r\n            min -= l;\r\n            if (min < 0) min = 0;\r\n            max -= l;\r\n        }\r\n        trim(r);\r\n        return new BigInteger(r, sign);\r\n    }\r\n\r\n    function parseNumberValue(v) {\r\n        if (isPrecise(v)) {\r\n            if (v !== truncate(v)) throw new Error(v + \" is not an integer.\");\r\n            return new SmallInteger(v);\r\n        }\r\n        return parseStringValue(v.toString());\r\n    }\r\n\r\n    function parseValue(v) {\r\n        if (typeof v === \"number\") {\r\n            return parseNumberValue(v);\r\n        }\r\n        if (typeof v === \"string\") {\r\n            return parseStringValue(v);\r\n        }\r\n        return v;\r\n    }\r\n    // Pre-define numbers in range [-999,999]\r\n    for (var i = 0; i < 1000; i++) {\r\n        Integer[i] = new SmallInteger(i);\r\n        if (i > 0) Integer[-i] = new SmallInteger(-i);\r\n    }\r\n    // Backwards compatibility\r\n    Integer.one = Integer[1];\r\n    Integer.zero = Integer[0];\r\n    Integer.minusOne = Integer[-1];\r\n    Integer.max = max;\r\n    Integer.min = min;\r\n    Integer.gcd = gcd;\r\n    Integer.lcm = lcm;\r\n    Integer.isInstance = function (x) { return x instanceof BigInteger || x instanceof SmallInteger; };\r\n    Integer.randBetween = randBetween;\r\n\r\n    Integer.fromArray = function (digits, base, isNegative) {\r\n        return parseBaseFromArray(digits.map(parseValue), parseValue(base || 10), isNegative);\r\n    };\r\n\r\n    return Integer;\r\n})();\r\n\r\n// Node.js check\r\nif (typeof module !== \"undefined\" && module.hasOwnProperty(\"exports\")) {\r\n    module.exports = bigInt;\r\n}\r\n\r\n//amd check\r\nif (typeof define === \"function\" && define.amd) {\r\n    define(\"big-integer\", [], function () {\r\n        return bigInt;\r\n    });\r\n}\r\n","// https://en.wikipedia.org/wiki/Base32#Crockford's_Base32\nimport { sha256 } from 'js-sha256';\nexport const C32_ALPHABET = '0123456789ABCDEFGHJKMNPQRSTVWXYZ';\nconst hex = '0123456789abcdef';\n\nfunction hashSha256(data: Buffer): Buffer {\n  return Buffer.from(sha256.update(data).digest())\n}\n\nfunction c32checksum(dataHex: string): string {\n  const dataHash = hashSha256(hashSha256(Buffer.from(dataHex, 'hex')));\n  const checksum = dataHash.slice(0, 4).toString('hex');\n  return checksum;\n}\n\nexport function c32checkEncode(data: Buffer): string {\n  const dataHex = data.toString('hex');\n  let hash160hex = dataHex.substring(0, dataHex.length - 8);\n  if (!hash160hex.match(/^[0-9a-fA-F]{40}$/)) {\n    throw new Error('Invalid argument: not a hash160 hex string');\n  }\n\n  hash160hex = hash160hex.toLowerCase();\n  if (hash160hex.length % 2 !== 0) {\n    hash160hex = `0${hash160hex}`;\n  }\n\n  // p2pkh: 'P'\n  // p2sh: 'M'\n  const version = { p2pkh: 22, p2sh: 20 };\n\n  const checksumHex = dataHex.slice(-8);\n  let c32str = '';\n  let prefix = '';\n\n  if (checksumHex === c32checksum(`${version.p2pkh.toString(16)}${hash160hex}`)) {\n    prefix = 'P';\n    c32str = c32encode(`${hash160hex}${checksumHex}`);\n  } else if ((checksumHex === c32checksum(`${version.p2sh.toString(16)}${hash160hex}`))) {\n    prefix = 'M';\n    c32str = c32encode(`${hash160hex}${checksumHex}`);\n  }\n\n  return `S${prefix}${c32str}`;\n}\n\nfunction c32encode(inputHex: string): string {\n  // must be hex\n  if (!inputHex.match(/^[0-9a-fA-F]*$/)) {\n    throw new Error('Not a hex-encoded string');\n  }\n\n  if (inputHex.length % 2 !== 0) {\n    inputHex = `0${inputHex}`;\n  }\n\n  inputHex = inputHex.toLowerCase();\n\n  let res = [];\n  let carry = 0;\n  for (let i = inputHex.length - 1; i >= 0; i--) {\n    if (carry < 4) {\n      // tslint:disable-next-line:no-bitwise\n      const currentCode = hex.indexOf(inputHex[i]) >> carry;\n      let nextCode = 0;\n      if (i !== 0) {\n        nextCode = hex.indexOf(inputHex[i - 1]);\n      }\n      // carry = 0, nextBits is 1, carry = 1, nextBits is 2\n      const nextBits = 1 + carry;\n      // tslint:disable-next-line:no-bitwise\n      const nextLowBits = nextCode % (1 << nextBits) << (5 - nextBits);\n      const curC32Digit = C32_ALPHABET[currentCode + nextLowBits];\n      carry = nextBits;\n      res.unshift(curC32Digit);\n    } else {\n      carry = 0;\n    }\n  }\n\n  let C32leadingZeros = 0;\n  // tslint:disable-next-line:prefer-for-of\n  for (let i = 0; i < res.length; i++) {\n    if (res[i] !== '0') {\n      break;\n    } else {\n      C32leadingZeros++;\n    }\n  }\n\n  res = res.slice(C32leadingZeros);\n\n  const zeroPrefix = Buffer.from(inputHex, 'hex')\n    .toString()\n    .match(/^\\u0000*/);\n  const numLeadingZeroBytesInHex = zeroPrefix ? zeroPrefix[0].length : 0;\n\n  for (let i = 0; i < numLeadingZeroBytesInHex; i++) {\n    res.unshift(C32_ALPHABET[0]);\n  }\n\n  return res.join('');\n}\n\nfunction c32normalize(c32input: string): string {\n  // must be upper-case\n  // replace all O's with 0's\n  // replace all I's and L's with 1's\n  return c32input.toUpperCase().replace(/O/g, '0').replace(/[IL]/g, '1');\n}\n\nexport function c32checkDecode(data: string): Buffer {\n  if (data.length <= 5) {\n    throw new Error('Invalid c32 address: invalid length');\n  }\n  if (data[0] !== 'S') {\n    throw new Error('Invalid c32 address: must start with \"S\"');\n  }\n\n  const c32data = c32normalize(data.slice(1));\n  const versionChar = c32data[0];\n  const version = C32_ALPHABET.indexOf(versionChar);\n\n  let versionHex = version.toString(16);\n  if (versionHex.length === 1) {\n    versionHex = `0${versionHex}`;\n  }\n\n  const dataHex = c32decode(c32data.slice(1));\n  const checksum = dataHex.slice(-8);\n\n  if (c32checksum(`${versionHex}${dataHex.substring(0, dataHex.length - 8)}`) !== checksum) {\n    throw new Error('Invalid c32check string: checksum mismatch');\n  }\n\n  return Buffer.from(dataHex, 'hex');\n}\n\nfunction c32decode(c32input: string): string {\n  c32input = c32normalize(c32input);\n\n  // must result in a c32 string\n  if (!c32input.match(`^[${C32_ALPHABET}]*$`)) {\n    throw new Error('Not a c32-encoded string');\n  }\n\n  const zeroPrefix = c32input.match(`^${C32_ALPHABET[0]}*`);\n  const numLeadingZeroBytes = zeroPrefix ? zeroPrefix[0].length : 0;\n\n  let res = [];\n  let carry = 0;\n  let carryBits = 0;\n  for (let i = c32input.length - 1; i >= 0; i--) {\n    if (carryBits === 4) {\n      res.unshift(hex[carry]);\n      carryBits = 0;\n      carry = 0;\n    }\n    // tslint:disable-next-line:no-bitwise\n    const currentCode = C32_ALPHABET.indexOf(c32input[i]) << carryBits;\n    const currentValue = currentCode + carry;\n    const currentHexDigit = hex[currentValue % 16];\n    carryBits += 1;\n    // tslint:disable-next-line:no-bitwise\n    carry = currentValue >> 4;\n    // tslint:disable-next-line:no-bitwise\n    if (carry > 1 << carryBits) {\n      throw new Error('Panic error in decoding.');\n    }\n    res.unshift(currentHexDigit);\n  }\n  // one last carry\n  res.unshift(hex[carry]);\n\n  if (res.length % 2 === 1) {\n    res.unshift('0');\n  }\n\n  let hexLeadingZeros = 0;\n  // tslint:disable-next-line:prefer-for-of\n  for (let i = 0; i < res.length; i++) {\n    if (res[i] !== '0') {\n      break;\n    } else {\n      hexLeadingZeros++;\n    }\n  }\n\n  res = res.slice(hexLeadingZeros - (hexLeadingZeros % 2));\n\n  let hexStr = res.join('');\n  for (let i = 0; i < numLeadingZeroBytes; i++) {\n    hexStr = `00${hexStr}`;\n  }\n\n  return hexStr;\n}\n","// Ported from https://www.npmjs.com/package/cbor-redux as the release 0.4.0 was missing on npm, which has critical changes.\r\n\r\n/* tslint:disable:max-classes-per-file */\r\n\r\n/** @hidden */\r\nconst POW_2_24 = 5.960464477539063e-8\r\n/** @hidden */\r\nconst POW_2_32 = 4294967296\r\n/** @hidden */\r\nconst POW_2_53 = 9007199254740992;\r\n/** @hidden */\r\nconst DECODE_CHUNK_SIZE = 8192\r\n\r\n/** @hidden */\r\nfunction objectIs(x: any, y: any) {\r\n  if (typeof Object.is === 'function') {\r\n    return Object.is(x, y);\r\n  }\r\n\r\n  // SameValue algorithm\r\n  // Steps 1-5, 7-10\r\n  if (x === y) {\r\n    // Steps 6.b-6.e: +0 != -0\r\n    return x !== 0 || 1 / x === 1 / y;\r\n  }\r\n\r\n  // Step 6.a: NaN == NaN\r\n  return x !== x && y !== y\r\n}\r\n\r\n/** A Function that extracts tagged values. */\r\ntype TaggedValueFunction = (value: any, tag: number) => TaggedValue;\r\n/** A function that extracts simple values. */\r\ntype SimpleValueFunction = (value: any) => SimpleValue;\r\n\r\n/** Convenience class for structuring a tagged value. */\r\nexport class TaggedValue {\r\n  public value: any;\r\n  public tag: number;\r\n\r\n  constructor(value: any, tag: number) {\r\n    this.value = value;\r\n    this.tag = tag;\r\n  }\r\n}\r\n\r\n/** Convenience class for structuring a simple value. */\r\nexport class SimpleValue {\r\n  public value: any;\r\n\r\n  constructor(value: any) {\r\n    this.value = value\r\n  }\r\n}\r\n\r\n/* tslint:disable:no-bitwise */\r\nexport function decode<T = any>(\r\n  data: ArrayBuffer | SharedArrayBuffer,\r\n  tagger?: TaggedValueFunction,\r\n  simpleValue?: SimpleValueFunction,\r\n): T {\r\n  const dataView = new DataView(data);\r\n  const ta = new Uint8Array(data);\r\n  let offset = 0;\r\n\r\n  let tagValueFunction = (value: any, tag: number) => {\r\n    return new TaggedValue(value, tag);\r\n  }\r\n\r\n  let simpleValueFunction = (value: any) => {\r\n    return new SimpleValue(value);\r\n  }\r\n\r\n  if (typeof tagger === 'function') {\r\n    tagValueFunction = tagger;\r\n  }\r\n  if (typeof simpleValue === 'function') {\r\n    simpleValueFunction = simpleValue;\r\n  }\r\n\r\n  function commitRead(length: number, value: any) {\r\n    offset += length;\r\n    return value;\r\n  }\r\n\r\n  function readArrayBuffer(length: number) {\r\n    return commitRead(length, new Uint8Array(data, offset, length));\r\n  }\r\n\r\n  function readFloat16() {\r\n    const tempArrayBuffer = new ArrayBuffer(4);\r\n    const tempDataView = new DataView(tempArrayBuffer);\r\n    const value = readUint16();\r\n\r\n    const sign = value & 0x8000\r\n    let exponent = value & 0x7c00\r\n    const fraction = value & 0x03ff\r\n\r\n    if (exponent === 0x7c00) {\r\n      exponent = 0xff << 10;\r\n    }\r\n    else if (exponent !== 0) {\r\n      exponent += (127 - 15) << 10;\r\n    }\r\n    else if (fraction !== 0) {\r\n      return (sign ? -1 : 1) * fraction * POW_2_24;\r\n    }\r\n\r\n    tempDataView.setUint32(0, (sign << 16) | (exponent << 13) | (fraction << 13));\r\n    return tempDataView.getFloat32(0);\r\n  }\r\n\r\n  function readFloat32(): number {\r\n    return commitRead(4, dataView.getFloat32(offset));\r\n  }\r\n  function readFloat64(): number {\r\n    return commitRead(8, dataView.getFloat64(offset));\r\n  }\r\n  function readUint8(): number {\r\n    return commitRead(1, ta[offset]);\r\n  }\r\n  function readUint16(): number {\r\n    return commitRead(2, dataView.getUint16(offset));\r\n  }\r\n  function readUint32(): number {\r\n    return commitRead(4, dataView.getUint32(offset));\r\n  }\r\n  function readUint64(): number {\r\n    return readUint32() * POW_2_32 + readUint32();\r\n  }\r\n\r\n  function readBreak(): boolean {\r\n    if (ta[offset] !== 0xff) {\r\n      return false;\r\n    }\r\n    offset += 1;\r\n    return true;\r\n  }\r\n\r\n  function readLength(additionalInformation: number): number {\r\n    if (additionalInformation < 24) {\r\n      return additionalInformation;\r\n    }\r\n    else if (additionalInformation === 24) {\r\n      return readUint8();\r\n    }\r\n    else if (additionalInformation === 25) {\r\n      return readUint16();\r\n    }\r\n    else if (additionalInformation === 26) {\r\n      return readUint32();\r\n    }\r\n    else if (additionalInformation === 27) {\r\n      return readUint64();\r\n    }\r\n    else if (additionalInformation === 31) {\r\n      return -1;\r\n    }\r\n\r\n    throw new Error('Invalid length encoding')\r\n  }\r\n\r\n  function readIndefiniteStringLength(majorType: number): number {\r\n    const initialByte = readUint8();\r\n    if (initialByte === 0xff) {\r\n      return -1;\r\n    }\r\n\r\n    const length = readLength(initialByte & 0x1f);\r\n    if (length < 0 || initialByte >> 5 !== majorType) {\r\n      throw new Error('Invalid indefinite length element');\r\n    }\r\n\r\n    return length;\r\n  }\r\n\r\n  function appendUtf16Data(utf16data: number[], length: number) {\r\n    for (let i = 0; i < length; ++i) {\r\n      let value = readUint8();\r\n      if (value & 0x80) {\r\n        if (value < 0xe0) {\r\n          value = ((value & 0x1f) << 6) | (readUint8() & 0x3f);\r\n          length -= 1;\r\n        } else if (value < 0xf0) {\r\n          value = ((value & 0x0f) << 12) | ((readUint8() & 0x3f) << 6) | (readUint8() & 0x3f);\r\n          length -= 2;\r\n        } else {\r\n          value =\r\n            ((value & 0x0f) << 18) | ((readUint8() & 0x3f) << 12) | ((readUint8() & 0x3f) << 6) | (readUint8() & 0x3f);\r\n          length -= 3;\r\n        }\r\n      }\r\n\r\n      if (value < 0x10000) {\r\n        utf16data.push(value);\r\n      } else {\r\n        value -= 0x10000;\r\n        utf16data.push(0xd800 | (value >> 10));\r\n        utf16data.push(0xdc00 | (value & 0x3ff));\r\n      }\r\n    }\r\n  }\r\n\r\n  function decodeItem(): any {\r\n    const initialByte = readUint8();\r\n    const majorType = initialByte >> 5;\r\n    const additionalInformation = initialByte & 0x1f;\r\n    let i;\r\n    let length;\r\n\r\n    if (majorType === 7) {\r\n      switch (additionalInformation) {\r\n        case 25:\r\n          return readFloat16();\r\n        case 26:\r\n          return readFloat32();\r\n        case 27:\r\n          return readFloat64();\r\n      }\r\n    }\r\n\r\n    length = readLength(additionalInformation);\r\n    if (length < 0 && (majorType < 2 || 6 < majorType)) {\r\n      throw new Error('Invalid length');\r\n    }\r\n\r\n    switch (majorType) {\r\n      case 0:\r\n        return length;\r\n      case 1:\r\n        return -1 - length;\r\n      case 2:\r\n        if (length < 0) {\r\n          const elements = [];\r\n          let fullArrayLength = 0;\r\n\r\n          length = readIndefiniteStringLength(majorType);\r\n          while (length >= 0) {\r\n            fullArrayLength += length;\r\n            elements.push(readArrayBuffer(length));\r\n          }\r\n\r\n          const fullArray = new Uint8Array(fullArrayLength);\r\n          let fullArrayOffset = 0;\r\n\r\n          for (i = 0; i < elements.length; ++i) {\r\n            fullArray.set(elements[i], fullArrayOffset);\r\n            fullArrayOffset += elements[i].length;\r\n          }\r\n\r\n          return fullArray;\r\n        }\r\n\r\n        return readArrayBuffer(length);\r\n      case 3:\r\n        const utf16data: number[] = [];\r\n        if (length < 0) {\r\n          length = readIndefiniteStringLength(majorType);\r\n          while (length >= 0) {\r\n            appendUtf16Data(utf16data, length);\r\n          }\r\n        }\r\n        else {\r\n          appendUtf16Data(utf16data, length);\r\n        }\r\n\r\n        let str = '';\r\n        for (i = 0; i < utf16data.length; i += DECODE_CHUNK_SIZE) {\r\n          str += String.fromCharCode.apply(null, utf16data.slice(i, i + DECODE_CHUNK_SIZE));\r\n        }\r\n\r\n        return str;\r\n      case 4:\r\n        let retArray;\r\n        if (length < 0) {\r\n          retArray = [];\r\n          while (!readBreak()) {\r\n            retArray.push(decodeItem());\r\n          }\r\n        }\r\n        else {\r\n          retArray = new Array(length);\r\n          for (i = 0; i < length; ++i) {\r\n            retArray[i] = decodeItem();\r\n          }\r\n        }\r\n\r\n        return retArray;\r\n      case 5:\r\n        const retObject: any = {};\r\n        for (i = 0; i < length || (length < 0 && !readBreak()); ++i) {\r\n          const key = decodeItem();\r\n          retObject[key] = decodeItem();\r\n        }\r\n\r\n        return retObject;\r\n      case 6:\r\n        return tagValueFunction(decodeItem(), length);\r\n      case 7:\r\n        switch (length) {\r\n          case 20:\r\n            return false;\r\n          case 21:\r\n            return true;\r\n          case 22:\r\n            return null;\r\n          case 23:\r\n            return undefined;\r\n          default:\r\n            return simpleValueFunction(length);\r\n        }\r\n    }\r\n  }\r\n\r\n  const ret = decodeItem();\r\n  if (offset !== data.byteLength) {\r\n    throw new Error('Remaining bytes');\r\n  }\r\n\r\n  return ret;\r\n}\r\n\r\nexport function encode<T = any>(value: T): ArrayBuffer {\r\n  let data = new ArrayBuffer(256);\r\n  let dataView = new DataView(data);\r\n  let byteView = new Uint8Array(data);\r\n  let lastLength: number;\r\n  let offset = 0;\r\n\r\n  function prepareWrite(length: number): DataView {\r\n    let newByteLength = data.byteLength;\r\n    const requiredLength = offset + length;\r\n\r\n    while (newByteLength < requiredLength) {\r\n      newByteLength <<= 1;\r\n    }\r\n\r\n    if (newByteLength !== data.byteLength) {\r\n      const oldDataView = dataView;\r\n      data = new ArrayBuffer(newByteLength);\r\n      dataView = new DataView(data);\r\n      byteView = new Uint8Array(data);\r\n      const uint32count = (offset + 3) >> 2;\r\n\r\n      for (let i = 0; i < uint32count; ++i) {\r\n        dataView.setUint32(i << 2, oldDataView.getUint32(i << 2));\r\n      }\r\n    }\r\n\r\n    lastLength = length;\r\n    return dataView;\r\n  }\r\n\r\n  function commitWrite(...args: any[]) {\r\n    offset += lastLength;\r\n  }\r\n\r\n  function writeFloat64(val: number) {\r\n    commitWrite(prepareWrite(8).setFloat64(offset, val));\r\n  }\r\n\r\n  function writeUint8(val: number) {\r\n    commitWrite(prepareWrite(1).setUint8(offset, val));\r\n  }\r\n\r\n  function writeUint8Array(val: number[] | Uint8Array) {\r\n    prepareWrite(val.length);\r\n    byteView.set(val, offset);\r\n    commitWrite();\r\n  }\r\n\r\n  function writeUint16(val: number) {\r\n    commitWrite(prepareWrite(2).setUint16(offset, val));\r\n  }\r\n\r\n  function writeUint32(val: number) {\r\n    commitWrite(prepareWrite(4).setUint32(offset, val));\r\n  }\r\n\r\n  function writeUint64(val: number) {\r\n    const low = val % POW_2_32;\r\n    const high = (val - low) / POW_2_32;\r\n    const view = prepareWrite(8);\r\n    view.setUint32(offset, high);\r\n    view.setUint32(offset + 4, low);\r\n    commitWrite();\r\n  }\r\n\r\n  function writeVarUint(val: number, mod: number) {\r\n    if (val <= 0xff) {\r\n      if (val < 24) {\r\n        writeUint8(val | mod);\r\n      } else {\r\n        writeUint8(0x18 | mod);\r\n        writeUint8(val);\r\n      }\r\n    } else if (val <= 0xffff) {\r\n      writeUint8(0x19 | mod);\r\n      writeUint16(val);\r\n    } else if (val <= 0xffffffff) {\r\n      writeUint8(0x1a | mod);\r\n      writeUint32(val);\r\n    } else {\r\n      writeUint8(0x1b | mod);\r\n      writeUint64(val);\r\n    }\r\n  }\r\n\r\n  function writeTypeAndLength(type: number, length: number) {\r\n    if (length < 24) {\r\n      writeUint8((type << 5) | length);\r\n    } else if (length < 0x100) {\r\n      writeUint8((type << 5) | 24);\r\n      writeUint8(length);\r\n    } else if (length < 0x10000) {\r\n      writeUint8((type << 5) | 25);\r\n      writeUint16(length);\r\n    } else if (length < 0x100000000) {\r\n      writeUint8((type << 5) | 26);\r\n      writeUint32(length);\r\n    } else {\r\n      writeUint8((type << 5) | 27);\r\n      writeUint64(length);\r\n    }\r\n  }\r\n\r\n  function encodeItem(val: any) {\r\n    let i;\r\n\r\n    if (val === false) {\r\n      return writeUint8(0xf4);\r\n    } else if (val === true) {\r\n      return writeUint8(0xf5);\r\n    } else if (val === null) {\r\n      return writeUint8(0xf6);\r\n    } else if (val === undefined) {\r\n      return writeUint8(0xf7);\r\n    } else if (objectIs(val, -0)) {\r\n      return writeUint8Array([0xf9, 0x80, 0x00]);\r\n    }\r\n\r\n    switch (typeof val) {\r\n      case 'number':\r\n        if (Math.floor(val) === val) {\r\n          if (0 <= val && val <= POW_2_53) {\r\n            return writeTypeAndLength(0, val);\r\n          } else if (-POW_2_53 <= val && val < 0) {\r\n            return writeTypeAndLength(1, -(val + 1));\r\n          }\r\n        }\r\n\r\n        writeUint8(0xfb);\r\n        return writeFloat64(val);\r\n\r\n      case 'string':\r\n        const utf8data = [];\r\n\r\n        for (i = 0; i < val.length; i++) {\r\n          let charCode = val.charCodeAt(i);\r\n          if (charCode < 0x80) {\r\n            utf8data.push(charCode);\r\n          } else if (charCode < 0x800) {\r\n            utf8data.push(0xc0 | (charCode >> 6));\r\n            utf8data.push(0x80 | (charCode & 0x3f));\r\n          } else {\r\n            charCode = (charCode & 0x3ff) << 10;\r\n            charCode |= val.charCodeAt(++i) & 0x3ff;\r\n            charCode += 0x10000;\r\n\r\n            utf8data.push(0xf0 | (charCode >> 18));\r\n            utf8data.push(0x80 | ((charCode >> 12) & 0x3f));\r\n            utf8data.push(0x80 | ((charCode >> 6) & 0x3f));\r\n            utf8data.push(0x80 | (charCode & 0x3f));\r\n          }\r\n        }\r\n\r\n        writeTypeAndLength(3, utf8data.length);\r\n        return writeUint8Array(utf8data);\r\n\r\n      default:\r\n        let length;\r\n        let converted;\r\n\r\n        if (Array.isArray(val)) {\r\n          length = val.length;\r\n\r\n          writeTypeAndLength(4, length);\r\n          for (i = 0; i < length; i++) {\r\n            encodeItem(val[i]);\r\n          }\r\n        }\r\n        else if (val instanceof Uint8Array) {\r\n          writeTypeAndLength(2, val.length);\r\n          writeUint8Array(val);\r\n        }\r\n        else if (ArrayBuffer.isView(val)) {\r\n          converted = new Uint8Array(val.buffer);\r\n\r\n          writeTypeAndLength(2, converted.length);\r\n          writeUint8Array(converted);\r\n        }\r\n        else if (val instanceof ArrayBuffer || (typeof SharedArrayBuffer === 'function' && val instanceof SharedArrayBuffer)) {\r\n          converted = new Uint8Array(val);\r\n\r\n          writeTypeAndLength(2, converted.length);\r\n          writeUint8Array(converted);\r\n        }\r\n        else if (val instanceof TaggedValue) {\r\n          writeVarUint(val.tag, 0b11000000)\r\n          encodeItem(val.value)\r\n        }\r\n        else {\r\n          const keys = Object.keys(val);\r\n          length = keys.length;\r\n\r\n          writeTypeAndLength(5, length);\r\n\r\n          for (i = 0; i < length; i++) {\r\n            const key = keys[i];\r\n\r\n            encodeItem(key);\r\n            encodeItem(val[key]);\r\n          }\r\n        }\r\n    }\r\n  }\r\n\r\n  encodeItem(value);\r\n\r\n  if ('slice' in data) {\r\n    return data.slice(0, offset);\r\n  }\r\n\r\n  const ret = new ArrayBuffer(offset);\r\n  const retView = new DataView(ret);\r\n  for (let i = 0; i < offset; ++i) {\r\n    retView.setUint8(i, dataView.getUint8(i));\r\n  }\r\n\r\n  return ret;\r\n}\r\n/* tslint:enable:no-bitwise */\r\n","// https://gitlab.com/mjbecze/leb128 was ported so that we can reuse older version of bn.js (4.0.0) instead of the one leb128 uses (5.1)\n\n// Could not make import work for bn.js as @types/bn.js wasn't working\n/* tslint:disable:no-var-requires */\nconst Bn = require('bn.js')\n// https://gitlab.com/mjbecze/leb128/-/blob/master/stream.js\nclass Stream{\n  public buffer:Buffer\n  private bytesRead:number\n\n  constructor (buf:Buffer = Buffer.from([])) {\n    this.buffer = buf\n    this.bytesRead = 0\n  }\n\n  public read (size:number) {\n    const data = this.buffer.slice(0, size)\n    this.buffer = this.buffer.slice(size)\n    this.bytesRead += size\n    return data\n  }\n\n  public write (buf:[any]) {\n    this.buffer = Buffer.concat([this.buffer, Buffer.from(buf)])\n  }\n}\n\n// https://gitlab.com/mjbecze/leb128/-/blob/master/unsigned.js\nfunction read (stream: Stream) {\n  return readBn(stream).toString()\n}\n\nfunction readBn (stream: Stream) {\n  const num = new Bn(0)\n  let shift = 0\n  let byt\n  while (true) {\n    byt = stream.read(1)[0]\n    /* tslint:disable:no-bitwise */\n    num.ior(new Bn(byt & 0x7f).shln(shift))\n    if (byt >> 7 === 0) {\n      break\n    } else {\n      shift += 7\n    }\n  }\n  return num\n}\n\nfunction write (num:string | number, stream: Stream) {\n  const bigNum = new Bn(num)\n  while (true) {\n    const i = bigNum.maskn(7).toNumber()\n    bigNum.ishrn(7)\n    if (bigNum.isZero()) {\n      stream.write([i])\n      break\n    } else {\n      stream.write([i | 0x80])\n    }\n  }\n}\n\n/**\n * LEB128 encodeds an interger\n * @param {String|Number} num\n * @return {Buffer}\n */\nexport function encode (num: string | number ) {\n  const stream = new Stream()\n  write(num, stream)\n  return stream.buffer\n}\n\n/**\n * decodes a LEB128 encoded interger\n * @param {Buffer} buffer\n * @return {String}\n */\nexport function decode (buffer:Buffer) {\n  const stream = new Stream(buffer)\n  return read(stream)\n}\n","export class Address {\n  public str: Buffer;\n  constructor(str: Buffer) {\n    if (!str || str.length < 1) { throw new Error('Missing str in address') }\n    this.str = str\n  }\n\n  // https://beta.spec.filecoin.io/#appendix__address__protocol-indicator\n  public protocol(): number {\n    if (this.str.length < 1) {\n      throw Error('No address found.')\n    }\n\n    return this.str[0]\n  }\n\n  public payload(): Buffer {\n    if (this.str.length < 1) {\n      throw Error('No address found.')\n    }\n    return this.str.slice(1, this.str.length)\n  }\n}\n","// Ported from https://www.npmjs.com/package/@glif/filecoin-address to reduce file size\n\nimport { blake2b } from 'blakejs'\nimport { b32decode, b32encode, hex2a} from 'crypto-addr-codec';\nimport { decode as lebDecode, encode as lebEncode } from '../leb128/unsigned';\nimport { Address } from './address';\n\nfunction validateChecksum (ingest:Buffer, expect:Buffer){\n    const digest = getChecksum(ingest)\n    return Buffer.compare(Buffer.from(digest), expect)\n}\n\nfunction getChecksum (ingest:Buffer):Buffer {\n    return blake2b(ingest, null, 4)\n}\n\nfunction checkAddressString (address:string){\n    if (!address){throw Error('No bytes to validate.')}\n    if (address.length < 3){throw Error('Address is too short to validate.')}\n    if (address[0] !== 'f' && address[0] !== 't') {\n        throw Error('Unknown address network.')\n    }\n\n    switch (address[1]) {\n        case '0': {\n        if (address.length > 22){throw Error('Invalid ID address length.')}\n        break\n        }\n        case '1': {\n        if (address.length !== 41){throw Error('Invalid secp256k1 address length.')}\n        break\n        }\n        case '2': {\n        if (address.length !== 41){throw Error('Invalid Actor address length.')}\n        break\n        }\n        case '3': {\n        if (address.length !== 86){throw Error('Invalid BLS address length.')}\n        break\n        }\n        default: {\n            throw new Error('Invalid address protocol.')\n        }\n    }\n}\n\nfunction filDecode (address: string) {\n    checkAddressString(address)\n    const network = address[0]\n    const protocol = parseInt(address[1], 10)\n    const protocolByte = Buffer.from([protocol])\n    const raw = address.slice(2)\n\n    if (protocol === 0) {\n      return filNewAddress(protocol, Buffer.from(lebEncode(raw)))\n    }\n\n    const payloadChecksum = Buffer.from(b32decode(raw.toUpperCase()))\n    const { length } = payloadChecksum\n    const payload = payloadChecksum.slice(0, length - 4)\n    const checksum = payloadChecksum.slice(length - 4, length)\n    if (validateChecksum(Buffer.concat([protocolByte, payload]), checksum)) {\n        throw Error(\"Checksums don't match\")\n    }\n\n    const addressObj = filNewAddress(protocol, payload)\n    if (filEncode(network, addressObj) !== address){\n        throw Error(`Did not encode this address properly: ${address}`)\n    }\n    return addressObj\n}\n\n\nfunction filEncode (network:string, address:Address) {\n    if (!address || !address.str){throw Error('Invalid address')}\n    let addressString = ''\n    const payload = address.payload()\n    const protocol = address.protocol()\n\n    switch (protocol) {\n        case 0: {\n            const decoded = lebDecode(payload)\n            addressString = network + String(protocol) + decoded\n            break\n        }\n        default: {\n            const protocolByte = Buffer.from([protocol])\n            const toChecksum = Buffer.concat([protocolByte, payload])\n            const checksum = getChecksum(toChecksum)\n            const bytes = Buffer.concat([payload, Buffer.from(checksum)])\n            const bytes2a = hex2a(bytes.toString('hex'));\n            const bytes32encoded = b32encode(bytes2a).replace(/=/g, '').toLowerCase();\n            addressString = String(network) + String(protocol) + bytes32encoded\n            break\n        }\n    }\n    return addressString\n}\n\nfunction filNewAddress (protocol:number, payload:Buffer): Address {\n    const protocolByte = Buffer.from([protocol])\n    const input = Buffer.concat([protocolByte, payload])\n    return new Address(input)\n}\n  \nexport function filAddrEncoder(data: Buffer): string {\n    const address = filNewAddress(data[0], data.slice(1))\n    return filEncode('f', address).toString()\n}\n    \nexport function filAddrDecoder(data: string): Buffer {\n    return filDecode(data).str\n}    \n","// REF: https://github.com/ensdomains/address-encoder/pull/130#issuecomment-735935450\n\ntype Address = BigInt\n\n// [n,k,d]-Linear code parameters\n// The linear code used in the account addressing is a [64,45,7]\n// It generates a [64,45]-code, which is the space of Flow account addresses.\n//\n// n is the size of the code words in bits,\n// which is also the size of the account addresses in bits.\nconst linearCodeN = 64\n\n// Columns of the parity-check matrix H of the [64,45]-code used for Flow addresses.\n// H is a (n x p) matrix with coefficients in GF(2), each column is converted into\n// a big endian integer representation of the GF(2) column vector.\n// H is used to verify a code word is a valid account address.\nconst parityCheckMatrixColumns: BigInt[] = [\n  BigInt(0x00001),\n  BigInt(0x00002),\n  BigInt(0x00004),\n  BigInt(0x00008),\n  BigInt(0x00010),\n  BigInt(0x00020),\n  BigInt(0x00040),\n  BigInt(0x00080),\n  BigInt(0x00100),\n  BigInt(0x00200),\n  BigInt(0x00400),\n  BigInt(0x00800),\n  BigInt(0x01000),\n  BigInt(0x02000),\n  BigInt(0x04000),\n  BigInt(0x08000),\n  BigInt(0x10000),\n  BigInt(0x20000),\n  BigInt(0x40000),\n  BigInt(0x7328d),\n  BigInt(0x6689a),\n  BigInt(0x6112f),\n  BigInt(0x6084b),\n  BigInt(0x433fd),\n  BigInt(0x42aab),\n  BigInt(0x41951),\n  BigInt(0x233ce),\n  BigInt(0x22a81),\n  BigInt(0x21948),\n  BigInt(0x1ef60),\n  BigInt(0x1deca),\n  BigInt(0x1c639),\n  BigInt(0x1bdd8),\n  BigInt(0x1a535),\n  BigInt(0x194ac),\n  BigInt(0x18c46),\n  BigInt(0x1632b),\n  BigInt(0x1529b),\n  BigInt(0x14a43),\n  BigInt(0x13184),\n  BigInt(0x12942),\n  BigInt(0x118c1),\n  BigInt(0x0f812),\n  BigInt(0x0e027),\n  BigInt(0x0d00e),\n  BigInt(0x0c83c),\n  BigInt(0x0b01d),\n  BigInt(0x0a831),\n  BigInt(0x0982b),\n  BigInt(0x07034),\n  BigInt(0x0682a),\n  BigInt(0x05819),\n  BigInt(0x03807),\n  BigInt(0x007d2),\n  BigInt(0x00727),\n  BigInt(0x0068e),\n  BigInt(0x0067c),\n  BigInt(0x0059d),\n  BigInt(0x004eb),\n  BigInt(0x003b4),\n  BigInt(0x0036a),\n  BigInt(0x002d9),\n  BigInt(0x001c7),\n  BigInt(0x0003f),\n];\n\n/* tslint:disable:no-bitwise */\n\nexport function isValidAddress(address: Address, chain: ChainID): boolean {\n  let codeWord: BigInt = address;\n  codeWord = BigInt(codeWord) ^ BigInt(chain.codeword);\n\n  if (codeWord === BigInt(0)) {\n    return false;\n  }\n\n  // Multiply the code word GF(2)-vector by the parity-check matrix\n  let parity = BigInt(0);\n  for (let i = 0; i < linearCodeN; i++) {\n    if ((BigInt(codeWord) & BigInt(1)) === BigInt(1)) {\n      parity = BigInt(parity) ^ BigInt(parityCheckMatrixColumns[i]);\n    }\n    codeWord = BigInt(codeWord) >> BigInt(1);\n  }\n  return parity === BigInt(0) && codeWord === BigInt(0);\n}\n\nexport class ChainID {\n  public static mainnet = new ChainID(BigInt(0));\n  public static testnet = new ChainID(BigInt(0x6834ba37b3980209));\n  public static emulator = new ChainID(BigInt(0x1cb159857af02018));\n\n  constructor(readonly codeword: BigInt) {}\n}\n","'use strict';\n// the right shift is important, it has to do with 32 bit operations in javascript, it will make things faster\nexport function u64(h, l) {\n  /* tslint:disable:no-bitwise */\n  this.hi = h >>> 0;\n  this.lo = l >>> 0;\n  /* tslint:enable:no-bitwise */\n}\n\nu64.prototype.set = function(oWord) {\n  this.lo = oWord.lo;\n  this.hi = oWord.hi;\n};\n\nu64.prototype.add = function(oWord) {\n  let lowest;\n  let lowMid;\n  let highMid;\n  let highest; // four parts of the whole 64 bit number..\n\n  // need to add the respective parts from each number and the carry if on is present..\n  /* tslint:disable:no-bitwise */\n  lowest = (this.lo & 0XFFFF) + (oWord.lo & 0XFFFF);\n  lowMid = (this.lo >>> 16) + (oWord.lo >>> 16) + (lowest >>> 16);\n  highMid = (this.hi & 0XFFFF) + (oWord.hi & 0XFFFF) + (lowMid >>> 16);\n  highest = (this.hi >>> 16) + (oWord.hi >>> 16) + (highMid >>> 16);\n\n  // now set the hgih and the low accordingly..\n  this.lo = (lowMid << 16) | (lowest & 0XFFFF);\n  this.hi = (highest << 16) | (highMid & 0XFFFF);\n  /* tslint:enable:no-bitwise */\n\n  return this; // for chaining..\n};\n\nu64.prototype.addOne = function() {\n  if (this.lo === -1 || this.lo === 0xFFFFFFFF) {\n    this.lo = 0;\n    this.hi++;\n  }\n  else {\n    this.lo++;\n  }\n};\n\nu64.prototype.plus = function(oWord) {\n  let c = new u64(0, 0);\n  let lowest;\n  let lowMid;\n  let highMid;\n  let highest; // four parts of the whole 64 bit number..\n\n  // need to add the respective parts from each number and the carry if on is present..\n  /* tslint:disable:no-bitwise */\n  lowest = (this.lo & 0XFFFF) + (oWord.lo & 0XFFFF);\n  lowMid = (this.lo >>> 16) + (oWord.lo >>> 16) + (lowest >>> 16);\n  highMid = (this.hi & 0XFFFF) + (oWord.hi & 0XFFFF) + (lowMid >>> 16);\n  highest = (this.hi >>> 16) + (oWord.hi >>> 16) + (highMid >>> 16);\n\n  // now set the hgih and the low accordingly..\n  c.lo = (lowMid << 16) | (lowest & 0XFFFF);\n  c.hi = (highest << 16) | (highMid & 0XFFFF);\n  /* tslint:enable:no-bitwise */\n\n  return c; //for chaining..\n};\n\nu64.prototype.not = function() {\n  /* tslint:disable:no-bitwise */\n  return new u64(~this.hi, ~this.lo);\n  /* tslint:enable:no-bitwise */\n};\n\nu64.prototype.one = function() {\n  return new u64(0x0, 0x1);\n};\n\nu64.prototype.zero = function() {\n  return new u64(0x0, 0x0);\n};\n\nu64.prototype.neg = function() {\n  return this.not().plus(this.one());\n};\n\nu64.prototype.minus = function(oWord) {\n  return this.plus(oWord.neg());\n};\n\nu64.prototype.isZero = function() {\n  return (this.lo === 0) && (this.hi === 0);\n};\n\nfunction isLong(obj) {\n  // @ts-nocheck\n  return (obj && obj.__isLong__) === true;\n}\n\nfunction fromNumber(value) {\n  if (isNaN(value) || !isFinite(value)) {\n    return this.zero();}\n  /* tslint:disable:no-bitwise */\n  let pow32 = (1 << 32);\n  \n  return new u64((value % pow32) | 0, (value / pow32) | 0);\n  /* tslint:enable:no-bitwise */\n}\n\nu64.prototype.multiply = function(multiplier) {\n  if (this.isZero()) {\n    return this.zero();}\n  if (!isLong(multiplier)) {\n    multiplier = fromNumber(multiplier); }\n  if (multiplier.isZero()) {\n    return this.zero();}\n\n  // Divide each long into 4 chunks of 16 bits, and then add up 4x4 products.\n  // We can skip products that would overflow.\n\n  /* tslint:disable:no-bitwise */\n  let a48 = this.hi >>> 16;\n  let a32 = this.hi & 0xFFFF;\n  let a16 = this.lo >>> 16;\n  let a00 = this.lo & 0xFFFF;\n\n  let b48 = multiplier.hi >>> 16;\n  let b32 = multiplier.hi & 0xFFFF;\n  let b16 = multiplier.lo >>> 16;\n  let b00 = multiplier.lo & 0xFFFF;\n\n  let c48 = 0;\n  let c32 = 0;\n  let c16 = 0;\n  let c00 = 0;\n  c00 += a00 * b00;\n  c16 += c00 >>> 16;\n  c00 &= 0xFFFF;\n  c16 += a16 * b00;\n  c32 += c16 >>> 16;\n  c16 &= 0xFFFF;\n  c16 += a00 * b16;\n  c32 += c16 >>> 16;\n  c16 &= 0xFFFF;\n  c32 += a32 * b00;\n  c48 += c32 >>> 16;\n  c32 &= 0xFFFF;\n  c32 += a16 * b16;\n  c48 += c32 >>> 16;\n  c32 &= 0xFFFF;\n  c32 += a00 * b32;\n  c48 += c32 >>> 16;\n  c32 &= 0xFFFF;\n  c48 += a48 * b00 + a32 * b16 + a16 * b32 + a00 * b48;\n  c48 &= 0xFFFF;\n  return new u64((c48 << 16) | c32, (c16 << 16) | c00);\n  /* tslint:enable:no-bitwise */\n};\n\nu64.prototype.shiftLeft = function(bits) {\n  bits = bits % 64;\n  let c = new u64(0, 0);\n  /* tslint:disable:no-bitwise */\n  if (bits === 0) {\n    return this.clone();\n  }\n  else if (bits > 31) {\n    c.lo = 0;\n    c.hi = this.lo << (bits - 32);\n  }\n  else {\n    let toMoveUp = this.lo >>> 32 - bits;\n    c.lo = this.lo << bits;\n    c.hi = (this.hi << bits) | toMoveUp;\n  }\n  /* tslint:enable:no-bitwise */\n  return c; //for chaining..\n};\n\nu64.prototype.setShiftLeft = function(bits) {\n  if (bits === 0) {\n    return this;\n  }\n  if (bits > 63) {\n    bits = bits % 64;\n  }\n  /* tslint:disable:no-bitwise */\n  if (bits > 31) {\n    this.hi = this.lo << (bits - 32);\n    this.lo = 0;\n  }\n  else {\n    let toMoveUp = this.lo >>> 32 - bits;\n    this.lo <<= bits;\n    this.hi = (this.hi << bits) | toMoveUp;\n  }\n  /* tslint:enable:no-bitwise */\n  return this; // for chaining..\n};\n// Shifts this word by the given number of bits to the right (max 32)..\nu64.prototype.shiftRight = function(bits) {\n  bits = bits % 64;\n  let c = new u64(0, 0);\n  /* tslint:disable:no-bitwise */\n  if (bits === 0) {\n    return this.clone();\n  }\n  else if (bits >= 32) {\n    c.hi = 0;\n    c.lo = this.hi >>> (bits - 32);\n  }\n  else {\n    let bitsOff32 = 32 - bits;\n    let toMoveDown = this.hi << bitsOff32 >>> bitsOff32;\n    c.hi = this.hi >>> bits;\n    c.lo = this.lo >>> bits | (toMoveDown << bitsOff32);\n  }\n  /* tslint:enable:no-bitwise */\n  return c; // for chaining..\n};\n// Rotates the bits of this word round to the left (max 32)..\nu64.prototype.rotateLeft = function(bits) {\n  if (bits > 32) {\n    return this.rotateRight(64 - bits);\n  }\n  /* tslint:disable:no-bitwise */\n  let c = new u64(0, 0);\n  if (bits === 0) {\n    c.lo = this.lo >>> 0;\n    c.hi = this.hi >>> 0;\n  }\n  else if (bits === 32) { //just switch high and low over in this case..\n    c.lo = this.hi;\n    c.hi = this.lo;\n  }\n  else {\n    c.lo = (this.lo << bits) | (this.hi >>> (32 - bits));\n    c.hi = (this.hi << bits) | (this.lo >>> (32 - bits));\n  }\n  /* tslint:enable:no-bitwise */\n  return c; // for chaining..\n};\n\nu64.prototype.setRotateLeft = function(bits) {\n  if (bits > 32) {\n    return this.setRotateRight(64 - bits);\n  }\n  /* tslint:disable:no-bitwise */\n  let newHigh;\n  if (bits === 0) {\n    return this;\n  }\n  else if (bits === 32) { //just switch high and low over in this case..\n    newHigh = this.lo;\n    this.lo = this.hi;\n    this.hi = newHigh;\n  }\n  else {\n    newHigh = (this.hi << bits) | (this.lo >>> (32 - bits));\n    this.lo = (this.lo << bits) | (this.hi >>> (32 - bits));\n    this.hi = newHigh;\n  }\n  /* tslint:enable:no-bitwise */\n  return this; // for chaining..\n};\n// Rotates the bits of this word round to the right (max 32)..\nu64.prototype.rotateRight = function(bits) {\n  if (bits > 32) {\n    return this.rotateLeft(64 - bits);\n  }\n  /* tslint:disable:no-bitwise */\n  let c = new u64(0, 0);\n  if (bits === 0) {\n    c.lo = this.lo >>> 0;\n    c.hi = this.hi >>> 0;\n  }\n  else if (bits === 32) { // just switch high and low over in this case..\n    c.lo = this.hi;\n    c.hi = this.lo;\n  }\n  else {\n    c.lo = (this.hi << (32 - bits)) | (this.lo >>> bits);\n    c.hi = (this.lo << (32 - bits)) | (this.hi >>> bits);\n  }\n  /* tslint:enable:no-bitwise */\n  return c; // for chaining..\n};\nu64.prototype.setFlip = function() {\n  let newHigh;\n  newHigh = this.lo;\n  this.lo = this.hi;\n  this.hi = newHigh;\n  return this;\n};\n// Rotates the bits of this word round to the right (max 32)..\nu64.prototype.setRotateRight = function(bits) {\n  if (bits > 32) {\n    return this.setRotateLeft(64 - bits);\n  }\n\n  if (bits === 0) {\n    return this;\n  }\n  else if (bits === 32) { //just switch high and low over in this case..\n    let newHigh;\n    newHigh = this.lo;\n    this.lo = this.hi;\n    this.hi = newHigh;\n  }\n  else {\n    /* tslint:disable:no-bitwise */\n    newHigh = (this.lo << (32 - bits)) | (this.hi >>> bits);\n    this.lo = (this.hi << (32 - bits)) | (this.lo >>> bits);\n    /* tslint:enable:no-bitwise */\n    this.hi = newHigh;\n  }\n  return this; // for chaining..\n};\n// Xors this word with the given other..\nu64.prototype.xor = function(oWord) {\n  let c = new u64(0, 0);\n  /* tslint:disable:no-bitwise */\n  c.hi = this.hi ^ oWord.hi;\n  c.lo = this.lo ^ oWord.lo;\n  /* tslint:enable:no-bitwise */\n  return c; // for chaining..\n};\n// Xors this word with the given other..\nu64.prototype.setxorOne = function(oWord) {\n  /* tslint:disable:no-bitwise */\n  this.hi ^= oWord.hi;\n  this.lo ^= oWord.lo;\n  /* tslint:enable:no-bitwise */\n  return this; // for chaining..\n};\n// Ands this word with the given other..\nu64.prototype.and = function(oWord) {\n  let c = new u64(0, 0);\n  /* tslint:disable:no-bitwise */\n  c.hi = this.hi & oWord.hi;\n  c.lo = this.lo & oWord.lo;\n  /* tslint:enable:no-bitwise */\n  return c; //for chaining..\n};\n\n// Creates a deep copy of this Word..\nu64.prototype.clone = function() {\n  return new u64(this.hi, this.lo);\n};\n\nu64.prototype.setxor64 = function() {\n  let a = arguments;\n  let i = a.length;\n  /* tslint:disable:no-bitwise */\n  while (i--) {\n    this.hi ^= a[i].hi;\n    this.lo ^= a[i].lo;\n  }\n  /* tslint:enable:no-bitwise */\n  return this;\n}\n\nexport function u(h, l) {      \n  return new u64(h, l);\n}\n\nexport function xor64() {\n  let a = arguments;\n  let h = a[0].hi;\n  let l = a[0].lo;\n  let i = a.length-1;\n  /* tslint:disable:no-bitwise */\n  do {\n    h ^= a[i].hi;\n    l ^= a[i].lo;\n    i--;\n  } while (i>0);\n  /* tslint:enable:no-bitwise */\n  return new this.u64(h, l);\n}\n\nexport function clone64Array(array) {\n  let i = 0;\n  let len = array.length;\n  let a = new Array(len);\n  while(i<len) {\n    a[i] = array[i];\n    i++;\n  }\n  return a;\n}\n\n// this shouldn't be a problem, but who knows in the future javascript might support 64bits\nexport function t32(x) {\n  /* tslint:disable:no-bitwise */\n  return (x & 0xFFFFFFFF);\n  /* tslint:enable:no-bitwise */\n}\n\nexport  function rotl32(x, c) {\n  /* tslint:disable:no-bitwise */\n  return (((x) << (c)) | ((x) >>> (32 - (c)))) & (0xFFFFFFFF);\n  /* tslint:enable:no-bitwise */\n}\n\nexport  function rotr32(x, c) {\n  return this.rotl32(x, (32 - (c)));\n}\n\nexport  function swap32(val) {\n  /* tslint:disable:no-bitwise */\n  return ((val & 0xFF) << 24) |\n    ((val & 0xFF00) << 8) |\n    ((val >>> 8) & 0xFF00) |\n    ((val >>> 24) & 0xFF);\n  /* tslint:enable:no-bitwise */\n}\n\nexport function swap32Array(a) {\n  // can't do this with map because of support for IE8 (Don't hate me plz).\n  let i = 0;\n  let len = a.length;\n  let r = new Array(i);\n  while (i<len) {\n    r[i] = (this.swap32(a[i]));\n    i++;\n  }\n  return r;\n}\n\nexport function xnd64(x, y, z) {\n  /* tslint:disable:no-bitwise */\n  return new this.u64(x.hi ^ ((~y.hi) & z.hi), x.lo ^ ((~y.lo) & z.lo));\n  /* tslint:enable:no-bitwise */\n}\n\nexport function bufferInsert(buffer, bufferOffset, data, len, dataOffset) {\n  /* tslint:disable:no-bitwise */\n  dataOffset = dataOffset | 0;\n  /* tslint:enable:no-bitwise */\n  let i = 0;\n  while (i < len) {\n    buffer[i + bufferOffset] = data[i + dataOffset];\n    i++;\n  }\n}\n\nexport function bufferInsert64(buffer, bufferOffset, data, len) {\n  let i = 0;\n  while (i < len) {\n    buffer[i + bufferOffset] = data[i].clone();\n    i++;\n  }\n}\n\nexport function bufferInsertBackwards(buffer, bufferOffset, data, len) {\n  let i = 0;\n  while (i < len) {\n    buffer[i + bufferOffset] = data[len - 1 - i];\n    i++;\n  }\n}\n\nexport function bufferSet(buffer, bufferOffset, value, len) {\n  let i = 0;\n  while (i < len) {\n    buffer[i + bufferOffset] = value;\n    i++;\n  }\n}\n\nexport function bufferXORInsert(buffer, bufferOffset, data, dataOffset, len) {\n  let i = 0;\n  while (i < len) {\n    /* tslint:disable:no-bitwise */\n    buffer[i + bufferOffset] ^= data[i + dataOffset];\n    /* tslint:enable:no-bitwise */\n    i++;\n  }\n}\n\nexport function xORTable(d, s1, s2, len) {\n  let i = 0;\n  while (i < len) {\n    /* tslint:disable:no-bitwise */\n    d[i] = s1[i] ^ s2[i];\n    /* tslint:enable:no-bitwise */\n    i++\n  }\n}\n","'use strict';\n// String functions\n\nimport { u64 } from './op.js';\n\nexport function int8ArrayToHexString(array) {\n\tlet str = '';\n\n\tfor (let i = 0; i < array.length; i++) {\n\t\tif (array[i] < 16) {\n\t\t\tstr += '0' + array[i].toString(16);\n\t\t}\n\t\telse {\n\t\t\tstr += array[i].toString(16);\n\t\t}\n\t}\n\treturn str;\n}\n\nexport function int32ArrayToHexString(array) {\n\tlet str = '';\n\tlet len = array.length;\n\tfor (let i = 0; i < len; i++) {\n\t\tlet s = array[i];\n\t\tif (s < 0) {\n\t\t\ts = 0xFFFFFFFF + array[i] + 1;\n\t\t}\n\t\tlet l = s.toString(16);\n\t\tlet padding = 8;\n\t\twhile (l.length < padding) {\n\t\t\tl = \"0\" + l;\n\t\t}\n\t\tstr += l;\n\t}\n\treturn str;\n}\n\nexport function hex2string(s) {\n\tfor (let c = [], len = s.length, i = 0; i < len; i += 2) {\n\t\tc.push(String.fromCharCode(parseInt(s.substring(i, i + 2), 16))); }\n\treturn c.join('');\n}\n\nexport function hex2bytes(s) {\n\tfor (let c = [], len = s.length, i = 0; i < len; i += 2) {\n\t\tc.push(parseInt(s.substring(i, i + 2), 16)); }\n\treturn c;\n}\n\nexport function string2bytes(s) {\n\tlet len = s.length;\n\tlet b = new Array(len);\n\tlet i = 0;\n\twhile (i < len) {\n\t\tb[i] = s.charCodeAt(i);\n\t\ti++;\n\t}\n\treturn b;\n}\n\nexport  function bytes2Int32Buffer(b) {\n\tif (!b) { return []; }\n\t/* tslint:disable:no-bitwise */\n\tlet len = b.length ? (((b.length - 1) >>> 2) + 1) : 0;\n\tlet buffer = new Array(len);\n\tlet j = 0;\n\twhile (j < len) {\n\t\tbuffer[j] = (b[j * 4] << 24) | (b[j * 4 + 1] << 16) | (b[j * 4 + 2] << 8) | b[j * 4 + 3];\n\t\tj++;\n\t}\n    /* tslint:enable:no-bitwise */\n\treturn buffer;\n}\n\nexport function bytes2Int64Buffer(b) {\n\tif (!b) { return []; }\n\t/* tslint:disable:no-bitwise */\n\tlet len = b.length ? (((b.length - 1) >>> 3) + 1) : 0;\n\tlet buffer = new Array(len);\n\tlet j = 0;\n\twhile (j < len) {\n\t\tbuffer[j] = new u64((b[j * 8] << 24) | (b[j * 8 + 1] << 16) | (b[j * 8 + 2] << 8) | b[j * 8 + 3], (b[j * 8 + 4] << 24) | (b[j * 8 + 5] << 16) | (b[j * 8 + 6] << 8) | b[j * 8 + 7]);\n\t\tj++;\n\t}\n\t/* tslint:enable:no-bitwise */\n\treturn buffer;\n}\n\nexport function bytes2Int64BufferLeAligned(b) {\n\tif (!b) { return []; }\n\t/* tslint:disable:no-bitwise */\n\tlet len =  b.length ? ((( b.length - 1) >>> 3) + 1) : 0;\n\tlet buffer = new Array(len);\n\tlet j = 0;\n\twhile (j < len) {\n\t\tbuffer[j] = new u64((b[j * 8 + 7] << 24) | (b[j * 8 + 6] << 16) | (b[j * 8 + 5] << 8) | b[j * 8 + 4], (b[j * 8 + 3] << 24) | (b[j * 8 + 2] << 16) | (b[j * 8 + 1] << 8) | b[j * 8]);\n\t\tj++;\n\t}\n\t/* tslint:enable:no-bitwise */\n\treturn buffer;\n}\n\nexport function bufferEncode64leAligned(buffer, offset, uint64) {\n\t/* tslint:disable:no-bitwise */\n\tbuffer[offset + 7] = uint64.hi >>> 24;\n\tbuffer[offset + 6] = uint64.hi >>> 16 & 0xFF;\n\tbuffer[offset + 5] = uint64.hi >>> 8 & 0xFF;\n\tbuffer[offset + 4] = uint64.hi & 0xFF;\n\tbuffer[offset + 3] = uint64.lo >>> 24;\n\tbuffer[offset + 2] = uint64.lo >>> 16 & 0xFF;\n\tbuffer[offset + 1] = uint64.lo >>> 8 & 0xFF;\n\tbuffer[offset + 0] = uint64.lo & 0xFF;\n\t/* tslint:enable:no-bitwise */\n}\n\nexport  function bufferEncode64(buffer, offset, uint64) {\n\t/* tslint:disable:no-bitwise */\n\tbuffer[offset] = uint64.hi >>> 24;\n\tbuffer[offset + 1] = uint64.hi >>> 16 & 0xFF;\n\tbuffer[offset + 2] = uint64.hi >>> 8 & 0xFF;\n\tbuffer[offset + 3] = uint64.hi & 0xFF;\n\tbuffer[offset + 4] = uint64.lo >>> 24;\n\tbuffer[offset + 5] = uint64.lo >>> 16 & 0xFF;\n\tbuffer[offset + 6] = uint64.lo >>> 8 & 0xFF;\n\tbuffer[offset + 7] = uint64.lo & 0xFF;\n\t/* tslint:enable:no-bitwise */\n}\n\nexport function int32Buffer2Bytes(b) {\n\tlet buffer = new Array(b.length);\n\tlet len = b.length;\n\tlet i = 0;\n\t/* tslint:disable:no-bitwise */\n\twhile (i < len) {\n\t\tbuffer[i * 4] = (b[i] & 0xFF000000) >>> 24;\n\t\tbuffer[i * 4 + 1] = (b[i] & 0x00FF0000) >>> 16;\n\t\tbuffer[i * 4 + 2] = (b[i] & 0x0000FF00) >>> 8;\n\t\tbuffer[i * 4 + 3] = (b[i] & 0x000000FF);\n\t\ti++;\n\t}\n\t/* tslint:enable:no-bitwise */\n\treturn buffer;\n}\n\nexport function string2Int32Buffer(s) {\n\treturn bytes2Int32Buffer(string2bytes(s));\n}\n\nlet keyStr = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=\";\n\nexport  function b64Encode(input) {\n\tlet output = \"\";\n\tlet chr1;\n\tlet chr2;\n\tlet chr3;\n\tlet enc1;\n\tlet enc2;\n\tlet enc3\n\tlet enc4;\n\tlet i = 0;\n\n\twhile (i < input.length) {\n\n\t\tchr1 = input[i++];\n\t\tchr2 = input[i++];\n\t\tchr3 = input[i++];\n        /* tslint:disable:no-bitwise */\n\t\tenc1 = chr1 >> 2;\n\t\tenc2 = ((chr1 & 3) << 4) | (chr2 >> 4);\n\t\tenc3 = ((chr2 & 15) << 2) | (chr3 >> 6);\n\t\tenc4 = chr3 & 63;\n        /* tslint:enable:no-bitwise */\n\t\tif (isNaN(chr2)) {\n\t\t\tenc3 = enc4 = 64;\n\t\t}\n\t\telse if (isNaN(chr3)) {\n\t\t\tenc4 = 64;\n\t\t}\n\n\t\toutput +=\n\t\t\tkeyStr.charAt(enc1) + keyStr.charAt(enc2) +\n\t\t\tkeyStr.charAt(enc3) + keyStr.charAt(enc4);\n\t}\n\n\treturn output;\n}\n\nexport function b64Decode(input) {\n\tlet output = [];\n\t// @ts-ignore\n\tlet chr1;\n\tlet  chr2;\n\tlet chr3;\n\tlet enc1;\n\tlet enc2;\n\tlet enc3\n\tlet enc4;\n\tlet i = 0;\n\n\tinput = input.replace(/[^A-Za-z0-9\\+\\/\\=]/g, \"\");\n\n\twhile (i < input.length) {\n\n\t\tenc1 = keyStr.indexOf(input.charAt(i++));\n\t\tenc2 = keyStr.indexOf(input.charAt(i++));\n\t\tenc3 = keyStr.indexOf(input.charAt(i++));\n\t\tenc4 = keyStr.indexOf(input.charAt(i++));\n\n\t\t/* tslint:disable:no-bitwise */\n\t\tchr1 = (enc1 << 2) | (enc2 >> 4);\n\t\tchr2 = ((enc2 & 15) << 4) | (enc3 >> 2);\n\t\tchr3 = ((enc3 & 3) << 6) | enc4;\n\t\t/* tslint:enable:no-bitwise */\n\n\t\toutput.push(chr1);\n\n\t\tif (enc3 !== 64) {\n\t\t\toutput.push(chr2);\n\t\t}\n\t\tif (enc4 !== 64) {\n\t\t\toutput.push(chr3);\n\t\t}\n\t}\n\treturn output;\n}","/////////////////////////////////////\n////////////  groestl ///////////////\n\n//// Written by Quantum Explorer ////\n////////// Dash Foundation //////////\n/// Released under the MIT License //\n/////////////////////////////////////\n\nimport { u, u64, bufferInsert, bufferSet, bufferInsert64, xor64 }  from './op';\nimport { bytes2Int64Buffer, b64Decode, int32Buffer2Bytes, int32ArrayToHexString, string2bytes, bufferEncode64 } from './helper';\n\nvar T0 = bytes2Int64Buffer(b64Decode(\"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\"));\nvar T1 = bytes2Int64Buffer(b64Decode(\"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\"));\nvar T2 = bytes2Int64Buffer(b64Decode(\"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\"));\nvar T3 = bytes2Int64Buffer(b64Decode(\"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\"));\nvar T4 = bytes2Int64Buffer(b64Decode(\"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\"));\nvar T5 = bytes2Int64Buffer(b64Decode(\"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\"));\nvar T6 = bytes2Int64Buffer(b64Decode(\"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\"));\nvar T7 = bytes2Int64Buffer(b64Decode(\"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\"));\n\n\n\nvar B64 = function(n, x) {\n  if (n === 7) {\n    /* tslint:disable:no-bitwise */\n    return x.lo & 0xFF;\n    /* tslint:enable:no-bitwise */\n  }\n  var bits = (7 - n) * 8;\n  if (bits >= 32) { // faster than >= 32\n    /* tslint:disable:no-bitwise */\n    return (x.hi >>> (bits - 32)) & 0xFF;\n    /* tslint:enable:no-bitwise */\n  }\n  else {\n    var bitsOff32 = 32 - bits;\n    /* tslint:disable:no-bitwise */\n    let toMoveDown = x.hi << bitsOff32 >>> bitsOff32;\n    return (x.lo >>> bits | (toMoveDown << bitsOff32)) & 0xFF;\n    /* tslint:enable:no-bitwise */\n  }\n};\n\nvar j64 = [u(0, 0), u(0, 0x10), u(0, 0x20), u(0, 0x30), u(0, 0x40), u(0, 0x50), u(0, 0x60),\n  u(0, 0x70), u(0, 0x80), u(0, 0x90), u(0, 0xA0), u(0, 0xB0), u(0, 0xC0),\n  u(0, 0xD0), u(0, 0xE0), u(0, 0xF0)\n];\n\nvar nj64 = [u(0xFFFFFFFF, 0xFFFFFFFF), u(0xFFFFFFFF, 0xFFFFFFEF), u(0xFFFFFFFF, 0xFFFFFFDF), u(0xFFFFFFFF, 0xFFFFFFCF), u(0xFFFFFFFF, 0xFFFFFFBF), u(0xFFFFFFFF, 0xFFFFFFAF), u(0xFFFFFFFF, 0xFFFFFF9F),\n  u(0xFFFFFFFF, 0xFFFFFF8F), u(0xFFFFFFFF, 0xFFFFFF7F), u(0xFFFFFFFF, 0xFFFFFF6F), u(0xFFFFFFFF, 0xFFFFFF5F), u(0xFFFFFFFF, 0xFFFFFF4F), u(0xFFFFFFFF, 0xFFFFFF3F),\n  u(0xFFFFFFFF, 0xFFFFFF2F), u(0xFFFFFFFF, 0xFFFFFF1F), u(0xFFFFFFFF, 0xFFFFFF0F)\n];\n\nvar r64 = [u(0, 0), u(0, 1), u(0, 2), u(0, 3), u(0, 4), u(0, 5), u(0, 6), u(0, 7),\n  u(0, 8), u(0, 9), u(0, 10), u(0, 11), u(0, 12), u(0, 13)\n];\n\nvar compress = function(int64buf, state) {\n  var g = new Array(16);\n  var m = new Array(16);\n  for (let uu = 0; uu < 16; uu++) {\n    m[uu] = int64buf[uu];\n    g[uu] = m[uu].xor(state[uu]);\n  }\n  var t = new Array(16);\n  for (let r = 0; r < 14; r++) {\n    for (var i = 0; i < 16; i++) {\n      g[i].setxor64(j64[i].plus(r64[r]).setShiftLeft(56));\n    }\n\n    for (let uu = 0; uu < 16; uu++) {\n      /* tslint:disable:no-bitwise */\n      t[uu] = xor64(T0[B64(0, g[uu])], T1[B64(1, g[(uu + 1) & 0xF])], T2[B64(2, g[(uu + 2) & 0xF])], T3[B64(3, g[(uu + 3) & 0xF])], T4[B64(4, g[(uu + 4) & 0xF])], T5[B64(5, g[(uu + 5) & 0xF])], T6[B64(6, g[(uu + 6) & 0xF])], T7[B64(7, g[(uu + 11) & 0xF])]);\n    }\n    let temp = g;\n    g = t;\n    t = temp;\n  }\n  for (let r = 0; r < 14; r++) {\n    for (let ii = 0; ii < 16; ii++) {\n      m[ii].setxor64(r64[r], nj64[ii]);\n    }\n    for (let uu = 0; uu < 16; uu++) {\n      t[uu] = xor64(T0[B64(0, m[(uu + 1) & 0xF])], T1[B64(1, m[(uu + 3) & 0xF])], T2[B64(2, m[(uu + 5) & 0xF])], T3[B64(3, m[(uu + 11) & 0xF])], T4[B64(4, m[(uu + 0) & 0xF])], T5[B64(5, m[(uu + 2) & 0xF])], T6[B64(6, m[(uu + 4) & 0xF])], T7[B64(7, m[(uu + 6) & 0xF])]);\n    }\n    /* tslint:enable:no-bitwise */\n    temp = m;\n    m = t;\n    t = temp;\n  }\n  for (let uu = 0; uu < 16; uu++) {\n    state[uu].setxor64(g[uu], m[uu]);\n  }\n}\n\nvar final = function(state) {\n  var g = new Array(16);\n  bufferInsert64(g, 0, state, 16);\n  var t = new Array(16);\n  for (let r = 0; r < 14; r++) {\n    \n    for (let i = 0; i < 16; i++) {\n      g[i].setxor64(j64[i].plus(r64[r]).setShiftLeft(56));\n    }\n    /* tslint:disable:no-bitwise */\n    for (let uu = 0; uu < 16; uu++) {\n      t[uu] = xor64(T0[B64(0, g[uu])], T1[B64(1, g[(uu + 1) & 0xF])], T2[B64(2, g[(uu + 2) & 0xF])], T3[B64(3, g[(uu + 3) & 0xF])], T4[B64(4, g[(uu + 4) & 0xF])], T5[B64(5, g[(uu + 5) & 0xF])], T6[B64(6, g[(uu + 6) & 0xF])], T7[B64(7, g[(uu + 11) & 0xF])]);\n    }\n    /* tslint:enable:no-bitwise */\n    var temp = g;\n    g = t;\n    t = temp;\n  }\n  for (let uu = 0; uu < 16; uu++) {\n    state[uu].setxor64(g[uu]);}\n}\n\nvar groestl = function(ctx, data, len) {\n  let buf;\n  let ptr;\n  //create a local copy of states\n  var V = new Array(16);\n  buf = ctx.buffer;\n  ptr = ctx.ptr;\n  if (len < ctx.buffer.length - ptr) {\n    bufferInsert(buf, ptr, data, data.length);\n    ptr += data.length;\n    ctx.ptr = ptr;\n    return;\n  }\n  //perform a deep copy of current state\n  bufferInsert(V, 0, ctx.state, 16);\n  while (len > 0) {\n    var clen = ctx.buffer.length - ptr;\n    if (clen > len) { clen = len; }\n    bufferInsert(buf, ptr, data, clen);\n    ptr += clen;\n    data = data.slice(clen);\n    len -= clen;\n    if (ptr === ctx.buffer.length) {\n      var int64Buf = bytes2Int64Buffer(buf);\n      compress(int64Buf, V);\n      ctx.count.addOne();\n      ptr = 0;\n    }\n  }\n  ctx.state = V;\n  ctx.ptr = ptr;\n};\n\nvar groestlClose = function(ctx) {\n  var buf = ctx.buffer;\n  var ptr = ctx.ptr;\n  var pad = new Array(136);\n  var len = buf.length;\n  var padLen;\n  var count;\n  pad[0] = 0x80;\n  if (ptr < 120) {\n    padLen = 128 - ptr;\n    count = ctx.count.plus(u(0, 1));\n  }\n  else {\n    padLen = 256 - ptr;\n    count = ctx.count.plus(u(0, 2));\n  }\n  bufferSet(pad, 1, 0, padLen - 9);\n  bufferEncode64(pad, padLen - 8, count);\n  groestl(ctx, pad, padLen);\n  final(ctx.state);\n  var out = new Array(16);\n  for (let uu = 0, v = 8; uu < 8; uu++, v++) {\n    out[2 * uu] = ctx.state[v].hi;\n    out[2 * uu + 1] = ctx.state[v].lo;\n  }\n  return out;\n}\n\nexport function groestll(input, format, output) {\n  var msg;\n  if (format === 1) {\n    msg = input;\n  }\n  else if (format === 2) {\n    msg = int32Buffer2Bytes(input);\n  }\n  else {\n    msg = string2bytes(input);\n  }\n  var ctx = {};\n  ctx.state = new Array(16);\n  for (var i = 0; i < 15; i++) {\n    ctx.state[i] = new u64(0, 0);\n  }\n  ctx.state[15] = new u64(0, 512);\n  ctx.ptr = 0;\n  ctx.count = new u64(0,0);\n  ctx.buffer = new Array(128);\n  groestl(ctx, msg, msg.length);\n  let r = groestlClose(ctx, 0, 0);\n  var out;\n  if (output === 2) {\n    out = r;\n  }\n  else if (output === 1) {\n    out = int32Buffer2Bytes(r)\n  }\n  else {\n    out = int32ArrayToHexString(r)\n  }\n  return out;\n}","// Ported from https://www.npmjs.com/package/@xmr-core/xmr-b58 to reduce file size\n\nimport bigInt from 'big-integer';\n\nconst b58: any = {};\n\nconst alphabetStr = \"123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz\";\nconst alphabet: number[] = [];\nfor (let i = 0; i < alphabetStr.length; i++) {\n  alphabet.push(alphabetStr.charCodeAt(i));\n}\nconst encodedBlockSizes = [0, 2, 3, 5, 6, 7, 9, 10, 11];\n\nconst alphabetSize = alphabet.length;\nconst fullBlockSize = 8;\nconst fullEncodedBlockSize = 11;\n\nfunction hexToBin(hex: string) {\n  if (hex.length % 2 !== 0) {\n    throw Error(\"Hex string has invalid length!\");\n  }\n  const res = new Uint8Array(hex.length / 2);\n  for (let i = 0; i < hex.length / 2; ++i) {\n    res[i] = parseInt(hex.slice(i * 2, i * 2 + 2), 16);\n  }\n  return res;\n}\n\nfunction binToHex(bin: string | any[] | Uint8Array) {\n  const out = [];\n  for(const i of Object.keys(bin)) {\n    out.push((\"0\" + bin[Number(i)].toString(16)).slice(-2));\n  }\n  return out.join(\"\");\n}\n\nfunction strToBin(str: string) {\n  const res = new Uint8Array(str.length);\n  for (let i = 0; i < str.length; i++) {\n    res[i] = str.charCodeAt(i);\n  }\n  return res;\n}\n\nfunction binToStr(bin: string | any[] | Uint8Array) {\n  const out = [];\n  for(const i of Object.keys(bin)) {\n    out.push(String.fromCharCode(bin[Number(i)]));\n  }\n  return out.join(\"\");\n}\n\nfunction uint8BeTo64(data: string | any[]) {\n  if (data.length < 1 || data.length > 8) {\n    throw Error(\"Invalid input length\");\n  }\n  let res = bigInt.zero;\n  const twopow8 = bigInt(2).pow(8);\n  let i = 0;\n  switch (9 - data.length) {\n    case 1:\n      res = res.add(data[i++]);\n    case 2:\n      res = res.multiply(twopow8).add(data[i++]);\n    case 3:\n      res = res.multiply(twopow8).add(data[i++]);\n    case 4:\n      res = res.multiply(twopow8).add(data[i++]);\n    case 5:\n      res = res.multiply(twopow8).add(data[i++]);\n    case 6:\n      res = res.multiply(twopow8).add(data[i++]);\n    case 7:\n      res = res.multiply(twopow8).add(data[i++]);\n    case 8:\n      res = res.multiply(twopow8).add(data[i++]);\n      break;\n    default:\n      throw Error(\"Impossible condition\");\n  }\n  return res;\n}\n\nfunction uint64ToBe8(num: { remainder: (arg0: any) => any; divide: (arg0: any) => any; }, size: number | Iterable<number>) {\n  const res = new Uint8Array(size as number);\n  if (size < 1 || size > 8) {\n    throw Error(\"Invalid input length\");\n  }\n  const twopow8 = bigInt(2).pow(8);\n  for (let i = (size as number) - 1; i >= 0; i--) {\n    res[i] = parseInt(num.remainder(twopow8).toString(), 10);\n    num = num.divide(twopow8);\n  }\n  return res;\n}\n\nb58.encodeBlock = (data: string | any[], buf: { [x: string]: number; }, index: number) => {\n  if (data.length < 1 || data.length > fullEncodedBlockSize) {\n    throw Error(\"Invalid block length: \" + data.length);\n  }\n  let num = uint8BeTo64(data);\n  let i = encodedBlockSizes[data.length] - 1;\n  // while num > 0\n  while (num.compare(0) === 1) {\n    const div = num.divmod(alphabetSize);\n    // remainder = num % alphabetSize\n    const remainder = div.remainder;\n    // num = num / alphabetSize\n    num = div.quotient;\n    buf[index + i] = alphabet[parseInt(remainder.toString(), 10)];\n    i--;\n  }\n  return buf;\n};\n\nb58.decodeBlock = (data: string | any[], buf: { set: (arg0: Uint8Array, arg1: any) => void; }, index: any) => {\n  if (data.length < 1 || data.length > fullEncodedBlockSize) {\n    throw Error(\"Invalid block length: \" + data.length);\n  }\n\n  const resSize = encodedBlockSizes.indexOf(data.length);\n  if (resSize <= 0) {\n    throw Error(\"Invalid block size\");\n  }\n  let resNum = bigInt(0);\n  let order = bigInt(1);\n  for (let i = data.length - 1; i >= 0; i--) {\n    const digit = alphabet.indexOf(data[i]);\n    if (digit < 0) {\n      throw Error(\"Invalid symbol\");\n    }\n    const product = order.multiply(digit).add(resNum);\n    // if product > UINT64MAX(bigInt(2).pow(64))\n    if (product.compare(bigInt(2).pow(64)) === 1) {\n      throw Error(\"Overflow\");\n    }\n    resNum = product;\n    order = order.multiply(alphabetSize);\n  }\n  if (\n    resSize < fullBlockSize &&\n    bigInt(2).pow(8 * resSize).compare(resNum) <= 0\n  ) {\n    throw Error(\"Overflow 2\");\n  }\n  buf.set(uint64ToBe8(resNum, resSize), index);\n  return buf;\n};\n\nexport function xmrAddressEncoder(data: Buffer): string {\n  const bin = hexToBin(data.toString('hex'));\n  if (bin.length === 0) {\n    throw Error('Unrecognised address format');\n  }\n  const fullBlockCount = Math.floor(bin.length / fullBlockSize);\n  const lastBlockSize = bin.length % fullBlockSize;\n  const resSize =\n    fullBlockCount * fullEncodedBlockSize +\n    encodedBlockSizes[lastBlockSize];\n\n  let res = new Uint8Array(resSize);\n  let i;\n  for (i = 0; i < resSize; ++i) {\n    res[i] = alphabet[0];\n  }\n  for (i = 0; i < fullBlockCount; i++) {\n    res = b58.encodeBlock(\n      bin.subarray(\n        i * fullBlockSize,\n        i * fullBlockSize + fullBlockSize,\n      ),\n      res,\n      i * fullEncodedBlockSize,\n    );\n  }\n  if (lastBlockSize > 0) {\n    res = b58.encodeBlock(\n      bin.subarray(\n        fullBlockCount * fullBlockSize,\n        fullBlockCount * fullBlockSize + lastBlockSize,\n      ),\n      res,\n      fullBlockCount * fullEncodedBlockSize,\n    );\n  }\n  return binToStr(res);\n};\n\nexport function xmrAddressDecoder(data: string): Buffer {\n  const bin = strToBin(data);\n  if (bin.length === 0) {\n    throw Error('Unrecognised address format');\n  }\n  const fullBlockCount = Math.floor(bin.length / fullEncodedBlockSize);\n  const lastBlockSize = bin.length % fullEncodedBlockSize;\n  const lastBlockDecodedSize = encodedBlockSizes.indexOf(\n    lastBlockSize,\n  );\n  if (lastBlockDecodedSize < 0) {\n    throw Error(\"Invalid encoded length\");\n  }\n  const dataSize =\n    fullBlockCount * fullBlockSize + lastBlockDecodedSize;\n  let dataU = new Uint8Array(dataSize);\n  for (let i = 0; i < fullBlockCount; i++) {\n    dataU = b58.decodeBlock(\n      bin.subarray(\n        i * fullEncodedBlockSize,\n        i * fullEncodedBlockSize + fullEncodedBlockSize,\n      ),\n      dataU,\n      i * fullBlockSize,\n    );\n  }\n  if (lastBlockSize > 0) {\n    dataU = b58.decodeBlock(\n      bin.subarray(\n        fullBlockCount * fullEncodedBlockSize,\n        fullBlockCount * fullEncodedBlockSize +\n        lastBlockSize,\n      ),\n      dataU,\n      fullBlockCount * fullBlockSize,\n    );\n  }\n  return Buffer.from(binToHex(dataU), 'hex');\n};","// From https://github.com/nimiq/hub/blob/695131352e5ba58032da744c6f3938cea2894c53/src/lib/AddressUtils.ts\n// https://nimiq-network.github.io/developer-reference/chapters/primitives.html#address\n\n/* tslint:disable:no-bitwise */\n\nconst CCODE = 'NQ';\nconst BASE32_ALPHABET_NIMIQ = '0123456789ABCDEFGHJKLMNPQRSTUVXY';\n\nfunction nimqCheck(str: string, ccode: string): string {\n  function _ibanCheck(data: string): number {\n    const num = data\n      .split('')\n      .map(c => {\n        const code = c.toUpperCase().charCodeAt(0);\n        return code >= 48 && code <= 57 ? c : (code - 55).toString();\n      })\n      .join('');\n    let tmp = '';\n\n    for (let i = 0; i < Math.ceil(num.length / 6); i++) {\n      tmp = (parseInt(tmp + num.substr(i * 6, 6), 10) % 97).toString();\n    }\n\n    return parseInt(tmp, 10);\n  }\n\n  return ('00' + (98 - _ibanCheck(str + ccode + '00'))).slice(-2);\n}\n\nfunction toBase32(buf: Buffer, alphabet = BASE32_ALPHABET_NIMIQ): string {\n  let shift = 3;\n  let carry = 0;\n  let byte;\n  let symbol;\n  let i;\n  let res = '';\n\n  for (i = 0; i < buf.length; i++) {\n    byte = buf[i];\n    symbol = carry | (byte >> shift);\n    res += alphabet[symbol & 0x1f];\n\n    if (shift > 5) {\n      shift -= 5;\n      symbol = byte >> shift;\n      res += alphabet[symbol & 0x1f];\n    }\n\n    shift = 5 - shift;\n    carry = byte << shift;\n    shift = 8 - shift;\n  }\n\n  if (shift !== 3) {\n    res += alphabet[carry & 0x1f];\n  }\n\n  while (res.length % 8 !== 0 && alphabet.length === 33) {\n    res += alphabet[32];\n  }\n\n  return res;\n}\n\nfunction fromBase32(base32: string, alphabet = BASE32_ALPHABET_NIMIQ): Buffer {\n  const charmap: { [key: string]: number } = {};\n  alphabet\n    .toUpperCase()\n    .split('')\n    .forEach((c, i) => {\n      if (!(c in charmap)) {\n        charmap[c] = i;\n      }\n    });\n\n  let symbol;\n  let shift = 8;\n  let carry = 0;\n  const buf = [];\n\n  base32\n    .toUpperCase()\n    .split('')\n    .forEach(char => {\n      // ignore padding\n      if (alphabet.length === 33 && char === alphabet[32]) {\n        return;\n      }\n\n      symbol = charmap[char] & 0xff;\n\n      shift -= 5;\n      if (shift > 0) {\n        carry |= symbol << shift;\n      } else if (shift < 0) {\n        buf.push(carry | (symbol >> -shift));\n        shift += 8;\n        carry = (symbol << shift) & 0xff;\n      } else {\n        buf.push(carry | symbol);\n        shift = 8;\n        carry = 0;\n      }\n    });\n\n  if (shift !== 8 && carry !== 0) {\n    buf.push(carry);\n  }\n\n  return Buffer.from(buf);\n}\n\nexport function nimqDecoder(data: string): Buffer {\n  if (!data.startsWith(CCODE)) {\n    throw Error('Unrecognised address format');\n  }\n  const addr = data.replace(/ /g, '');\n  const check = addr.slice(2, 4);\n  const base32Part = addr.slice(4);\n\n  if (check !== nimqCheck(base32Part, CCODE)) {\n    throw Error('Unrecognised address format');\n  }\n\n  return fromBase32(base32Part);\n}\n\nexport function nimqEncoder(data: Buffer): string {\n  const base32Part = toBase32(data);\n  const check = nimqCheck(base32Part, CCODE);\n  return (CCODE + check + base32Part).replace(/.{4}/g, '$& ').trim();\n}\n","import { bech32, bech32m } from 'bech32';\nconst {\n  decode: bech32Decode,\n  encode:  bech32Encode,\n  fromWords: bech32FromWords,\n  toWords: bech32ToWords\n} = bech32;\nimport bigInt from 'big-integer';\nimport { blake2b, blake2bHex } from 'blakejs';\nimport { decode as bs58DecodeNoCheck, encode as bs58EncodeNoCheck } from 'bs58';\n// @ts-ignore\nimport {\n  b32decode,\n  b32encode,\n  bs58Decode,\n  bs58Encode,\n  cashaddrDecode,\n  cashaddrEncode,\n  codec as xrpCodec,\n  decodeCheck as decodeEd25519PublicKey,\n  encodeCheck as encodeEd25519PublicKey,\n  eosPublicKey,\n  hex2a,\n  isValid as isValidXemAddress,\n  isValidChecksumAddress as rskIsValidChecksumAddress,\n  ss58Decode,\n  ss58Encode,\n  stripHexPrefix as rskStripHexPrefix,\n  toChecksumAddress as rskToChecksumAddress,\n} from 'crypto-addr-codec';\nimport { crc32 } from 'js-crc';\nimport { sha512_256 } from 'js-sha512';\nimport { decode as nanoBase32Decode, encode as nanoBase32Encode } from 'nano-base32';\nimport { Keccak, SHA3 } from 'sha3';\nimport { c32checkDecode, c32checkEncode } from './blockstack/stx-c32';\nimport { decode as cborDecode, encode as cborEncode, TaggedValue } from './cbor/cbor';\nimport { filAddrDecoder, filAddrEncoder } from './filecoin/index';\nimport { ChainID, isValidAddress } from './flow/index';\nimport { groestl_2 }  from './groestl-hash-js/index';\nimport { xmrAddressDecoder, xmrAddressEncoder } from './monero/xmr-base58';\nimport { nimqDecoder, nimqEncoder } from './nimq';\nconst SLIP44_MSB = 0x80000000\ntype EnCoder = (data: Buffer) => string;\ntype DeCoder = (data: string) => Buffer;\n\ntype base58CheckVersion = number[]\n\nexport interface IFormat {\n  coinType: number;\n  name: string;\n  encoder: (data: Buffer) => string;\n  decoder: (data: string) => Buffer;\n}\n\n// Support version field of more than one byte (e.g. Zcash)\nfunction makeBitcoinBase58CheckEncoder(p2pkhVersion: base58CheckVersion, p2shVersion: base58CheckVersion): (data: Buffer) => string {\n  return (data: Buffer) => {\n    let addr: Buffer;\n    switch (data.readUInt8(0)) {\n      case 0x76: // P2PKH: OP_DUP OP_HASH160 <pubKeyHash> OP_EQUALVERIFY OP_CHECKSIG\n        if (\n          data.readUInt8(1) !== 0xa9 ||\n          data.readUInt8(data.length - 2) !== 0x88 ||\n          data.readUInt8(data.length - 1) !== 0xac\n        ) {\n          throw Error('Unrecognised address format');\n        }\n        addr = Buffer.concat([Buffer.from(p2pkhVersion), data.slice(3, 3 + data.readUInt8(2))]);\n        // @ts-ignore\n        return bs58Encode(addr);\n      case 0xa9: // P2SH: OP_HASH160 <scriptHash> OP_EQUAL\n        if (data.readUInt8(data.length - 1) !== 0x87) {\n          throw Error('Unrecognised address format');\n        }\n        addr = Buffer.concat([Buffer.from(p2shVersion), data.slice(2, 2 + data.readUInt8(1))]);\n        return bs58Encode(addr);\n      default:\n        throw Error('Unrecognised address format');\n    }\n  };\n}\n\n// Supports version field of more than one byte\n// NOTE: Assumes all versions in p2pkhVersions[] or p2shVersions[] will have the same length\nfunction makeBitcoinBase58CheckDecoder(p2pkhVersions: base58CheckVersion[], p2shVersions: base58CheckVersion[]): (data: string) => Buffer {\n  return (data: string) => {\n    const addr = bs58Decode(data);\n\n    // Checks if the first addr bytes are exactly equal to provided version field\n    const checkVersion = (version: base58CheckVersion) => {\n      return version.every((value: number, index: number) => index < addr.length && value === addr.readUInt8(index))\n    }\n    if (p2pkhVersions.some(checkVersion)) {\n      return Buffer.concat([Buffer.from([0x76, 0xa9, 0x14]), addr.slice(p2pkhVersions[0].length), Buffer.from([0x88, 0xac])]);\n    } else if (p2shVersions.some(checkVersion)) {\n      return Buffer.concat([Buffer.from([0xa9, 0x14]), addr.slice(p2shVersions[0].length), Buffer.from([0x87])]);\n    }\n    throw Error('Unrecognised address format');\n  };\n}\n\nconst bitcoinBase58Chain = (name: string, coinType: number, p2pkhVersions: base58CheckVersion[], p2shVersions: base58CheckVersion[]) => ({\n  coinType,\n  decoder: makeBitcoinBase58CheckDecoder(p2pkhVersions, p2shVersions),\n  encoder: makeBitcoinBase58CheckEncoder(p2pkhVersions[0], p2shVersions[0]),\n  name,\n});\n\nfunction makeBech32SegwitEncoder(hrp: string): (data: Buffer) => string {\n  return (data: Buffer) => {\n    let version = data.readUInt8(0);\n    if (version >= 0x51 && version <= 0x60) {\n      version -= 0x50;\n    } else if (version !== 0x00) {\n      throw Error('Unrecognised address format');\n    }\n\n    const words = [version].concat(bech32ToWords(data.slice(2, data.readUInt8(1) + 2)));\n    return bech32Encode(hrp, words);\n  };\n}\n\nfunction makeBech32SegwitDecoder(hrp: string): (data: string) => Buffer {\n  return (data: string) => {\n    const { prefix, words } = bech32Decode(data);\n    if (prefix !== hrp) {\n      throw Error('Unexpected human-readable part in bech32 encoded address');\n    }\n    const script = bech32FromWords(words.slice(1));\n    let version = words[0];\n    if (version > 0) {\n      version += 0x50;\n    }\n    return Buffer.concat([Buffer.from([version, script.length]), Buffer.from(script)]);\n  };\n}\n\nfunction makeBitcoinEncoder(hrp: string, p2pkhVersion: base58CheckVersion, p2shVersion: base58CheckVersion): (data: Buffer) => string {\n  const encodeBech32 = makeBech32SegwitEncoder(hrp);\n  const encodeBase58Check = makeBitcoinBase58CheckEncoder(p2pkhVersion, p2shVersion);\n  return (data: Buffer) => {\n    try {\n      return encodeBase58Check(data);\n    } catch {\n      return encodeBech32(data);\n    }\n  };\n}\n\nfunction makeBitcoinDecoder(hrp: string, p2pkhVersions: base58CheckVersion[], p2shVersions: base58CheckVersion[]): (data: string) => Buffer {\n  const decodeBech32 = makeBech32SegwitDecoder(hrp);\n  const decodeBase58Check = makeBitcoinBase58CheckDecoder(p2pkhVersions, p2shVersions);\n  return (data: string) => {\n    if (data.toLowerCase().startsWith(hrp + '1')) {\n      return decodeBech32(data);\n    } else {\n      return decodeBase58Check(data);\n    }\n  };\n}\n\nconst bitcoinChain = (\n  name: string,\n  coinType: number,\n  hrp: string,\n  p2pkhVersions: base58CheckVersion[],\n  p2shVersions: base58CheckVersion[],\n) => ({\n  coinType,\n  decoder: makeBitcoinDecoder(hrp, p2pkhVersions, p2shVersions),\n  encoder: makeBitcoinEncoder(hrp, p2pkhVersions[0], p2shVersions[0]),\n  name,\n});\n\n// Similar to makeBitcoinEncoder but:\n// - Uses Bech32 without SegWit https://zips.z.cash/zip-0173\n// - Supports version field of more than one byte\nfunction makeZcashEncoder(hrp: string, p2pkhVersion: base58CheckVersion, p2shVersion: base58CheckVersion): (data: Buffer) => string {\n  const encodeBech32 = makeBech32Encoder(hrp);\n  const encodeBase58Check = makeBitcoinBase58CheckEncoder(p2pkhVersion, p2shVersion);\n  return (data: Buffer) => {\n    try {\n      return encodeBase58Check(data);\n    } catch {\n      return encodeBech32(data);\n    }\n  };\n}\n\n// Similar to makeBitcoinDecoder but uses makeZcashBase58CheckDecoder to support version field of more than one byte\nfunction makeZcashDecoder(hrp: string, p2pkhVersions: base58CheckVersion[], p2shVersions: base58CheckVersion[]): (data: string) => Buffer {\n  const decodeBase58Check = makeBitcoinBase58CheckDecoder(p2pkhVersions, p2shVersions);\n  const decodeBech32 = makeBech32Decoder(hrp);\n  return (data: string) => {\n    if (data.toLowerCase().startsWith(hrp)) {\n      return decodeBech32(data);\n    } else {\n      return decodeBase58Check(data);\n    }\n  };\n}\n\nconst zcashChain = (\n  name: string,\n  coinType: number,\n  hrp: string,\n  p2pkhVersions: base58CheckVersion[],\n  p2shVersions: base58CheckVersion[],\n) => ({\n  coinType,\n  decoder: makeZcashDecoder(hrp, p2pkhVersions, p2shVersions),\n  encoder: makeZcashEncoder(hrp, p2pkhVersions[0], p2shVersions[0]),\n  name,\n});\n\nfunction encodeCashAddr(data: Buffer): string {\n  switch (data.readUInt8(0)) {\n    case 0x76: // P2PKH: OP_DUP OP_HASH160 <pubKeyHash> OP_EQUALVERIFY OP_CHECKSIG\n      if (\n        data.readUInt8(1) !== 0xa9 ||\n        data.readUInt8(data.length - 2) !== 0x88 ||\n        data.readUInt8(data.length - 1) !== 0xac\n      ) {\n        throw Error('Unrecognised address format');\n      }\n      return cashaddrEncode('bitcoincash', 0, data.slice(3, 3 + data.readUInt8(2)));\n    case 0xa9: // P2SH: OP_HASH160 <scriptHash> OP_EQUAL\n      if (data.readUInt8(data.length - 1) !== 0x87) {\n        throw Error('Unrecognised address format');\n      }\n      return cashaddrEncode('bitcoincash', 1, data.slice(2, 2 + data.readUInt8(1)));\n    default:\n      throw Error('Unrecognised address format');\n  }\n}\n\nfunction makeCardanoEncoder(hrp: string): (data: Buffer) => string {\n  const encodeByron = makeCardanoByronEncoder();\n  const encodeBech32 = makeBech32Encoder(hrp, 104);\n  return (data: Buffer) => {\n    try {\n      return encodeByron(data);\n    } catch {\n      return encodeBech32(data);\n    }\n  }\n}\n\nfunction makeCardanoDecoder(hrp: string): (data: string) => Buffer {\n  const decodeByron = makeCardanoByronDecoder();\n  const decodeBech32 = makeBech32Decoder(hrp, 104);\n  return (data: string) => {\n    if (data.toLowerCase().startsWith(hrp)) {\n      return decodeBech32(data);\n    } else {\n      return decodeByron(data);\n    }\n  };\n}\n\nfunction makeCardanoByronEncoder() {\n  return (data: Buffer) => {\n    const checksum = crc32(data);\n    const taggedValue = new TaggedValue(data.buffer.slice(data.byteOffset, data.byteOffset + data.byteLength), 24);\n\n    const cborEncodedAddress = cborEncode([taggedValue, parseInt(checksum, 16)]);\n\n    const address = bs58EncodeNoCheck(Buffer.from(cborEncodedAddress));\n\n    if (!address.startsWith('Ae2') && !address.startsWith('Ddz')) {\n      throw Error('Unrecognised address format');\n    }\n\n    return address;\n   };\n}\n\nfunction makeCardanoByronDecoder() {\n  return (data: string) => {\n    const bytes = bs58DecodeNoCheck(data);\n    const bytesAb = bytes.buffer.slice(bytes.byteOffset, bytes.byteOffset + bytes.byteLength);\n\n    const cborDecoded = cborDecode(bytesAb);\n\n    const taggedAddr = cborDecoded[0];\n    if(taggedAddr === undefined) {\n      throw Error('Unrecognised address format');\n    }\n\n    const addrChecksum = cborDecoded[1];\n    const calculatedChecksum = crc32(taggedAddr.value);\n\n    if(parseInt(calculatedChecksum, 16) !== addrChecksum) {\n      throw Error('Unrecognised address format');\n    }\n\n    return Buffer.from(taggedAddr.value);\n  };\n}\n\n\nconst cardanoChain = (\n  name: string,\n  coinType: number,\n  hrp: string,\n) => ({\n  coinType,\n  decoder: makeCardanoDecoder(hrp),\n  encoder: makeCardanoEncoder(hrp),\n  name,\n});\n\nfunction decodeNearAddr(data: string): Buffer {\n  const regex = /(^(([a-z\\d]+[\\-_])*[a-z\\d]+\\.)*([a-z\\d]+[\\-_])*[a-z\\d]+$)/g;\n  if(!regex.test(data)) {\n    throw Error('Invalid address string');\n  } else {\n    if(data.length > 64 || data.length < 2) {\n      throw Error('Invalid address format');\n    }\n    return Buffer.from(data);\n  }\n}\n\nfunction encodeNearAddr(data: Buffer): string {\n  const ndata = data.toString();\n  if(ndata.length > 64 || ndata.length < 2) {\n    throw Error('Invalid address format');\n  }\n  return ndata;\n}\n\nfunction decodeCashAddr(data: string): Buffer {\n  const { prefix, type, hash } = cashaddrDecode(data);\n  if (type === 0) {\n    return Buffer.concat([Buffer.from([0x76, 0xa9, 0x14]), Buffer.from(hash), Buffer.from([0x88, 0xac])]);\n  } else if (type === 1) {\n    return Buffer.concat([Buffer.from([0xa9, 0x14]), Buffer.from(hash), Buffer.from([0x87])]);\n  }\n  throw Error('Unrecognised address format');\n}\n\nfunction decodeBitcoinCash(data: string): Buffer {\n  const decodeBase58Check = makeBitcoinBase58CheckDecoder([[0x00]], [[0x05]]);\n  try {\n    return decodeBase58Check(data);\n  } catch {\n    return decodeCashAddr(data);\n  }\n}\n\nfunction grsCheckSumFn(buffer: Buffer): Buffer{\n  const rtn : string = groestl_2(buffer, 1, 1) as string\n  return Buffer.from(rtn)\n}\n\nfunction bs58grscheckEncode(payload:Buffer): string {\n  const checksum = grsCheckSumFn(payload)\n  return bs58EncodeNoCheck(Buffer.concat([\n    payload,\n    checksum\n  ], payload.length + 4))\n}\n// Lifted from https://github.com/ensdomains/address-encoder/pull/239/commits/4872330fba558730108d7f1e0d197cfef3dd9ca6\n// https://github.com/groestlcoin/bs58grscheck\nfunction decodeRaw (buffer: Buffer): Buffer {\n  const payload = buffer.slice(0, -4)\n  const checksum = buffer.slice(-4)\n  const newChecksum = grsCheckSumFn(payload)\n  /* tslint:disable:no-bitwise */\n  if (checksum[0] ^ newChecksum[0] |\n      checksum[1] ^ newChecksum[1] |\n      checksum[2] ^ newChecksum[2] |\n      checksum[3] ^ newChecksum[3]) {return Buffer.from([])};\n  /* tslint:enable:no-bitwise */\n  return payload\n}\n\nfunction bs58grscheckDecode(str: string): Buffer {\n  const buffer = bs58DecodeNoCheck(str);\n  const payload = decodeRaw(buffer)\n  if (payload.length === 0) {throw new Error('Invalid checksum');}\n  return payload\n}\n\nfunction makeBase58GrsCheckEncoder(p2pkhVersion: base58CheckVersion, p2shVersion: base58CheckVersion): (data: Buffer) => string {\n  return (data: Buffer) => {\n    let addr: Buffer;\n    switch (data.readUInt8(0)) {\n      case 0x76: // P2PKH: OP_DUP OP_HASH160 <pubKeyHash> OP_EQUALVERIFY OP_CHECKSIG\n        if (\n          data.readUInt8(1) !== 0xa9 ||\n          data.readUInt8(data.length - 2) !== 0x88 ||\n          data.readUInt8(data.length - 1) !== 0xac\n        ) {\n          throw Error('Unrecognised address format');\n        }\n        addr = Buffer.concat([Buffer.from(p2pkhVersion), data.slice(3, 3 + data.readUInt8(2))]);\n        return bs58grscheckEncode(addr);\n      case 0xa9: // P2SH: OP_HASH160 <scriptHash> OP_EQUAL\n        if (data.readUInt8(data.length - 1) !== 0x87) {\n          throw Error('Unrecognised address format');\n        }\n        addr = Buffer.concat([Buffer.from(p2shVersion), data.slice(2, 2 + data.readUInt8(1))]);\n        return bs58grscheckEncode(addr);\n      default:\n        throw Error('Unrecognised address format');\n    }\n  };\n}\n\nfunction makeBase58GrsCheckDecoder(p2pkhVersions: base58CheckVersion[], p2shVersions: base58CheckVersion[]): (data: string) => Buffer {\n  return (data: string) => {\n    const addr = bs58grscheckDecode(data);\n    const checkVersion = (version: base58CheckVersion) => {\n      return version.every((value: number, index: number) => index < addr.length && value === addr.readUInt8(index))\n    }\n    if (p2pkhVersions.some(checkVersion)) {\n      return Buffer.concat([Buffer.from([0x76, 0xa9, 0x14]), addr.slice(p2pkhVersions[0].length), Buffer.from([0x88, 0xac])]);\n    } else if (p2shVersions.some(checkVersion)) {\n      return Buffer.concat([Buffer.from([0xa9, 0x14]), addr.slice(p2shVersions[0].length), Buffer.from([0x87])]);\n    }\n    throw Error('Unrecognised address format');\n  };\n}\n\nfunction makeGroestlcoinEncoder(hrp: string, p2pkhVersion: base58CheckVersion, p2shVersion: base58CheckVersion): (data: Buffer) => string {\n  const encodeBech32 = makeBech32SegwitEncoder(hrp);\n  const encodeBase58Check = makeBase58GrsCheckEncoder(p2pkhVersion, p2shVersion);\n  return (data: Buffer) => {\n    try {\n      return encodeBase58Check(data);\n    } catch {\n      return encodeBech32(data);\n    }\n  };\n}\n\nfunction makeGroestlcoinDecoder(hrp: string, p2pkhVersions: base58CheckVersion[], p2shVersions: base58CheckVersion[]): (data: string) => Buffer {\n  const decodeBech32 = makeBech32SegwitDecoder(hrp);\n  const decodeBase58Check = makeBase58GrsCheckDecoder(p2pkhVersions, p2shVersions);\n  return (data: string) => {\n    if (data.toLowerCase().startsWith(hrp + '1')) {\n      return decodeBech32(data);\n    } else {\n      return decodeBase58Check(data);\n    }\n  };\n}\n\nconst groestlcoinChain = (\n  name: string,\n  coinType: number,\n  hrp: string,\n  p2pkhVersions: base58CheckVersion[],\n  p2shVersions: base58CheckVersion[],\n) => ({\n  coinType,\n  decoder: makeGroestlcoinDecoder(hrp, p2pkhVersions, p2shVersions),\n  encoder: makeGroestlcoinEncoder(hrp, p2pkhVersions[0], p2shVersions[0]),\n  name,\n});\n\nfunction makeChecksummedHexEncoder(chainId?: number) {\n  return (data: Buffer) => rskToChecksumAddress(data.toString('hex'), chainId || null);\n}\n\nfunction makeChecksummedHexDecoder(chainId?: number) {\n  return (data: string) => {\n    const stripped = rskStripHexPrefix(data);\n    if (\n      !rskIsValidChecksumAddress(data, chainId || null) &&\n      stripped !== stripped.toLowerCase() &&\n      stripped !== stripped.toUpperCase()\n    ) {\n      throw Error('Invalid address checksum');\n    }\n    return Buffer.from(rskStripHexPrefix(data), 'hex');\n  };\n}\n\nconst hexChecksumChain = (name: string, coinType: number, chainId?: number) => ({\n  coinType,\n  decoder: makeChecksummedHexDecoder(chainId),\n  encoder: makeChecksummedHexEncoder(chainId),\n  name,\n});\n\n/* tslint:disable:no-bitwise */\nexport const convertEVMChainIdToCoinType = (chainId: number) =>{\n  return  (SLIP44_MSB | chainId) >>> 0\n}\n\n/* tslint:disable:no-bitwise */\nexport const convertCoinTypeToEVMChainId = (coinType: number) =>{\n  return  ((SLIP44_MSB -1) & coinType) >> 0\n}\n\nconst evmChain = (name: string, coinType: number) => ({\n  coinType: convertEVMChainIdToCoinType(coinType),\n  decoder: makeChecksummedHexDecoder(),\n  encoder: makeChecksummedHexEncoder(),\n  name,\n});\n\nfunction makeBech32Encoder(prefix: string, limit?: number) {\n  return (data: Buffer) => bech32Encode(prefix, bech32ToWords(data), limit);\n}\n\nfunction makeBech32Decoder(currentPrefix: string, limit?: number) {\n  return (data: string) => {\n    const { prefix, words } = bech32Decode(data, limit);\n    if (prefix !== currentPrefix) {\n      throw Error('Unrecognised address format');\n    }\n    return Buffer.from(bech32FromWords(words));\n  };\n}\n\nconst bech32Chain = (name: string, coinType: number, prefix: string, limit?: number) => ({\n  coinType,\n  decoder: makeBech32Decoder(prefix, limit),\n  encoder: makeBech32Encoder(prefix, limit),\n  name,\n});\n\nfunction makeIotaBech32Encoder(prefix: string, limit?: number) {\n  const bufferAddrVersion = Buffer.from([0o0]);\n  return (data: Buffer) => bech32Encode(prefix, bech32ToWords(Buffer.concat([bufferAddrVersion, data])), limit);\n}\n\nfunction makeIotaBech32Decoder(currentPrefix: string, limit?: number) {\n  return (data: string) => {\n    const { prefix, words } = bech32Decode(data, limit);\n    if (prefix !== currentPrefix) {\n      throw Error('Unrecognised address format');\n    }\n    return Buffer.from(bech32FromWords(words)).slice(1);\n  };\n}\n\nfunction makeBech32mEncoder(prefix: string, limit?: number) {\n  return (data: Buffer) => bech32m.encode(prefix, bech32m.toWords(data), limit);\n}\nfunction makeBech32mDecoder(currentPrefix: string, limit?: number) {\n  return (data: string) => {\n    const { prefix, words } = bech32m.decode(data, limit);\n    if (prefix !== currentPrefix) {\n      throw Error('Unrecognised address format');\n    }\n    return Buffer.from(bech32m.fromWords(words));\n  };\n}\nconst bech32mChain = (name: string, coinType: number, prefix: string, limit?: number) => ({\n  coinType,\n  decoder: makeBech32mDecoder(prefix, limit),\n  encoder: makeBech32mEncoder(prefix, limit),\n  name,\n});\n\nconst iotaBech32Chain = (name: string, coinType: number, prefix: string, limit?: number) => ({\n  coinType,\n  decoder: makeIotaBech32Decoder(prefix, limit),\n  encoder: makeIotaBech32Encoder(prefix, limit),\n  name,\n});\n\nfunction makeEosioEncoder(prefix: string): (data: Buffer) => string {\n  return (data: Buffer) => {\n    if (!eosPublicKey.isValid(data)) {\n      throw Error('Unrecognised address format');\n    }\n    const woPrefix = eosPublicKey.fromHex(data).toString();\n    return woPrefix.replace(/^.{3}/g, prefix);\n  }\n}\n\nfunction makeEosioDecoder(prefix: string): (data: string) => Buffer {\n  return (data: string) => {\n    if (!eosPublicKey.isValid(data)) {\n      throw Error('Unrecognised address format');\n    }\n    const regex = new RegExp(\"^.{\" + prefix.length + \"}\", \"g\");\n    const wPrefix = data.replace(regex, 'EOS');\n    return eosPublicKey(wPrefix).toBuffer();\n  }\n}\n\nconst eosioChain = (name: string, coinType: number, prefix: string) => ({\n  coinType,\n  decoder: makeEosioDecoder(prefix),\n  encoder: makeEosioEncoder(prefix),\n  name,\n});\n\nfunction b32encodeXemAddr(data: Buffer): string {\n  return b32encode(hex2a(data.toString('hex')));\n}\n\nfunction b32decodeXemAddr(data: string): Buffer {\n  if (!isValidXemAddress(data)) {\n    throw Error('Unrecognised address format');\n  }\n  const address = data\n    .toString()\n    .toUpperCase()\n    .replace(/-/g, '');\n  return b32decode(address);\n}\n\nfunction ksmAddrEncoder(data: Buffer): string {\n  return ss58Encode(Uint8Array.from(data), 2);\n}\n\nfunction dotAddrEncoder(data: Buffer): string {\n  return ss58Encode(Uint8Array.from(data), 0);\n}\n\nfunction ksmAddrDecoder(data: string): Buffer {\n  return Buffer.from(ss58Decode(data));\n}\n\nfunction ontAddrEncoder(data: Buffer): string {\n  return bs58Encode(Buffer.concat([Buffer.from([0x17]), data]))\n}\n\nfunction ontAddrDecoder(data: string): Buffer {\n  const address = bs58Decode(data)\n\n  switch (address.readUInt8(0)) {\n   case 0x17:\n     return address.slice(1);\n\n    default:\n      throw Error('Unrecognised address format');\n  }\n}\n\nfunction strDecoder(data: string): Buffer {\n  return decodeEd25519PublicKey('ed25519PublicKey', data);\n}\n\nfunction strEncoder(data: Buffer): string {\n  return encodeEd25519PublicKey('ed25519PublicKey', data);\n}\n\n// Referenced from the followings\n// https://tezos.stackexchange.com/questions/183/base58-encoding-decoding-of-addresses-in-micheline\n// https://tezos.gitlab.io/api/p2p.html?highlight=contract_id#contract-id-22-bytes-8-bit-tag\nfunction tezosAddressEncoder(data: Buffer): string {\n  if (data.length !== 22 && data.length !== 21) {\n    throw Error('Unrecognised address format');\n  }\n\n  let prefix: Buffer;\n  switch (data.readUInt8(0)) {\n    case 0x00:\n      if (data.readUInt8(1) === 0x00) {\n        prefix = Buffer.from([0x06, 0xa1, 0x9f]); // prefix tz1 equal 06a19f\n      } else if (data.readUInt8(1) === 0x01) {\n        prefix = Buffer.from([0x06, 0xa1, 0xa1]); // prefix tz2 equal 06a1a1\n      } else if (data.readUInt8(1) === 0x02) {\n        prefix = Buffer.from([0x06, 0xa1, 0xa4]); // prefix tz3 equal 06a1a4\n      } else {\n        throw Error('Unrecognised address format');\n      }\n      return bs58Encode(Buffer.concat([prefix, data.slice(2)]));\n    case 0x01:\n      prefix = Buffer.from([0x02, 0x5a, 0x79]); // prefix KT1 equal 025a79\n      return bs58Encode(Buffer.concat([prefix, data.slice(1, 21)]));\n    default:\n      throw Error('Unrecognised address format');\n  }\n}\n\nfunction tezosAddressDecoder(data: string): Buffer {\n  const address = bs58Decode(data).slice(3);\n  switch (data.substring(0, 3)) {\n    case 'tz1':\n      return Buffer.concat([Buffer.from([0x00, 0x00]), address]);\n    case 'tz2':\n      return Buffer.concat([Buffer.from([0x00, 0x01]), address]);\n    case 'tz3':\n      return Buffer.concat([Buffer.from([0x00, 0x02]), address]);\n    case 'KT1':\n      return Buffer.concat([Buffer.from([0x01]), address, Buffer.from([0x00])]);\n    default:\n      throw Error('Unrecognised address format');\n  }\n}\n\n// Reference from js library:\n// https://github.com/hashgraph/hedera-sdk-java/blob/120d98ac9cd167db767ed77bb52cefc844b09fc9/src/main/java/com/hedera/hashgraph/sdk/SolidityUtil.java#L26\nfunction hederaAddressEncoder(data: Buffer): string {\n  if (data.length !== 20) {\n    throw Error('Unrecognised address format');\n  }\n\n  const view = new DataView(data.buffer, 0);\n\n  const shard = view.getUint32(0);\n  const realm = view.getBigUint64(4);\n  const account = view.getBigUint64(12);\n\n  return [shard, realm, account].join('.');\n}\n\n// Reference from js library:\n// https://github.com/hashgraph/hedera-sdk-java/blob/120d98ac9cd167db767ed77bb52cefc844b09fc9/src/main/java/com/hedera/hashgraph/sdk/SolidityUtil.java#L26\nfunction hederaAddressDecoder(data: string): Buffer {\n  const buffer = Buffer.alloc(20);\n  const view = new DataView(buffer.buffer, 0, 20);\n\n  const components = data.split('.');\n  if (components.length !== 3) {\n    throw Error('Unrecognised address format');\n  }\n\n  const shard = Number(components[0]);\n  const realm = BigInt(components[1]);\n  const account = BigInt(components[2]);\n\n  view.setUint32(0, shard);\n  view.setBigUint64(4, realm);\n  view.setBigUint64(12, account);\n\n  return buffer;\n}\n\n// Reference from Lisk validator\n// https://github.com/LiskHQ/lisk-sdk/blob/master/elements/lisk-validator/src/validation.ts#L202\nfunction validateLiskAddress(address: string) {\n  if (address.length < 2 || address.length > 22) {\n    throw new Error('Address length does not match requirements. Expected between 2 and 22 characters.');\n  }\n\n  if (address[address.length - 1] !== 'L') {\n    throw new Error('Address format does not match requirements. Expected \"L\" at the end.');\n  }\n\n  if (address.includes('.')) {\n    throw new Error('Address format does not match requirements. Address includes invalid character: `.`.');\n  }\n}\n\nfunction liskAddressEncoder(data: Buffer): string {\n  const address = `${bigInt(data.toString('hex'), 16).toString(10)}L`;\n\n  return address;\n}\n\nfunction liskAddressDecoder(data: string): Buffer {\n  validateLiskAddress(data);\n\n  return Buffer.from(bigInt(data.slice(0, -1)).toString(16), 'hex');\n}\n\nfunction seroAddressEncoder(data: Buffer): string {\n  const address =  bs58EncodeNoCheck(data);\n\n  return address;\n}\n\nfunction seroAddressDecoder(data: string): Buffer {\n  const bytes = bs58DecodeNoCheck(data);\n  if (bytes.length === 96) {\n    return  bytes;\n  }\n  throw Error('Unrecognised address format');\n}\n\n// https://github.com/wanchain/go-wanchain/blob/develop/common/types.go\nfunction wanToChecksumAddress(data: string): string {\n  const strippedData = rskStripHexPrefix(data);\n  const ndata = strippedData.toLowerCase();\n\n  const hashed = new Keccak(256).update(Buffer.from(ndata)).digest();\n  let  ret = '0x';\n  const len = ndata.length;\n  let hashByte;\n  for(let i = 0; i < len; i++) {\n    hashByte = hashed[Math.floor(i / 2)];\n\n    if (i % 2 === 0) {\n      /* tslint:disable:no-bitwise */\n      hashByte = hashByte >> 4;\n    } else {\n      /* tslint:disable:no-bitwise */\n      hashByte &= 0xf;\n      /* tslint:enable:no-bitwise */\n    }\n\n    if(ndata[i] > '9' && hashByte <= 7) {\n      ret += ndata[i].toUpperCase();\n    } else {\n      ret += ndata[i];\n    }\n  }\n  return ret;\n}\n\nfunction isValidChecksumWanAddress(address: string ): boolean {\n  const isValid: boolean = /^0x[0-9a-fA-F]{40}$/.test(address);\n  return isValid && (wanToChecksumAddress(address) === address)\n}\n\nfunction wanChecksummedHexEncoder(data: Buffer): string {\n  return wanToChecksumAddress('0x'+data.toString('hex'));\n}\n\nfunction wanChecksummedHexDecoder(data: string): Buffer {\n  if(isValidChecksumWanAddress(data)) {\n    return Buffer.from(rskStripHexPrefix(data), 'hex');\n\n  } else {\n    throw Error('Invalid address checksum');\n\n  }\n\n}\n\nfunction calcCheckSum(withoutChecksum: Buffer): Buffer {\n  const checksum = (new Keccak(256).update(Buffer.from(blake2b(withoutChecksum, null, 32))).digest()).slice(0, 4);\n  return checksum;\n}\n\nfunction isByteArrayValid(addressBytes: Buffer): boolean {\n  // \"M\" for mainnet, \"T\" for test net. Just limited to mainnet\n  if(addressBytes.readInt8(0) !== 5 || addressBytes.readInt8(1) !== \"M\".charCodeAt(0) || addressBytes.length !== 26) {\n    return false;\n  }\n\n  const givenCheckSum = addressBytes.slice(-4);\n  const generatedCheckSum = calcCheckSum(addressBytes.slice(0 , -4));\n  return givenCheckSum.equals(generatedCheckSum);\n}\n\n// Reference:\n// https://github.com/virtualeconomy/v-systems/blob/master/src/main/scala/vsys/account/Address.scala\nfunction vsysAddressDecoder(data: string): Buffer {\n  let base58String = data;\n  if(data.startsWith('address:')){\n    base58String = data.substr(data.length);\n  }\n  if(base58String.length > 36) {\n    throw new Error('VSYS: Address length should not be more than 36');\n  }\n  const bytes = bs58DecodeNoCheck(base58String);\n\n  if(!isByteArrayValid(bytes)) {\n    throw new Error('VSYS: Invalid checksum');\n  }\n  return bytes;\n}\n\nfunction vsysAddressEncoder(data: Buffer): string {\n  if(!isByteArrayValid(data)) {\n    throw new Error('VSYS: Invalid checksum');\n  }\n  return bs58EncodeNoCheck(data);\n}\n\n// Reference:\n// https://github.com/handshake-org/hsd/blob/c85d9b4c743a9e1c9577d840e1bd20dee33473d3/lib/primitives/address.js#L297\nfunction hnsAddressEncoder(data: Buffer): string {\n  if (data.length !== 20) {\n    throw Error('P2WPKH must be 20 bytes');\n  }\n\n  const version = 0;\n  const words = [version].concat(bech32ToWords(data));\n  return bech32Encode('hs', words);\n}\n\n// Reference:\n// https://github.com/handshake-org/hsd/blob/c85d9b4c743a9e1c9577d840e1bd20dee33473d3/lib/primitives/address.js#L225\nfunction hnsAddressDecoder(data: string): Buffer {\n  const { prefix, words } = bech32Decode(data);\n\n  if (prefix !== 'hs') {\n    throw Error('Unrecognised address format');\n  }\n\n  const version = words[0];\n  const hash = bech32FromWords(words.slice(1));\n\n  if (version !== 0) {\n    throw Error('Bad program version');\n  }\n\n  if (hash.length !== 20) {\n    throw Error('Witness program hash is the wrong size');\n  }\n\n  return Buffer.from(hash);\n}\n\nfunction nasAddressEncoder(data: Buffer): string {\n  const checksum = (new SHA3(256).update(data).digest()).slice(0, 4);\n\n  return bs58EncodeNoCheck(Buffer.concat([data, checksum]));\n}\n\nfunction nasAddressDecoder(data: string): Buffer {\n  const buf = bs58DecodeNoCheck(data);\n\n  if(buf.length !== 26 || buf[0] !== 25 || (buf[1] !== 87 && buf[1] !== 88)){\n    throw Error('Unrecognised address format');\n  }\n\n  const bufferData = buf.slice(0, 22);\n  const checksum = buf.slice(-4);\n  const checksumVerify = (new SHA3(256).update(bufferData).digest()).slice(0, 4);\n\n  if(!checksumVerify.equals(checksum)) {\n    throw Error('Invalid checksum');\n  }\n\n  return bufferData;\n}\n\n// Referenced from following\n// https://github.com/icon-project/icon-service/blob/master/iconservice/base/address.py#L219\nfunction icxAddressEncoder(data: Buffer): string {\n  if (data.length !== 21) {\n    throw Error('Unrecognised address format');\n  }\n  switch (data.readUInt8(0)) {\n    case 0x00:\n      return 'hx' + data.slice(1).toString('hex');\n    case 0x01:\n      return 'cx' + data.slice(1).toString('hex');\n    default:\n      throw Error('Unrecognised address format');\n  }\n}\n\n// Referenced from following\n// https://github.com/icon-project/icon-service/blob/master/iconservice/base/address.py#L238\nfunction icxAddressDecoder(data: string): Buffer {\n  const prefix = data.slice(0, 2)\n  const body = data.slice(2)\n  switch (prefix) {\n    case 'hx':\n      return Buffer.concat([Buffer.from([0x00]), Buffer.from(body, 'hex')]);\n    case 'cx':\n      return Buffer.concat([Buffer.from([0x01]), Buffer.from(body, 'hex')]);\n    default:\n      throw Error('Unrecognised address format');\n  }\n}\n\nfunction hntAddresEncoder(data: Buffer): string {\n  const buf = Buffer.concat([Buffer.from([0]), data]);\n\n  return bs58Encode(buf);\n}\n\nfunction hntAddressDecoder(data: string): Buffer {\n  const buf = bs58Decode(data);\n\n  const version = buf[0];\n  if(version !== 0x00){\n    throw Error('Invalid version byte');\n  }\n\n  return buf.slice(1);\n}\n\nfunction wavesAddressDecoder(data: string): Buffer {\n  const buffer = bs58DecodeNoCheck(data);\n\n  if(buffer[0] !== 1) {\n    throw Error('Bad program version');\n  }\n\n  if (buffer[1] !== 87 || buffer.length !== 26) {\n    throw Error('Unrecognised address format');\n  }\n\n  const bufferData = buffer.slice(0, 22);\n  const checksum = buffer.slice(22, 26);\n  const checksumVerify = (new Keccak(256).update(Buffer.from(blake2b(bufferData, null, 32))).digest()).slice(0, 4);\n\n  if(!checksumVerify.equals(checksum)) {\n    throw Error('Invalid checksum');\n  }\n\n  return buffer;\n\n}\n\nconst glog = [0, 0, 1, 18, 2, 5, 19, 11, 3, 29, 6, 27, 20, 8, 12, 23, 4, 10, 30, 17, 7, 22, 28, 26, 21, 25, 9, 16, 13, 14, 24, 15];\nconst gexp = [1, 2, 4, 8, 16, 5, 10, 20, 13, 26, 17, 7, 14, 28, 29, 31, 27, 19, 3, 6, 12, 24, 21, 15, 30, 25, 23, 11, 22, 9, 18, 1];\nfunction gmult(a: number, b: number): number {\n  if (a === 0 || b === 0) {return 0;}\n\n  return gexp[(glog[a] + glog[b]) % 31];\n}\n\nfunction ardrCheckSum(codeword: number[]): boolean {\n  let sum = 0;\n\n  for (let i = 1; i < 5; i++) {\n    let t = 0;\n    for (let j = 0; j < 31; j++) {\n      if (j > 12 && j < 27) {continue;}\n\n      let pos = j;\n      if (j > 26) {pos -= 14;}\n\n      // tslint:disable-next-line:no-bitwise\n      t ^= gmult(codeword[pos], gexp[(i * j) % 31]);\n\n  }\n    // tslint:disable-next-line:no-bitwise\n    sum |= t;\n\n  }\n  return sum === 0;\n}\n\nconst alphabet = '23456789ABCDEFGHJKLMNPQRSTUVWXYZ';\nconst cwmap = [3, 2, 1, 0, 7, 6, 5, 4, 13, 14, 15, 16, 12, 8, 9, 10, 11];\n\nfunction ardrAddressDecoder(data: string): Buffer {\n  const codeword = [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];\n\n  data = data.replace(/(^\\s+)|(\\s+$)/g, '').toUpperCase();\n  const prefix = data.slice(0, 5);\n  if (prefix !== 'ARDOR' || data.split(\"-\").length !== 5) {\n    throw Error('Unrecognised address format');\n  } else {\n    data = data.substr(data.indexOf(\"-\"));\n  }\n\n  const clean = [];\n  let count = 0;\n\n  for (const char of data) {\n    const pos = alphabet.indexOf(char);\n\n    if (pos >= 0) {\n      clean[count++] = pos;\n      if (count > 17) {\n        throw Error('Unrecognised address format');\n      }\n    }\n  }\n\n  for (let i = 0, j = 0; i < count; i++) {\n    codeword[cwmap[j++]] = clean[i];\n  }\n\n  if (!ardrCheckSum(codeword)) {\n    throw Error('Unrecognised address format');\n  }\n\n  return Buffer.from(codeword);\n}\n\n\nfunction ardrAddressEncoder(data: Buffer): string {\n  const dataStr = data.toString('hex');\n  const arr = [];\n\n  for(let i = 0, j = 0; i < dataStr.length; i = i + 2) {\n    arr[cwmap[j++]] = 16 * parseInt(dataStr[i], 16) + parseInt(dataStr[i + 1], 16);\n  }\n\n  let acc = \"\";\n  const rtn = [];\n  for(let i = 0; i < 17; i++) {\n    if(arr[i] >= alphabet.length || arr.length !== 17) {\n      throw Error('Unrecognised address format');\n    }\n    acc += alphabet[arr[i]];\n\n    if(i < 12 && (i + 1) % 4 === 0 || i === 16 ) {\n      rtn.push(acc);\n      acc = \"\";\n    }\n\n  }\n  return `ARDOR-${rtn.join(\"-\")}`;\n\n}\n\nfunction bcnAddressEncoder(data: Buffer): string {\n  const checksum = (new Keccak(256).update(data).digest()).slice(0, 4);\n\n  return xmrAddressEncoder(Buffer.concat([data, checksum]));\n}\n\nfunction bcnAddressDecoder(data: string): Buffer {\n  const buf = xmrAddressDecoder(data);\n\n  const tag = buf.slice(0, -68).toString('hex');\n\n  if(buf.length < 68 || (tag !== '06' && tag !== 'cef622')) {\n    throw Error('Unrecognised address format');\n  }\n\n  const checksum = buf.slice(-4);\n  const checksumVerify = (new Keccak(256).update(buf.slice(0, -4)).digest()).slice(0, 4);\n\n  if(!checksumVerify.equals(checksum)) {\n    throw Error('Invalid checksum');\n  }\n\n  return buf.slice(0, -4);\n}\n\nconst AlgoChecksumByteLength = 4;\nconst AlgoAddressByteLength = 36;\n\n// Returns 4 last byte (8 chars) of sha512_256(publicKey)\nfunction algoChecksum(pk: Buffer): string {\n  return sha512_256\n    .update(pk)\n    .hex()\n    .substr(-AlgoChecksumByteLength * 2);\n}\n\nfunction algoDecode(data: string): Buffer {\n  const decoded = b32decode(data);\n\n  if (decoded.length !== AlgoAddressByteLength) {\n    throw Error('Unrecognised address format');\n  }\n\n  const publicKey = decoded.slice(0, -AlgoChecksumByteLength);\n  const checksum = decoded.slice(-AlgoChecksumByteLength);\n  const expectedChecksum = algoChecksum(publicKey);\n\n  if (checksum.toString('hex') !== expectedChecksum) {\n    throw Error('Unrecognised address format');\n  }\n\n  return publicKey;\n}\n\nfunction algoEncode(data: Buffer): string {\n  // Calculate publicKey checksum\n  const checksum = algoChecksum(data);\n\n  // Append publicKey and checksum\n  const addr = b32encode(hex2a(data.toString('hex').concat(checksum)));\n\n  // Removing the extra '='\n  const cleanAddr = addr.replace(/=/g, '');\n  return cleanAddr;\n}\n\nfunction arAddressEncoder(data: Buffer): string {\n  return data.toString('base64')\n    .replace(/\\+/g, \"-\")\n    .replace(/\\//g, \"_\")\n    .replace(/\\=/g, \"\");\n}\n\nfunction arAddressDecoder(data: string): Buffer {\n  data = data.replace(/\\-/g, \"+\").replace(/\\_/g, \"/\");\n\n  const padding = data.length % 4 === 0\n    ? 0\n    : 4 - (data.length % 4);\n\n  data = data.concat(\"=\".repeat(padding));\n\n  return Buffer.from(data, 'base64');\n}\n\nfunction bsvAddresEncoder(data: Buffer): string {\n  const buf = Buffer.concat([Buffer.from([0]), data]);\n\n  return bs58Encode(buf);\n}\n\nfunction bsvAddressDecoder(data: string): Buffer {\n  const buf = bs58Decode(data);\n\n  if(buf.length !== 21) {\n    throw Error('Unrecognised address format');\n  }\n\n  const version = buf[0];\n  if(version !== 0x00){\n    throw Error('Invalid version byte');\n  }\n\n  return buf.slice(1);\n}\n\nfunction aeAddressEncoder(data: Buffer): string {\n  return 'ak_' + bs58Encode(data.slice(2));\n}\n\nfunction aeAddressDecoder(data: string): Buffer {\n  return Buffer.concat([Buffer.from('0x'), bs58Decode(data.split('_')[1])]);\n}\n\nfunction arkAddressDecoder(data: string): Buffer {\n  const buffer = bs58Decode(data);\n\n  if (buffer[0] !== 23) {\n    throw Error('Unrecognised address format');\n  }\n\n  return buffer;\n}\n\nfunction nanoAddressEncoder(data: Buffer): string {\n  const encoded = nanoBase32Encode(Uint8Array.from(data));\n  const checksum = blake2b(data, null, 5).reverse();\n  const checksumEncoded = nanoBase32Encode(checksum);\n\n  const address = `nano_${encoded}${checksumEncoded}`;\n\n  return address;\n}\n\nfunction nanoAddressDecoder(data: string): Buffer {\n  const decoded = nanoBase32Decode(data.slice(5));\n\n  return Buffer.from(decoded).slice(0, -5);\n}\n\nfunction etnAddressEncoder(data: Buffer): string {\n  const buf = Buffer.concat([Buffer.from([18]), data]);\n\n  const checksum = (new Keccak(256).update(buf).digest()).slice(0, 4);\n\n  return xmrAddressEncoder(Buffer.concat([buf, checksum]));\n}\n\nfunction etnAddressDecoder(data: string): Buffer {\n  const buf = xmrAddressDecoder(data);\n\n  if(buf[0] !== 18){\n    throw Error('Unrecognised address format');\n  }\n\n  const checksum = buf.slice(65, 69);\n  const checksumVerify = (new Keccak(256).update(buf.slice(0, 65)).digest()).slice(0, 4);\n\n  if(!checksumVerify.equals(checksum)) {\n    throw Error('Invalid checksum');\n  }\n\n  return buf.slice(1, 65);\n}\n\nfunction zenEncoder(data: Buffer): string {\n  if (\n    !data.slice(0, 2).equals(Buffer.from([0x20, 0x89])) && // zn\n    !data.slice(0, 2).equals(Buffer.from([0x1c, 0xb8])) && // t1\n    !data.slice(0, 2).equals(Buffer.from([0x20, 0x96])) && // zs\n    !data.slice(0, 2).equals(Buffer.from([0x1c, 0xbd])) && // t3\n    !data.slice(0, 2).equals(Buffer.from([0x16, 0x9a])) // zc\n  ) {\n    throw Error('Unrecognised address format');\n  }\n\n  return bs58Encode(data);\n}\n\nfunction zenDecoder(data: string): Buffer {\n  if (\n    !data.startsWith('zn') &&\n    !data.startsWith('zs') &&\n    !data.startsWith('zc') &&\n    !data.startsWith('t1') &&\n    !data.startsWith('t3')\n  ) {\n    throw Error('Unrecognised address format');\n  }\n\n  return bs58Decode(data);\n}\n\nfunction aionDecoder(data: string): Buffer {\n  let address = data;\n\n  if (address == null || address.length === 0 || address.length < 64) {\n    throw Error('Unrecognised address format');\n  }\n\n  if (address.startsWith('0x')) {\n    address = address.slice(2);\n  }\n\n  if (address.startsWith('a0')) {\n    if (address.length !== 64 || !address.substring(2).match('^[0-9A-Fa-f]+$')) {\n      throw Error('Unrecognised address format');\n    }\n  }\n\n  return Buffer.from(address, 'hex');\n}\n\nfunction aionEncoder(data: Buffer): string {\n  return '0x'.concat(data.toString('hex'));\n}\n\n// Remove staring zeros from buffer\nfunction flowDecode(data: string): Buffer {\n  if (!isValidAddress(BigInt(data), ChainID.mainnet)) {\n    throw Error('Unrecognised address format');\n  }\n  return Buffer.from(rskStripHexPrefix(data).replace(/^0+/, ''), 'hex');\n}\n\n// https://github.com/onflow/flow-go/blob/master/model/flow/address.go#L51\n// If b is larger than 8, b will be cropped from the left.\n// If b is smaller than 8, b will be appended by zeroes at the front.\nfunction flowEncode(data: Buffer): string {\n  const AddressLength = 8;\n  let addrBytes = Buffer.alloc(AddressLength, 0x00);\n\n  if (data.length > AddressLength) {\n    addrBytes = data.slice(-AddressLength);\n  }\n  data.copy(addrBytes, AddressLength - data.length);\n\n  return '0x' + addrBytes.toString('hex').toLowerCase();\n}\n\n/* tslint:disable:no-bitwise */\nfunction nulsAddressEncoder(data: Buffer): string {\n  const chainId = data[0] & 0xff | (data[1] & 0xff) << 8;\n  const tempBuffer = Buffer.allocUnsafe(data.length + 1);\n\n  let temp = 0;\n  let xor = 0x00;\n  for(let i = 0; i < data.length; i++) {\n    temp = data[i];\n    temp = temp > 127 ? temp - 256 : temp;\n    tempBuffer[i] = temp;\n    xor ^= temp;\n  }\n  tempBuffer[data.length] = xor;\n\n  let prefix = \"\";\n  if(1 === chainId) {\n    prefix = 'NULS';\n  } else if (2 === chainId) {\n    prefix = 'tNULS';\n  } else {\n    const chainIdBuffer = Buffer.concat([Buffer.from([0xFF & chainId >> 0]), Buffer.from([0xFF & chainId >> 8])]);\n    prefix = bs58EncodeNoCheck(chainIdBuffer).toUpperCase();\n  }\n\n  const constant = ['a', 'b', 'c', 'd', 'e'];\n  return prefix + constant[prefix.length - 1] + bs58EncodeNoCheck(tempBuffer);\n}\n\nfunction nulsAddressDecoder(data: string): Buffer {\n  if(data.startsWith('NULS')) {\n    data = data.substring(5);\n  } else if (data.startsWith('tNULS')) {\n    data = data.substring(6);\n  } else {\n    for(let i = 0; i < data.length; i++) {\n      const val = data.charAt(i);\n      if(val.charCodeAt(0) >= 97) {\n        data = data.substring(i + 1);\n        break;\n      }\n    }\n  }\n\n  const bytes = bs58DecodeNoCheck(data);\n\n  let temp = 0;\n  let xor = 0x00;\n  for(let i = 0; i < bytes.length - 1; i++) {\n    temp = bytes[i];\n    temp = temp > 127 ? temp - 256 : temp;\n    bytes[i] = temp;\n    xor ^= temp;\n  }\n\n  if(xor < 0) {\n    xor = 256 + xor;\n  }\n\n  if(xor !== bytes[bytes.length - 1]) {\n    throw Error('Unrecognised address format');\n  }\n\n  return bytes.slice(0, -1);\n}\n/* tslint:enable:no-bitwise */\n\nconst SIA_HASH_SIZE = 32;\nconst SIA_CHECKSUM_SIZE = 6;\nconst SIA_BLAKE2B_LEN = 32;\n\nfunction siaAddressEncoder(data: Buffer): string {\n  const checksum = blake2bHex(data, null, SIA_BLAKE2B_LEN).slice(0, SIA_CHECKSUM_SIZE * 2);\n  return data.toString('hex') + checksum;\n}\n\nfunction siaAddressDecoder(data: string): Buffer {\n  if (data.length !== (SIA_CHECKSUM_SIZE + SIA_HASH_SIZE) * 2) {\n    throw Error('Unrecognised address format');\n  }\n\n  const hash = Buffer.from(data.slice(0, SIA_HASH_SIZE * 2), 'hex');\n  const checksum = data.slice(SIA_HASH_SIZE * 2);\n  const expectedChecksum = blake2bHex(hash, null, SIA_BLAKE2B_LEN).slice(0, SIA_CHECKSUM_SIZE * 2);\n\n  if (checksum !== expectedChecksum) {\n    throw Error('Unrecognised address format');\n  }\n\n  return hash;\n}\n\nconst getConfig = (name: string, coinType: number, encoder: EnCoder, decoder: DeCoder) => {\n  return {\n    coinType,\n    decoder,\n    encoder,\n    name,\n  };\n};\n\n// Ordered by coinType\nexport const formats: IFormat[] = [\n  bitcoinChain('BTC', 0, 'bc', [[0x00]], [[0x05]]),\n  bitcoinChain('LTC', 2, 'ltc', [[0x30]], [[0x32], [0x05]]),\n  bitcoinBase58Chain('DOGE', 3, [[0x1e]], [[0x16]]),\n  bitcoinBase58Chain('RDD', 4, [[0x3d]], [[0x05]]),\n  bitcoinBase58Chain('DASH', 5, [[0x4c]], [[0x10]]),\n  bitcoinBase58Chain('PPC', 6, [[0x37]], [[0x75]]),\n  getConfig('NMC', 7, bs58Encode, bs58Decode),\n  bitcoinBase58Chain('VIA', 14, [[0x47]], [[0x21]]),\n  groestlcoinChain('GRS', 17, 'grs', [[0x24]], [[0x05]]),\n  bitcoinChain('DGB', 20, 'dgb', [[0x1e]], [[0x3f]]),\n  bitcoinChain('MONA', 22, 'mona', [[0x32]], [[0x37], [0x05]]),\n  getConfig('DCR', 42, bs58EncodeNoCheck, bs58DecodeNoCheck),\n  getConfig('XEM', 43, b32encodeXemAddr, b32decodeXemAddr),\n  bitcoinBase58Chain('AIB', 55, [[0x17]], [[0x05]]),\n  bitcoinChain('SYS', 57, 'sys', [[0x3f]], [[0x05]]),\n  hexChecksumChain('ETH', 60),\n  hexChecksumChain('ETC', 61),\n  getConfig('ICX', 74, icxAddressEncoder, icxAddressDecoder),\n  bitcoinBase58Chain('XVG',77, [[0x1E]], [[0x21]]),\n  bitcoinBase58Chain('STRAT', 105, [[0x3F]], [[0x7D]]),\n  getConfig('ARK', 111, bs58Encode, arkAddressDecoder),\n  bech32Chain('ATOM', 118, 'cosmos'),\n  bech32Chain('ZIL', 119, 'zil'),\n  bech32Chain('EGLD', 120, 'erd'),\n  getConfig('ZEN', 121, zenEncoder, zenDecoder),\n  getConfig('XMR', 128, xmrAddressEncoder, xmrAddressDecoder),\n  zcashChain('ZEC', 133, 'zs', [[0x1c, 0xb8]], [[0x1c, 0xbd]]),\n  getConfig('LSK', 134, liskAddressEncoder, liskAddressDecoder),\n  eosioChain('STEEM', 135, 'STM'),\n  bitcoinBase58Chain('FIRO', 136, [[0x52]], [[0x07]]),\n  hexChecksumChain('RSK', 137, 30),\n  bitcoinBase58Chain('KMD', 141, [[0x3C]], [[0x55]]),\n  getConfig('XRP', 144, data => xrpCodec.encodeChecked(data), data => xrpCodec.decodeChecked(data)),\n  getConfig('BCH', 145, encodeCashAddr, decodeBitcoinCash),\n  getConfig('XLM', 148, strEncoder, strDecoder),\n  getConfig('BTM', 153, makeBech32SegwitEncoder('bm'), makeBech32SegwitDecoder('bm')),\n  bitcoinChain('BTG', 156, 'btg', [[0x26]], [[0x17]]),\n  getConfig('NANO', 165, nanoAddressEncoder, nanoAddressDecoder),\n  bitcoinBase58Chain('RVN', 175, [[0x3c]], [[0x7a]]),\n  hexChecksumChain('POA', 178),\n  bitcoinChain('LCC', 192, 'lcc', [[0x1c]], [[0x32], [0x05]]),\n  eosioChain('EOS', 194, 'EOS'),\n  getConfig('TRX', 195, bs58Encode, bs58Decode),\n  getConfig('BCN', 204, bcnAddressEncoder, bcnAddressDecoder),\n  eosioChain('FIO', 235, 'FIO'),\n  getConfig('BSV', 236, bsvAddresEncoder, bsvAddressDecoder),\n  getConfig('NEO', 239, bs58Encode, bs58Decode),\n  getConfig('NIM', 242, nimqEncoder, nimqDecoder),\n  hexChecksumChain('EWT', 246),\n  getConfig('ALGO', 283, algoEncode, algoDecode),\n  getConfig('IOST', 291, bs58EncodeNoCheck, bs58DecodeNoCheck),\n  bitcoinBase58Chain('DIVI', 301, [[0x1e]], [[0xd]]),\n  bech32Chain('IOTX', 304, 'io'),\n  eosioChain('BTS', 308, 'BTS'),\n  bech32Chain('CKB', 309, 'ckb'),\n  bech32Chain('LUNA', 330, 'terra'),\n  getConfig('DOT', 354, dotAddrEncoder, ksmAddrDecoder),\n  getConfig('VSYS', 360, vsysAddressEncoder, vsysAddressDecoder),\n  eosioChain('ABBC', 367, 'ABBC'),\n  getConfig('NEAR', 397, encodeNearAddr, decodeNearAddr),\n  getConfig('ETN', 415, etnAddressEncoder, etnAddressDecoder),\n  getConfig('AION', 425, aionEncoder, aionDecoder),\n  getConfig('KSM', 434, ksmAddrEncoder, ksmAddrDecoder),\n  getConfig('AE', 457, aeAddressEncoder, aeAddressDecoder),\n  bech32Chain('KAVA', 459, 'kava'),\n  getConfig('FIL', 461, filAddrEncoder, filAddrDecoder),\n  getConfig('AR', 472, arAddressEncoder, arAddressDecoder),\n  bitcoinBase58Chain('CCA', 489, [[0x0b]], [[0x05]]),\n  hexChecksumChain('THETA', 500),\n  getConfig('SOL', 501, bs58EncodeNoCheck, bs58DecodeNoCheck),\n  getConfig('XHV', 535, xmrAddressEncoder, xmrAddressDecoder),\n  getConfig('FLOW', 539, flowEncode, flowDecode),\n  bech32Chain('IRIS', 566, 'iaa'),\n  bitcoinBase58Chain('LRG', 568, [[0x1e]], [[0x0d]]),\n  getConfig('SERO', 569, seroAddressEncoder, seroAddressDecoder),\n  getConfig('BDX', 570, xmrAddressEncoder, xmrAddressDecoder),\n  bitcoinChain('CCXX', 571, 'ccx', [[0x89]], [[0x4b], [0x05]]),\n  getConfig('SRM', 573, bs58EncodeNoCheck, bs58DecodeNoCheck),\n  getConfig('VLX', 574, bs58EncodeNoCheck, bs58DecodeNoCheck),\n  bitcoinBase58Chain('BPS', 576, [[0x00]], [[0x05]]),\n  hexChecksumChain('TFUEL', 589),\n  bech32Chain('GRIN', 592, 'grin'),\n  hexChecksumChain('OPT', 614),\n  hexChecksumChain('XDAI', 700),\n  hexChecksumChain('VET', 703),\n  bech32Chain('BNB', 714, 'bnb'),\n  hexChecksumChain('CLO', 820),\n  eosioChain('HIVE', 825, 'STM'),\n  hexChecksumChain('TOMO', 889),\n  getConfig('HNT', 904, hntAddresEncoder, hntAddressDecoder),\n  bech32Chain('RUNE', 931, 'thor'),\n  bitcoinChain('BCD', 999, 'bcd', [[0x00]], [[0x05]]),\n  hexChecksumChain('TT', 1001),\n  hexChecksumChain('FTM', 1007),\n  bech32Chain('ONE', 1023, 'one'),\n  getConfig('ONT', 1024, ontAddrEncoder, ontAddrDecoder),\n  {\n    coinType: 1729,\n    decoder: tezosAddressDecoder,\n    encoder: tezosAddressEncoder,\n    name: 'XTZ',\n  },\n  cardanoChain('ADA', 1815, 'addr'),\n  getConfig('SC', 1991, siaAddressEncoder, siaAddressDecoder),\n  getConfig('QTUM', 2301, bs58Encode, bs58Decode),\n  eosioChain('GXC', 2303, 'GXC'),\n  getConfig('ELA', 2305, bs58EncodeNoCheck, bs58DecodeNoCheck),\n  getConfig('NAS', 2718, nasAddressEncoder, nasAddressDecoder),\n  {\n    coinType: 3030,\n    decoder: hederaAddressDecoder,\n    encoder: hederaAddressEncoder,\n    name: 'HBAR',\n  },\n  iotaBech32Chain('IOTA', 4218, 'iota'),\n  getConfig('HNS', 5353, hnsAddressEncoder, hnsAddressDecoder),\n  getConfig('STX', 5757, c32checkEncode, c32checkDecode),\n  hexChecksumChain('GO', 6060),\n  bech32mChain('XCH', 8444, 'xch', 90),\n  getConfig('NULS', 8964, nulsAddressEncoder, nulsAddressDecoder),\n  bech32Chain('AVAX', 9000, 'avax'),\n  hexChecksumChain('NRG', 9797),\n  getConfig('ARDR', 16754, ardrAddressEncoder, ardrAddressDecoder),\n  zcashChain('ZEL', 19167, 'za', [[0x1c, 0xb8]], [[0x1c, 0xbd]]),\n  hexChecksumChain('CELO', 52752),\n  bitcoinBase58Chain('WICC', 99999, [[0x49]], [[0x33]]),\n  getConfig('WAN', 5718350, wanChecksummedHexEncoder, wanChecksummedHexDecoder),\n  getConfig('WAVES', 5741564, bs58EncodeNoCheck, wavesAddressDecoder),\n  // EVM chainIds\n  evmChain('BSC', 56),\n  evmChain('MATIC', 137),\n  evmChain('ARB1', 42161)\n];\n\nexport const formatsByName: { [key: string]: IFormat } = Object.assign({}, ...formats.map(x => ({ [x.name]: x })));\nexport const formatsByCoinType: { [key: number]: IFormat } = Object.assign(\n  {},\n  ...formats.map(x => ({ [x.coinType]: x })),\n);\n","'use strict';\n\n// Copied from https://github.com/zelcash/groestl-hash-js\nimport  { groestll } from './groestl';\nimport { int32ArrayToHexString, int32Buffer2Bytes}  from './helper.js';\n\n\nexport function groestl_2(str,format, output) {\n  var a = groestll(str,format,2);\n  a = groestll(a,2,2);\n  a = a.slice(0,8);\n  if (output === 2) {\n    return a;\n  }\n  else if (output === 1) {\n    return int32Buffer2Bytes(a);\n  }\n  else {\n    return int32ArrayToHexString(a);\n  }\n}"]},"metadata":{},"sourceType":"module"}