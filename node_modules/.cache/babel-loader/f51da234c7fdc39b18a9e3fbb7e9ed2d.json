{"ast":null,"code":"import 'cross-fetch/polyfill';\nconst rootUrl = 'https://preimagedb.appspot.com/keccak256/query';\nexport function decryptHashes() {\n  for (var _len = arguments.length, hashes = new Array(_len), _key = 0; _key < _len; _key++) {\n    hashes[_key] = arguments[_key];\n  }\n\n  let trimmedHashes = hashes.map(hash => hash.slice(2));\n  var myHeaders = new Headers();\n  myHeaders.append('Content-Type', 'application/json');\n  return fetch(rootUrl, {\n    method: 'POST',\n    headers: myHeaders,\n    body: JSON.stringify(trimmedHashes)\n  }).then(res => res.json()).then(json => json.data);\n}","map":{"version":3,"sources":["/Users/karel/Documents/eth/my-eth-app/node_modules/@ensdomains/ui/src/preimage.js"],"names":["rootUrl","decryptHashes","hashes","trimmedHashes","map","hash","slice","myHeaders","Headers","append","fetch","method","headers","body","JSON","stringify","then","res","json","data"],"mappings":"AAAA,OAAO,sBAAP;AAEA,MAAMA,OAAO,GAAG,gDAAhB;AAEA,OAAO,SAASC,aAAT,GAAkC;AAAA,oCAARC,MAAQ;AAARA,IAAAA,MAAQ;AAAA;;AACvC,MAAIC,aAAa,GAAGD,MAAM,CAACE,GAAP,CAAWC,IAAI,IAAIA,IAAI,CAACC,KAAL,CAAW,CAAX,CAAnB,CAApB;AAEA,MAAIC,SAAS,GAAG,IAAIC,OAAJ,EAAhB;AACAD,EAAAA,SAAS,CAACE,MAAV,CAAiB,cAAjB,EAAiC,kBAAjC;AAEA,SAAOC,KAAK,CAACV,OAAD,EAAU;AACpBW,IAAAA,MAAM,EAAE,MADY;AAEpBC,IAAAA,OAAO,EAAEL,SAFW;AAGpBM,IAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeZ,aAAf;AAHc,GAAV,CAAL,CAKJa,IALI,CAKCC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EALR,EAMJF,IANI,CAMCE,IAAI,IAAIA,IAAI,CAACC,IANd,CAAP;AAOD","sourcesContent":["import 'cross-fetch/polyfill'\n\nconst rootUrl = 'https://preimagedb.appspot.com/keccak256/query'\n\nexport function decryptHashes(...hashes) {\n  let trimmedHashes = hashes.map(hash => hash.slice(2))\n\n  var myHeaders = new Headers()\n  myHeaders.append('Content-Type', 'application/json')\n\n  return fetch(rootUrl, {\n    method: 'POST',\n    headers: myHeaders,\n    body: JSON.stringify(trimmedHashes)\n  })\n    .then(res => res.json())\n    .then(json => json.data)\n}\n"]},"metadata":{},"sourceType":"module"}