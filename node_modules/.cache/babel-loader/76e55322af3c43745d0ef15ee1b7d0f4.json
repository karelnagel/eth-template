{"ast":null,"code":"\"use strict\";\n\nvar __extends = this && this.__extends || function () {\n  var extendStatics = Object.setPrototypeOf || {\n    __proto__: []\n  } instanceof Array && function (d, b) {\n    d.__proto__ = b;\n  } || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n  };\n\n  return function (d, b) {\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar AbstractCategoryLogger_1 = require(\"./AbstractCategoryLogger\");\n/**\n * Logger which buffers all messages, use with care due to possible high memory footprint.\n * Can be convenient in some cases. Call toString() for full output, or cast to this class\n * and call getMessages() to do something with it yourself.\n */\n\n\nvar CategoryMessageBufferLoggerImpl = function (_super) {\n  __extends(CategoryMessageBufferLoggerImpl, _super);\n\n  function CategoryMessageBufferLoggerImpl() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this.messages = [];\n    return _this;\n  }\n\n  CategoryMessageBufferLoggerImpl.prototype.getMessages = function () {\n    return this.messages;\n  };\n\n  CategoryMessageBufferLoggerImpl.prototype.toString = function () {\n    return this.messages.map(function (msg) {\n      return msg;\n    }).join(\"\\n\");\n  };\n\n  CategoryMessageBufferLoggerImpl.prototype.doLog = function (msg) {\n    var messageFormatter = this._getMessageFormatter();\n\n    var fullMsg;\n\n    if (messageFormatter === null) {\n      fullMsg = this.createDefaultLogMessage(msg);\n    } else {\n      fullMsg = messageFormatter(msg);\n    }\n\n    this.messages.push(fullMsg);\n  };\n\n  return CategoryMessageBufferLoggerImpl;\n}(AbstractCategoryLogger_1.AbstractCategoryLogger);\n\nexports.CategoryMessageBufferLoggerImpl = CategoryMessageBufferLoggerImpl;","map":{"version":3,"sources":["../../../../src/logging/log/category/CategoryMessageBufferImpl.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,IAAA,wBAAA,GAAA,OAAA,CAAA,0BAAA,CAAA;AAEA;;;;AAIG;;;AACH,IAAA,+BAAA,GAAA,UAAA,MAAA,EAAA;AAAqD,EAAA,SAAA,CAAA,+BAAA,EAAA,MAAA,CAAA;;AAArD,WAAA,+BAAA,GAAA;AAAA,QAAA,KAAA,GAAA,MAAA,KAAA,IAAA,IAAA,MAAA,CAAA,KAAA,CAAA,IAAA,EAAA,SAAA,CAAA,IAAA,IAAA;;AAEU,IAAA,KAAA,CAAA,QAAA,GAAqB,EAArB;;AAuBT;;AArBQ,EAAA,+BAAA,CAAA,SAAA,CAAA,WAAA,GAAP,YAAA;AACE,WAAO,KAAK,QAAZ;AACD,GAFM;;AAIA,EAAA,+BAAA,CAAA,SAAA,CAAA,QAAA,GAAP,YAAA;AACE,WAAO,KAAK,QAAL,CAAc,GAAd,CAAkB,UAAC,GAAD,EAAY;AACnC,aAAO,GAAP;AACD,KAFM,EAEJ,IAFI,CAEC,IAFD,CAAP;AAGD,GAJM;;AAMG,EAAA,+BAAA,CAAA,SAAA,CAAA,KAAA,GAAV,UAAgB,GAAhB,EAAuC;AACrC,QAAM,gBAAgB,GAAG,KAAK,oBAAL,EAAzB;;AACA,QAAI,OAAJ;;AACA,QAAI,gBAAgB,KAAK,IAAzB,EAA+B;AAC7B,MAAA,OAAO,GAAG,KAAK,uBAAL,CAA6B,GAA7B,CAAV;AACD,KAFD,MAGK;AACH,MAAA,OAAO,GAAG,gBAAgB,CAAC,GAAD,CAA1B;AACD;;AACD,SAAK,QAAL,CAAc,IAAd,CAAmB,OAAnB;AACD,GAVS;;AAWZ,SAAA,+BAAA;AAAC,CAzBD,CAAqD,wBAAA,CAAA,sBAArD,CAAA;;AAAa,OAAA,CAAA,+BAAA,GAAA,+BAAA","sourceRoot":"","sourcesContent":["\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar AbstractCategoryLogger_1 = require(\"./AbstractCategoryLogger\");\n/**\n * Logger which buffers all messages, use with care due to possible high memory footprint.\n * Can be convenient in some cases. Call toString() for full output, or cast to this class\n * and call getMessages() to do something with it yourself.\n */\nvar CategoryMessageBufferLoggerImpl = (function (_super) {\n    __extends(CategoryMessageBufferLoggerImpl, _super);\n    function CategoryMessageBufferLoggerImpl() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.messages = [];\n        return _this;\n    }\n    CategoryMessageBufferLoggerImpl.prototype.getMessages = function () {\n        return this.messages;\n    };\n    CategoryMessageBufferLoggerImpl.prototype.toString = function () {\n        return this.messages.map(function (msg) {\n            return msg;\n        }).join(\"\\n\");\n    };\n    CategoryMessageBufferLoggerImpl.prototype.doLog = function (msg) {\n        var messageFormatter = this._getMessageFormatter();\n        var fullMsg;\n        if (messageFormatter === null) {\n            fullMsg = this.createDefaultLogMessage(msg);\n        }\n        else {\n            fullMsg = messageFormatter(msg);\n        }\n        this.messages.push(fullMsg);\n    };\n    return CategoryMessageBufferLoggerImpl;\n}(AbstractCategoryLogger_1.AbstractCategoryLogger));\nexports.CategoryMessageBufferLoggerImpl = CategoryMessageBufferLoggerImpl;\n//# sourceMappingURL=CategoryMessageBufferImpl.js.map"]},"metadata":{},"sourceType":"script"}