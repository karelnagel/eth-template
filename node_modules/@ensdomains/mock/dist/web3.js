"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.setupWeb3 = setupWeb3;
exports.getWeb3 = getWeb3;
exports.getWeb3Read = getWeb3Read;
exports.isReadOnly = isReadOnly;
exports.getAccount = getAccount;
exports.getAccounts = getAccounts;
exports.getNetworkId = getNetworkId;
exports.getBlock = getBlock;

var _regenerator = _interopRequireDefault(require("@babel/runtime/regenerator"));

var _asyncToGenerator2 = _interopRequireDefault(require("@babel/runtime/helpers/asyncToGenerator"));

var web3;
var web3Read;
var readOnly = false;

function setupWeb3(_x) {
  return _setupWeb.apply(this, arguments);
}

function _setupWeb() {
  _setupWeb = (0, _asyncToGenerator2["default"])(
  /*#__PURE__*/
  _regenerator["default"].mark(function _callee(_ref) {
    var Web3, provider, id, networkProvider, _id, _networkProvider, url;

    return _regenerator["default"].wrap(function _callee$(_context) {
      while (1) {
        switch (_context.prev = _context.next) {
          case 0:
            Web3 = _ref.Web3, provider = _ref.provider;

            if (!web3) {
              _context.next = 3;
              break;
            }

            return _context.abrupt("return", web3);

          case 3:
            if (!provider) {
              _context.next = 15;
              break;
            }

            //for testing
            web3 = new Web3(provider);
            web3Read = web3;
            _context.prev = 6;
            _context.next = 9;
            return web3.eth.net.getId();

          case 9:
            _context.next = 14;
            break;

          case 11:
            _context.prev = 11;
            _context.t0 = _context["catch"](6);
            console.log('error setting up web3');

          case 14:
            return _context.abrupt("return", web3);

          case 15:
            if (!(window && window.ethereum)) {
              _context.next = 27;
              break;
            }

            web3 = new Web3(window.ethereum);
            _context.t1 = "";
            _context.next = 20;
            return web3.eth.net.getId();

          case 20:
            _context.t2 = _context.sent;
            id = _context.t1.concat.call(_context.t1, _context.t2);
            networkProvider = getNetworkProviderUrl(id);
            web3Read = new Web3(networkProvider === 'private' ? window.ethereum : networkProvider);
            return _context.abrupt("return", web3);

          case 27:
            if (!(window.web3 && window.web3.currentProvider)) {
              _context.next = 39;
              break;
            }

            web3 = new Web3(window.web3.currentProvider);
            _context.t3 = "";
            _context.next = 32;
            return web3.eth.net.getId();

          case 32:
            _context.t4 = _context.sent;
            _id = _context.t3.concat.call(_context.t3, _context.t4);
            _networkProvider = getNetworkProviderUrl(_id);
            web3Read = new Web3(_networkProvider === 'private' ? window.web3.currentProvider : _networkProvider);
            return _context.abrupt("return", web3);

          case 39:
            _context.prev = 39;
            url = 'http://localhost:8545';
            _context.next = 43;
            return fetch(url);

          case 43:
            console.log('local node active');
            web3 = new Web3(new Web3.providers.HttpProvider(url));
            web3Read = web3;
            _context.next = 59;
            break;

          case 48:
            _context.prev = 48;
            _context.t5 = _context["catch"](39);

            if (!(_context.t5.readyState === 4 && (_context.t5.status === 400 || _context.t5.status === 200))) {
              _context.next = 54;
              break;
            }

            // the endpoint is active
            console.log('Success');
            _context.next = 59;
            break;

          case 54:
            console.log('No web3 instance injected. Falling back to cloud provider.');
            readOnly = true;
            web3 = new Web3(getNetworkProviderUrl('1'));
            web3Read = web3;
            return _context.abrupt("return", web3);

          case 59:
          case "end":
            return _context.stop();
        }
      }
    }, _callee, null, [[6, 11], [39, 48]]);
  }));
  return _setupWeb.apply(this, arguments);
}

function getWeb3() {
  return _getWeb.apply(this, arguments);
}

function _getWeb() {
  _getWeb = (0, _asyncToGenerator2["default"])(
  /*#__PURE__*/
  _regenerator["default"].mark(function _callee2() {
    return _regenerator["default"].wrap(function _callee2$(_context2) {
      while (1) {
        switch (_context2.prev = _context2.next) {
          case 0:
            if (web3) {
              _context2.next = 2;
              break;
            }

            throw new Error('Web3 has not been instantiated, please call setupWeb3() first');

          case 2:
            return _context2.abrupt("return", web3);

          case 3:
          case "end":
            return _context2.stop();
        }
      }
    }, _callee2);
  }));
  return _getWeb.apply(this, arguments);
}

function getWeb3Read() {
  return _getWeb3Read.apply(this, arguments);
}

function _getWeb3Read() {
  _getWeb3Read = (0, _asyncToGenerator2["default"])(
  /*#__PURE__*/
  _regenerator["default"].mark(function _callee3() {
    return _regenerator["default"].wrap(function _callee3$(_context3) {
      while (1) {
        switch (_context3.prev = _context3.next) {
          case 0:
            if (web3Read) {
              _context3.next = 2;
              break;
            }

            throw new Error('Web3 has not been instantiated, please call setupWeb3() first');

          case 2:
            return _context3.abrupt("return", web3Read);

          case 3:
          case "end":
            return _context3.stop();
        }
      }
    }, _callee3);
  }));
  return _getWeb3Read.apply(this, arguments);
}

function isReadOnly() {
  return readOnly;
}

function getNetworkProviderUrl(id) {
  switch (id) {
    case '1':
      return "https://mainnet.infura.io/v3/90f210707d3c450f847659dc9a3436ea";

    case '3':
      return "https://ropsten.infura.io/v3/90f210707d3c450f847659dc9a3436ea";

    case '4':
      return "https://rinkeby.infura.io/v3/90f210707d3c450f847659dc9a3436ea";

    case '5':
      return "https://goerli.infura.io/v3/90f210707d3c450f847659dc9a3436ea";

    default:
      return 'private';
  }
}

function getAccount() {
  return _getAccount.apply(this, arguments);
}

function _getAccount() {
  _getAccount = (0, _asyncToGenerator2["default"])(
  /*#__PURE__*/
  _regenerator["default"].mark(function _callee4() {
    var accounts;
    return _regenerator["default"].wrap(function _callee4$(_context4) {
      while (1) {
        switch (_context4.prev = _context4.next) {
          case 0:
            _context4.next = 2;
            return getAccounts();

          case 2:
            accounts = _context4.sent;
            return _context4.abrupt("return", accounts[0]);

          case 4:
          case "end":
            return _context4.stop();
        }
      }
    }, _callee4);
  }));
  return _getAccount.apply(this, arguments);
}

function getAccounts() {
  return _getAccounts.apply(this, arguments);
}

function _getAccounts() {
  _getAccounts = (0, _asyncToGenerator2["default"])(
  /*#__PURE__*/
  _regenerator["default"].mark(function _callee5() {
    var _web, accounts, _accounts;

    return _regenerator["default"].wrap(function _callee5$(_context5) {
      while (1) {
        switch (_context5.prev = _context5.next) {
          case 0:
            _context5.prev = 0;
            _context5.next = 3;
            return getWeb3();

          case 3:
            _web = _context5.sent;
            _context5.next = 6;
            return _web.eth.getAccounts();

          case 6:
            accounts = _context5.sent;

            if (!(accounts.length > 0)) {
              _context5.next = 11;
              break;
            }

            return _context5.abrupt("return", accounts);

          case 11:
            if (!window.ethereum) {
              _context5.next = 25;
              break;
            }

            _context5.prev = 12;
            _context5.next = 15;
            return window.ethereum.enable();

          case 15:
            _accounts = _context5.sent;
            return _context5.abrupt("return", _accounts);

          case 19:
            _context5.prev = 19;
            _context5.t0 = _context5["catch"](12);
            console.warn('Did not allow app to access dapp browser');
            throw _context5.t0;

          case 23:
            _context5.next = 26;
            break;

          case 25:
            return _context5.abrupt("return", []);

          case 26:
            _context5.next = 31;
            break;

          case 28:
            _context5.prev = 28;
            _context5.t1 = _context5["catch"](0);
            return _context5.abrupt("return", []);

          case 31:
          case "end":
            return _context5.stop();
        }
      }
    }, _callee5, null, [[0, 28], [12, 19]]);
  }));
  return _getAccounts.apply(this, arguments);
}

function getNetworkId() {
  return _getNetworkId.apply(this, arguments);
}

function _getNetworkId() {
  _getNetworkId = (0, _asyncToGenerator2["default"])(
  /*#__PURE__*/
  _regenerator["default"].mark(function _callee6() {
    var web3;
    return _regenerator["default"].wrap(function _callee6$(_context6) {
      while (1) {
        switch (_context6.prev = _context6.next) {
          case 0:
            _context6.next = 2;
            return getWeb3();

          case 2:
            web3 = _context6.sent;
            return _context6.abrupt("return", web3.eth.net.getId());

          case 4:
          case "end":
            return _context6.stop();
        }
      }
    }, _callee6);
  }));
  return _getNetworkId.apply(this, arguments);
}

function getBlock() {
  return _getBlock.apply(this, arguments);
}

function _getBlock() {
  _getBlock = (0, _asyncToGenerator2["default"])(
  /*#__PURE__*/
  _regenerator["default"].mark(function _callee7() {
    var web3, block;
    return _regenerator["default"].wrap(function _callee7$(_context7) {
      while (1) {
        switch (_context7.prev = _context7.next) {
          case 0:
            _context7.next = 2;
            return getWeb3();

          case 2:
            web3 = _context7.sent;
            _context7.next = 5;
            return web3.eth.getBlock('latest');

          case 5:
            block = _context7.sent;
            return _context7.abrupt("return", {
              number: block.number,
              timestamp: block.timestamp
            });

          case 7:
          case "end":
            return _context7.stop();
        }
      }
    }, _callee7);
  }));
  return _getBlock.apply(this, arguments);
}