"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.NameLogger = void 0;

var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));

var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));

var _chalk = _interopRequireDefault(require("chalk"));

var _table = require("table");

var NameLogger =
/*#__PURE__*/
function () {
  function NameLogger(_ref) {
    var sha3 = _ref.sha3,
        namehash = _ref.namehash;
    (0, _classCallCheck2["default"])(this, NameLogger);
    this.data = {};
    this.sha3 = sha3;
    this.namehash = namehash;
  }

  (0, _createClass2["default"])(NameLogger, [{
    key: "record",
    value: function record(name, values) {
      this.data[name] = values;
    }
  }, {
    key: "generateTable",
    value: function generateTable() {
      var _this = this;

      var contractNames = Object.keys(this.data);
      var contractAddressesTable = contractNames.map(function (key) {
        var label = _this.data[key].label;
        var status = _this.data[key].migrated ? _chalk["default"].green('yes') : _chalk["default"].red('no');
        return [key, _this.namehash(key), label, _this.sha3(label), status];
      });
      contractAddressesTable.unshift(['domain', 'namehash of domain', 'label', 'labelhash', 'migrated']);
      this.contractAddressesTable = contractAddressesTable;
      return contractAddressesTable;
    }
  }, {
    key: "print",
    value: function print() {
      var config = {
        columns: {
          0: {
            alignment: 'left',
            width: 20
          },
          1: {
            alignment: 'center',
            width: 66
          },
          2: {
            alignment: 'left',
            width: 15
          },
          3: {
            alignment: 'center',
            width: 66
          },
          4: {
            alignment: 'left',
            width: 10
          }
        }
      };
      return (0, _table.table)(this.contractAddressesTable, config);
    }
  }]);
  return NameLogger;
}();

exports.NameLogger = NameLogger;