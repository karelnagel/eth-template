"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.mockENS = mockENS;

var _regenerator = _interopRequireDefault(require("@babel/runtime/regenerator"));

var _asyncToGenerator2 = _interopRequireDefault(require("@babel/runtime/helpers/asyncToGenerator"));

var _deployENS = _interopRequireDefault(require("./deployENS.js"));

var _web = _interopRequireDefault(require("web3"));

var _fs = _interopRequireDefault(require("fs"));

var web3;

function getAccounts(_x) {
  return _getAccounts.apply(this, arguments);
}

function _getAccounts() {
  _getAccounts = (0, _asyncToGenerator2["default"])(
  /*#__PURE__*/
  _regenerator["default"].mark(function _callee(web3) {
    return _regenerator["default"].wrap(function _callee$(_context) {
      while (1) {
        switch (_context.prev = _context.next) {
          case 0:
            return _context.abrupt("return", web3.eth.getAccounts());

          case 1:
          case "end":
            return _context.stop();
        }
      }
    }, _callee);
  }));
  return _getAccounts.apply(this, arguments);
}

function setupWeb3(_x2) {
  return _setupWeb.apply(this, arguments);
}

function _setupWeb() {
  _setupWeb = (0, _asyncToGenerator2["default"])(
  /*#__PURE__*/
  _regenerator["default"].mark(function _callee2(customProvider) {
    var networkId;
    return _regenerator["default"].wrap(function _callee2$(_context2) {
      while (1) {
        switch (_context2.prev = _context2.next) {
          case 0:
            web3 = new _web["default"](customProvider);
            _context2.next = 3;
            return web3.eth.net.getId();

          case 3:
            networkId = _context2.sent;
            return _context2.abrupt("return", {
              web3: web3,
              networkId: networkId
            });

          case 5:
          case "end":
            return _context2.stop();
        }
      }
    }, _callee2);
  }));
  return _setupWeb.apply(this, arguments);
}

function mockENS(_x3) {
  return _mockENS.apply(this, arguments);
}

function _mockENS() {
  _mockENS = (0, _asyncToGenerator2["default"])(
  /*#__PURE__*/
  _regenerator["default"].mark(function _callee3(_ref) {
    var dnssec, provider, _ref2, web3, accounts, addresses, ensAddress, controllerAddress, legacyAuctionRegistrarAddress;

    return _regenerator["default"].wrap(function _callee3$(_context3) {
      while (1) {
        switch (_context3.prev = _context3.next) {
          case 0:
            dnssec = _ref.dnssec;
            provider = new _web["default"].providers.HttpProvider('http://localhost:8545');
            _context3.next = 4;
            return setupWeb3(provider);

          case 4:
            _ref2 = _context3.sent;
            web3 = _ref2.web3;
            _context3.next = 8;
            return getAccounts(web3);

          case 8:
            accounts = _context3.sent;
            _context3.next = 11;
            return (0, _deployENS["default"])({
              web3: web3,
              accounts: accounts,
              dnssec: dnssec
            });

          case 11:
            addresses = _context3.sent;
            ensAddress = addresses.ensAddress, controllerAddress = addresses.controllerAddress, legacyAuctionRegistrarAddress = addresses.legacyAuctionRegistrarAddress;

            _fs["default"].writeFileSync('./cypress.env.json', JSON.stringify(addresses));

            _fs["default"].writeFile('./.env.local', "REACT_APP_ENS_ADDRESS=".concat(ensAddress), function (err) {
              if (err) throw err;
              console.log("Successfully wrote ENS address ".concat(ensAddress, " to .env.local"));
            });

          case 15:
          case "end":
            return _context3.stop();
        }
      }
    }, _callee3);
  }));
  return _mockENS.apply(this, arguments);
}